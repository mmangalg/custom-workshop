{
  "author": {
    "name": "Amazon Web Services",
    "organization": true,
    "roles": [
      "author"
    ],
    "url": "https://aws.amazon.com"
  },
  "dependencies": {
    "@aws-cdk/aws-apigateway": "1.152.0",
    "@aws-cdk/aws-cloudwatch": "1.152.0",
    "@aws-cdk/aws-codebuild": "1.152.0",
    "@aws-cdk/aws-dynamodb": "1.152.0",
    "@aws-cdk/aws-ec2": "1.152.0",
    "@aws-cdk/aws-ecr": "1.152.0",
    "@aws-cdk/aws-ecr-assets": "1.152.0",
    "@aws-cdk/aws-ecs": "1.152.0",
    "@aws-cdk/aws-eks": "1.152.0",
    "@aws-cdk/aws-events": "1.152.0",
    "@aws-cdk/aws-iam": "1.152.0",
    "@aws-cdk/aws-kms": "1.152.0",
    "@aws-cdk/aws-lambda": "1.152.0",
    "@aws-cdk/aws-logs": "1.152.0",
    "@aws-cdk/aws-s3": "1.152.0",
    "@aws-cdk/aws-sns": "1.152.0",
    "@aws-cdk/aws-sqs": "1.152.0",
    "@aws-cdk/aws-stepfunctions": "1.152.0",
    "@aws-cdk/core": "1.152.0",
    "@aws-cdk/custom-resources": "1.152.0",
    "@aws-cdk/lambda-layer-awscli": "1.152.0",
    "constructs": "^3.3.69"
  },
  "dependencyClosure": {
    "@aws-cdk/assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.Assets",
          "packageId": "Amazon.CDK.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.assets"
        },
        "js": {
          "npm": "@aws-cdk/assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.assets",
          "module": "aws_cdk.assets"
        }
      }
    },
    "@aws-cdk/aws-acmpca": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ACMPCA",
          "packageId": "Amazon.CDK.AWS.ACMPCA"
        },
        "java": {
          "maven": {
            "artifactId": "acmpca",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.acmpca"
        },
        "js": {
          "npm": "@aws-cdk/aws-acmpca"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-acmpca",
          "module": "aws_cdk.aws_acmpca"
        }
      }
    },
    "@aws-cdk/aws-apigateway": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.APIGateway",
          "packageId": "Amazon.CDK.AWS.APIGateway"
        },
        "java": {
          "maven": {
            "artifactId": "apigateway",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.apigateway"
        },
        "js": {
          "npm": "@aws-cdk/aws-apigateway"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-apigateway",
          "module": "aws_cdk.aws_apigateway"
        }
      }
    },
    "@aws-cdk/aws-applicationautoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ApplicationAutoScaling",
          "packageId": "Amazon.CDK.AWS.ApplicationAutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "applicationautoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.applicationautoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-applicationautoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-applicationautoscaling",
          "module": "aws_cdk.aws_applicationautoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling",
          "packageId": "Amazon.CDK.AWS.AutoScaling"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling",
          "module": "aws_cdk.aws_autoscaling"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-common": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.Common",
          "packageId": "Amazon.CDK.AWS.AutoScaling.Common"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-common",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.common"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-common"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-common",
          "module": "aws_cdk.aws_autoscaling_common"
        }
      }
    },
    "@aws-cdk/aws-autoscaling-hooktargets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.AutoScaling.HookTargets",
          "packageId": "Amazon.CDK.AWS.AutoScaling.HookTargets"
        },
        "java": {
          "maven": {
            "artifactId": "autoscaling-hooktargets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.autoscaling.hooktargets"
        },
        "js": {
          "npm": "@aws-cdk/aws-autoscaling-hooktargets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-autoscaling-hooktargets",
          "module": "aws_cdk.aws_autoscaling_hooktargets"
        }
      }
    },
    "@aws-cdk/aws-certificatemanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CertificateManager",
          "packageId": "Amazon.CDK.AWS.CertificateManager"
        },
        "java": {
          "maven": {
            "artifactId": "certificatemanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.certificatemanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-certificatemanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-certificatemanager",
          "module": "aws_cdk.aws_certificatemanager"
        }
      }
    },
    "@aws-cdk/aws-cloudformation": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFormation",
          "packageId": "Amazon.CDK.AWS.CloudFormation"
        },
        "java": {
          "maven": {
            "artifactId": "cloudformation",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudformation"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudformation"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudformation",
          "module": "aws_cdk.aws_cloudformation"
        }
      }
    },
    "@aws-cdk/aws-cloudfront": {
      "submodules": {
        "@aws-cdk/aws-cloudfront.experimental": {}
      },
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudFront",
          "packageId": "Amazon.CDK.AWS.CloudFront"
        },
        "java": {
          "maven": {
            "artifactId": "cloudfront",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudfront"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudfront"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudfront",
          "module": "aws_cdk.aws_cloudfront"
        }
      }
    },
    "@aws-cdk/aws-cloudwatch": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CloudWatch",
          "packageId": "Amazon.CDK.AWS.CloudWatch"
        },
        "java": {
          "maven": {
            "artifactId": "cloudwatch",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cloudwatch"
        },
        "js": {
          "npm": "@aws-cdk/aws-cloudwatch"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cloudwatch",
          "module": "aws_cdk.aws_cloudwatch"
        }
      }
    },
    "@aws-cdk/aws-codebuild": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeBuild",
          "packageId": "Amazon.CDK.AWS.CodeBuild"
        },
        "java": {
          "maven": {
            "artifactId": "codebuild",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codebuild"
        },
        "js": {
          "npm": "@aws-cdk/aws-codebuild"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codebuild",
          "module": "aws_cdk.aws_codebuild"
        }
      }
    },
    "@aws-cdk/aws-codecommit": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeCommit",
          "packageId": "Amazon.CDK.AWS.CodeCommit"
        },
        "java": {
          "maven": {
            "artifactId": "codecommit",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codecommit"
        },
        "js": {
          "npm": "@aws-cdk/aws-codecommit"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codecommit",
          "module": "aws_cdk.aws_codecommit"
        }
      }
    },
    "@aws-cdk/aws-codeguruprofiler": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeGuruProfiler",
          "packageId": "Amazon.CDK.AWS.CodeGuruProfiler"
        },
        "java": {
          "maven": {
            "artifactId": "codeguruprofiler",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codeguruprofiler"
        },
        "js": {
          "npm": "@aws-cdk/aws-codeguruprofiler"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codeguruprofiler",
          "module": "aws_cdk.aws_codeguruprofiler"
        }
      }
    },
    "@aws-cdk/aws-codestarnotifications": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.CodeStarNotifications",
          "packageId": "Amazon.CDK.AWS.CodeStarNotifications"
        },
        "java": {
          "maven": {
            "artifactId": "codestarnotifications",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.codestarnotifications"
        },
        "js": {
          "npm": "@aws-cdk/aws-codestarnotifications"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-codestarnotifications",
          "module": "aws_cdk.aws_codestarnotifications"
        }
      }
    },
    "@aws-cdk/aws-cognito": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Cognito",
          "packageId": "Amazon.CDK.AWS.Cognito"
        },
        "java": {
          "maven": {
            "artifactId": "cognito",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.cognito"
        },
        "js": {
          "npm": "@aws-cdk/aws-cognito"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-cognito",
          "module": "aws_cdk.aws_cognito"
        }
      }
    },
    "@aws-cdk/aws-dynamodb": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.DynamoDB",
          "packageId": "Amazon.CDK.AWS.DynamoDB"
        },
        "java": {
          "maven": {
            "artifactId": "dynamodb",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.dynamodb"
        },
        "js": {
          "npm": "@aws-cdk/aws-dynamodb"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-dynamodb",
          "module": "aws_cdk.aws_dynamodb"
        }
      }
    },
    "@aws-cdk/aws-ec2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EC2",
          "packageId": "Amazon.CDK.AWS.EC2"
        },
        "java": {
          "maven": {
            "artifactId": "ec2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ec2"
        },
        "js": {
          "npm": "@aws-cdk/aws-ec2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ec2",
          "module": "aws_cdk.aws_ec2"
        }
      }
    },
    "@aws-cdk/aws-ecr": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECR",
          "packageId": "Amazon.CDK.AWS.ECR"
        },
        "java": {
          "maven": {
            "artifactId": "ecr",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr",
          "module": "aws_cdk.aws_ecr"
        }
      }
    },
    "@aws-cdk/aws-ecr-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Ecr.Assets",
          "packageId": "Amazon.CDK.ECR.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "ecr-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecr.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecr-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecr-assets",
          "module": "aws_cdk.aws_ecr_assets"
        }
      }
    },
    "@aws-cdk/aws-ecs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ECS",
          "packageId": "Amazon.CDK.AWS.ECS"
        },
        "java": {
          "maven": {
            "artifactId": "ecs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ecs"
        },
        "js": {
          "npm": "@aws-cdk/aws-ecs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ecs",
          "module": "aws_cdk.aws_ecs"
        }
      }
    },
    "@aws-cdk/aws-efs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EFS",
          "packageId": "Amazon.CDK.AWS.EFS"
        },
        "java": {
          "maven": {
            "artifactId": "efs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.efs"
        },
        "js": {
          "npm": "@aws-cdk/aws-efs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-efs",
          "module": "aws_cdk.aws_efs"
        }
      }
    },
    "@aws-cdk/aws-eks": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.EKS",
          "packageId": "Amazon.CDK.AWS.EKS"
        },
        "java": {
          "maven": {
            "artifactId": "eks",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.eks"
        },
        "js": {
          "npm": "@aws-cdk/aws-eks"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-eks",
          "module": "aws_cdk.aws_eks"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancing": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancing",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancing"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancing",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancing"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancing"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-elasticloadbalancing",
          "module": "aws_cdk.aws_elasticloadbalancing"
        }
      }
    },
    "@aws-cdk/aws-elasticloadbalancingv2": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ElasticLoadBalancingV2",
          "packageId": "Amazon.CDK.AWS.ElasticLoadBalancingV2"
        },
        "java": {
          "maven": {
            "artifactId": "elasticloadbalancingv2",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.elasticloadbalancingv2"
        },
        "js": {
          "npm": "@aws-cdk/aws-elasticloadbalancingv2"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-elasticloadbalancingv2",
          "module": "aws_cdk.aws_elasticloadbalancingv2"
        }
      }
    },
    "@aws-cdk/aws-events": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Events",
          "packageId": "Amazon.CDK.AWS.Events"
        },
        "java": {
          "maven": {
            "artifactId": "events",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.events"
        },
        "js": {
          "npm": "@aws-cdk/aws-events"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-events",
          "module": "aws_cdk.aws_events"
        }
      }
    },
    "@aws-cdk/aws-globalaccelerator": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.GlobalAccelerator",
          "packageId": "Amazon.CDK.AWS.GlobalAccelerator"
        },
        "java": {
          "maven": {
            "artifactId": "globalaccelerator",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.globalaccelerator"
        },
        "js": {
          "npm": "@aws-cdk/aws-globalaccelerator"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-globalaccelerator",
          "module": "aws_cdk.aws_globalaccelerator"
        }
      }
    },
    "@aws-cdk/aws-iam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.IAM",
          "packageId": "Amazon.CDK.AWS.IAM"
        },
        "java": {
          "maven": {
            "artifactId": "iam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.iam"
        },
        "js": {
          "npm": "@aws-cdk/aws-iam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-iam",
          "module": "aws_cdk.aws_iam"
        }
      }
    },
    "@aws-cdk/aws-kinesis": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Kinesis",
          "packageId": "Amazon.CDK.AWS.Kinesis"
        },
        "java": {
          "maven": {
            "artifactId": "kinesis",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kinesis"
        },
        "js": {
          "npm": "@aws-cdk/aws-kinesis"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kinesis",
          "module": "aws_cdk.aws_kinesis"
        }
      }
    },
    "@aws-cdk/aws-kms": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.KMS",
          "packageId": "Amazon.CDK.AWS.KMS"
        },
        "java": {
          "maven": {
            "artifactId": "kms",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.kms"
        },
        "js": {
          "npm": "@aws-cdk/aws-kms"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-kms",
          "module": "aws_cdk.aws_kms"
        }
      }
    },
    "@aws-cdk/aws-lambda": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Lambda",
          "packageId": "Amazon.CDK.AWS.Lambda"
        },
        "java": {
          "maven": {
            "artifactId": "lambda",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.lambda"
        },
        "js": {
          "npm": "@aws-cdk/aws-lambda"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-lambda",
          "module": "aws_cdk.aws_lambda"
        }
      }
    },
    "@aws-cdk/aws-logs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Logs",
          "packageId": "Amazon.CDK.AWS.Logs"
        },
        "java": {
          "maven": {
            "artifactId": "logs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.logs"
        },
        "js": {
          "npm": "@aws-cdk/aws-logs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-logs",
          "module": "aws_cdk.aws_logs"
        }
      }
    },
    "@aws-cdk/aws-route53": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53",
          "packageId": "Amazon.CDK.AWS.Route53"
        },
        "java": {
          "maven": {
            "artifactId": "route53",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53",
          "module": "aws_cdk.aws_route53"
        }
      }
    },
    "@aws-cdk/aws-route53-targets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Route53.Targets",
          "packageId": "Amazon.CDK.AWS.Route53.Targets"
        },
        "java": {
          "maven": {
            "artifactId": "route53-targets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.route53.targets"
        },
        "js": {
          "npm": "@aws-cdk/aws-route53-targets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-route53-targets",
          "module": "aws_cdk.aws_route53_targets"
        }
      }
    },
    "@aws-cdk/aws-s3": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3",
          "packageId": "Amazon.CDK.AWS.S3"
        },
        "java": {
          "maven": {
            "artifactId": "s3",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3",
          "module": "aws_cdk.aws_s3"
        }
      }
    },
    "@aws-cdk/aws-s3-assets": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.S3.Assets",
          "packageId": "Amazon.CDK.AWS.S3.Assets"
        },
        "java": {
          "maven": {
            "artifactId": "s3-assets",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.s3.assets"
        },
        "js": {
          "npm": "@aws-cdk/aws-s3-assets"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-s3-assets",
          "module": "aws_cdk.aws_s3_assets"
        }
      }
    },
    "@aws-cdk/aws-sam": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SAM",
          "packageId": "Amazon.CDK.AWS.SAM"
        },
        "java": {
          "maven": {
            "artifactId": "sam",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sam"
        },
        "js": {
          "npm": "@aws-cdk/aws-sam"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sam",
          "module": "aws_cdk.aws_sam"
        }
      }
    },
    "@aws-cdk/aws-secretsmanager": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SecretsManager",
          "packageId": "Amazon.CDK.AWS.SecretsManager"
        },
        "java": {
          "maven": {
            "artifactId": "secretsmanager",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.secretsmanager"
        },
        "js": {
          "npm": "@aws-cdk/aws-secretsmanager"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-secretsmanager",
          "module": "aws_cdk.aws_secretsmanager"
        }
      }
    },
    "@aws-cdk/aws-servicediscovery": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.ServiceDiscovery",
          "packageId": "Amazon.CDK.AWS.ServiceDiscovery"
        },
        "java": {
          "maven": {
            "artifactId": "servicediscovery",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.servicediscovery"
        },
        "js": {
          "npm": "@aws-cdk/aws-servicediscovery"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-servicediscovery",
          "module": "aws_cdk.aws_servicediscovery"
        }
      }
    },
    "@aws-cdk/aws-signer": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.Signer",
          "packageId": "Amazon.CDK.AWS.Signer"
        },
        "java": {
          "maven": {
            "artifactId": "signer",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.signer"
        },
        "js": {
          "npm": "@aws-cdk/aws-signer"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-signer",
          "module": "aws_cdk.aws_signer"
        }
      }
    },
    "@aws-cdk/aws-sns": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS",
          "packageId": "Amazon.CDK.AWS.SNS"
        },
        "java": {
          "maven": {
            "artifactId": "sns",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns",
          "module": "aws_cdk.aws_sns"
        }
      }
    },
    "@aws-cdk/aws-sns-subscriptions": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SNS.Subscriptions",
          "packageId": "Amazon.CDK.AWS.SNS.Subscriptions"
        },
        "java": {
          "maven": {
            "artifactId": "sns-subscriptions",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sns.subscriptions"
        },
        "js": {
          "npm": "@aws-cdk/aws-sns-subscriptions"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sns-subscriptions",
          "module": "aws_cdk.aws_sns_subscriptions"
        }
      }
    },
    "@aws-cdk/aws-sqs": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SQS",
          "packageId": "Amazon.CDK.AWS.SQS"
        },
        "java": {
          "maven": {
            "artifactId": "sqs",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.sqs"
        },
        "js": {
          "npm": "@aws-cdk/aws-sqs"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-sqs",
          "module": "aws_cdk.aws_sqs"
        }
      }
    },
    "@aws-cdk/aws-ssm": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.SSM",
          "packageId": "Amazon.CDK.AWS.SSM"
        },
        "java": {
          "maven": {
            "artifactId": "ssm",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.ssm"
        },
        "js": {
          "npm": "@aws-cdk/aws-ssm"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-ssm",
          "module": "aws_cdk.aws_ssm"
        }
      }
    },
    "@aws-cdk/aws-stepfunctions": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.AWS.StepFunctions",
          "packageId": "Amazon.CDK.AWS.StepFunctions"
        },
        "java": {
          "maven": {
            "artifactId": "stepfunctions",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.services.stepfunctions"
        },
        "js": {
          "npm": "@aws-cdk/aws-stepfunctions"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.aws-stepfunctions",
          "module": "aws_cdk.aws_stepfunctions"
        }
      }
    },
    "@aws-cdk/cloud-assembly-schema": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CloudAssembly.Schema",
          "packageId": "Amazon.CDK.CloudAssembly.Schema"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cloud-assembly-schema",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cloudassembly.schema"
        },
        "js": {
          "npm": "@aws-cdk/cloud-assembly-schema"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cloud-assembly-schema",
          "module": "aws_cdk.cloud_assembly_schema"
        }
      }
    },
    "@aws-cdk/core": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK",
          "packageId": "Amazon.CDK"
        },
        "java": {
          "maven": {
            "artifactId": "core",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.core"
        },
        "js": {
          "npm": "@aws-cdk/core"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.core",
          "module": "aws_cdk.core"
        }
      }
    },
    "@aws-cdk/custom-resources": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CustomResources",
          "packageId": "Amazon.CDK.AWS.CustomResources"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-customresources",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.customresources"
        },
        "js": {
          "npm": "@aws-cdk/custom-resources"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.custom-resources",
          "module": "aws_cdk.custom_resources"
        }
      }
    },
    "@aws-cdk/cx-api": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.CXAPI",
          "packageId": "Amazon.CDK.CXAPI"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-cx-api",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.cxapi"
        },
        "js": {
          "npm": "@aws-cdk/cx-api"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.cx-api",
          "module": "aws_cdk.cx_api"
        }
      }
    },
    "@aws-cdk/lambda-layer-awscli": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.LambdaLayer.AwsCli",
          "packageId": "Amazon.CDK.LambdaLayer.AwsCli"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-lambda-layer-awscli",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.lambdalayer.awscli"
        },
        "js": {
          "npm": "@aws-cdk/lambda-layer-awscli"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.lambda-layer-awscli",
          "module": "aws_cdk.lambda_layer_awscli"
        }
      }
    },
    "@aws-cdk/lambda-layer-kubectl": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.LambdaLayer.Kubectl",
          "packageId": "Amazon.CDK.LambdaLayer.Kubectl"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-lambda-layer-kubectl",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.lambdalayer.kubectl"
        },
        "js": {
          "npm": "@aws-cdk/lambda-layer-kubectl"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.lambda-layer-kubectl",
          "module": "aws_cdk.lambda_layer_kubectl"
        }
      }
    },
    "@aws-cdk/lambda-layer-node-proxy-agent": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.LambdaLayer.NodeProxyAgent",
          "packageId": "Amazon.CDK.LambdaLayer.NodeProxyAgent"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-lambda-layer-node-proxy-agent",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.lambda.layer.node.proxy.agent"
        },
        "js": {
          "npm": "@aws-cdk/lambda-layer-node-proxy-agent"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.lambda-layer-node-proxy-agent",
          "module": "aws_cdk.lambda_layer_node_proxy_agent"
        }
      }
    },
    "@aws-cdk/region-info": {
      "targets": {
        "dotnet": {
          "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
          "namespace": "Amazon.CDK.RegionInfo",
          "packageId": "Amazon.CDK.RegionInfo"
        },
        "java": {
          "maven": {
            "artifactId": "cdk-region-info",
            "groupId": "software.amazon.awscdk"
          },
          "package": "software.amazon.awscdk.regioninfo"
        },
        "js": {
          "npm": "@aws-cdk/region-info"
        },
        "python": {
          "classifiers": [
            "Framework :: AWS CDK",
            "Framework :: AWS CDK :: 1"
          ],
          "distName": "aws-cdk.region-info",
          "module": "aws_cdk.region_info"
        }
      }
    },
    "constructs": {
      "targets": {
        "dotnet": {
          "namespace": "Constructs",
          "packageId": "Constructs"
        },
        "go": {
          "moduleName": "github.com/aws/constructs-go"
        },
        "java": {
          "maven": {
            "artifactId": "constructs",
            "groupId": "software.constructs"
          },
          "package": "software.constructs"
        },
        "js": {
          "npm": "constructs"
        },
        "python": {
          "distName": "constructs",
          "module": "constructs"
        }
      }
    }
  },
  "description": "Task integrations for AWS StepFunctions",
  "docs": {
    "stability": "stable"
  },
  "homepage": "https://github.com/aws/aws-cdk",
  "jsiiVersion": "1.55.1 (build 07d2d90)",
  "keywords": [
    "aws",
    "cdk",
    "constructs",
    "stepfunctions",
    "stepfunctions-tasks"
  ],
  "license": "Apache-2.0",
  "metadata": {
    "jsii": {
      "compiledWithDeprecationWarnings": true,
      "pacmak": {
        "hasDefaultInterfaces": true
      },
      "rosetta": {
        "strict": true
      }
    }
  },
  "name": "@aws-cdk/aws-stepfunctions-tasks",
  "readme": {
    "markdown": "# Tasks for AWS Step Functions\n<!--BEGIN STABILITY BANNER-->\n\n---\n\n![cdk-constructs: Stable](https://img.shields.io/badge/cdk--constructs-stable-success.svg?style=for-the-badge)\n\n---\n\n<!--END STABILITY BANNER-->\n\n[AWS Step Functions](https://docs.aws.amazon.com/step-functions/latest/dg/welcome.html) is a web service that enables you to coordinate the\ncomponents of distributed applications and microservices using visual workflows.\nYou build applications from individual components that each perform a discrete\nfunction, or task, allowing you to scale and change applications quickly.\n\nA [Task](https://docs.aws.amazon.com/step-functions/latest/dg/amazon-states-language-task-state.html) state represents a single unit of work performed by a state machine.\nAll work in your state machine is performed by tasks.\n\nThis module is part of the [AWS Cloud Development Kit](https://github.com/aws/aws-cdk) project.\n\n## Table Of Contents\n\n- [Tasks for AWS Step Functions](#tasks-for-aws-step-functions)\n  - [Table Of Contents](#table-of-contents)\n  - [Task](#task)\n  - [Paths](#paths)\n    - [InputPath](#inputpath)\n    - [OutputPath](#outputpath)\n    - [ResultPath](#resultpath)\n  - [Task parameters from the state JSON](#task-parameters-from-the-state-json)\n  - [Evaluate Expression](#evaluate-expression)\n  - [API Gateway](#api-gateway)\n    - [Call REST API Endpoint](#call-rest-api-endpoint)\n    - [Call HTTP API Endpoint](#call-http-api-endpoint)\n  - [AWS SDK](#aws-sdk)\n  - [Athena](#athena)\n    - [StartQueryExecution](#startqueryexecution)\n    - [GetQueryExecution](#getqueryexecution)\n    - [GetQueryResults](#getqueryresults)\n    - [StopQueryExecution](#stopqueryexecution)\n  - [Batch](#batch)\n    - [SubmitJob](#submitjob)\n  - [CodeBuild](#codebuild)\n    - [StartBuild](#startbuild)\n  - [DynamoDB](#dynamodb)\n    - [GetItem](#getitem)\n    - [PutItem](#putitem)\n    - [DeleteItem](#deleteitem)\n    - [UpdateItem](#updateitem)\n  - [ECS](#ecs)\n    - [RunTask](#runtask)\n      - [EC2](#ec2)\n      - [Fargate](#fargate)\n  - [EMR](#emr)\n    - [Create Cluster](#create-cluster)\n    - [Termination Protection](#termination-protection)\n    - [Terminate Cluster](#terminate-cluster)\n    - [Add Step](#add-step)\n    - [Cancel Step](#cancel-step)\n    - [Modify Instance Fleet](#modify-instance-fleet)\n    - [Modify Instance Group](#modify-instance-group)\n  - [EMR on EKS](#emr-on-eks)\n    - [Create Virtual Cluster](#create-virtual-cluster)\n    - [Delete Virtual Cluster](#delete-virtual-cluster)\n    - [Start Job Run](#start-job-run)\n  - [EKS](#eks)\n    - [Call](#call)\n  - [EventBridge](#eventbridge)\n    - [Put Events](#put-events)\n  - [Glue](#glue)\n  - [Glue DataBrew](#glue-databrew)\n  - [Lambda](#lambda)\n  - [SageMaker](#sagemaker)\n    - [Create Training Job](#create-training-job)\n    - [Create Transform Job](#create-transform-job)\n    - [Create Endpoint](#create-endpoint)\n    - [Create Endpoint Config](#create-endpoint-config)\n    - [Create Model](#create-model)\n    - [Update Endpoint](#update-endpoint)\n  - [SNS](#sns)\n  - [Step Functions](#step-functions)\n    - [Start Execution](#start-execution)\n    - [Invoke Activity](#invoke-activity)\n  - [SQS](#sqs)\n\n## Task\n\nA Task state represents a single unit of work performed by a state machine. In the\nCDK, the exact work to be done is determined by a class that implements `IStepFunctionsTask`.\n\nAWS Step Functions [integrates](https://docs.aws.amazon.com/step-functions/latest/dg/concepts-service-integrations.html) with some AWS services so that you can call API\nactions, and coordinate executions directly from the Amazon States Language in\nStep Functions. You can directly call and pass parameters to the APIs of those\nservices.\n\n## Paths\n\nIn the Amazon States Language, a [path](https://docs.aws.amazon.com/step-functions/latest/dg/amazon-states-language-paths.html) is a string beginning with `$` that you\ncan use to identify components within JSON text.\n\nLearn more about input and output processing in Step Functions [here](https://docs.aws.amazon.com/step-functions/latest/dg/concepts-input-output-filtering.html)\n\n### InputPath\n\nBoth `InputPath` and `Parameters` fields provide a way to manipulate JSON as it\nmoves through your workflow. AWS Step Functions applies the `InputPath` field first,\nand then the `Parameters` field. You can first filter your raw input to a selection\nyou want using InputPath, and then apply Parameters to manipulate that input\nfurther, or add new values. If you don't specify an `InputPath`, a default value\nof `$` will be used.\n\nThe following example provides the field named `input` as the input to the `Task`\nstate that runs a Lambda function.\n\n```ts\ndeclare const fn: lambda.Function;\nconst submitJob = new tasks.LambdaInvoke(this, 'Invoke Handler', {\n  lambdaFunction: fn,\n  inputPath: '$.input',\n});\n```\n\n### OutputPath\n\nTasks also allow you to select a portion of the state output to pass to the next\nstate. This enables you to filter out unwanted information, and pass only the\nportion of the JSON that you care about. If you don't specify an `OutputPath`,\na default value of `$` will be used. This passes the entire JSON node to the next\nstate.\n\nThe [response](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html#API_Invoke_ResponseSyntax) from a Lambda function includes the response from the function\nas well as other metadata.\n\nThe following example assigns the output from the Task to a field named `result`\n\n```ts\ndeclare const fn: lambda.Function;\nconst submitJob = new tasks.LambdaInvoke(this, 'Invoke Handler', {\n  lambdaFunction: fn,\n  outputPath: '$.Payload.result',\n});\n```\n\n### ResultSelector\n\nYou can use [`ResultSelector`](https://docs.aws.amazon.com/step-functions/latest/dg/input-output-inputpath-params.html#input-output-resultselector)\nto manipulate the raw result of a Task, Map or Parallel state before it is\npassed to [`ResultPath`](###ResultPath). For service integrations, the raw\nresult contains metadata in addition to the response payload. You can use\nResultSelector to construct a JSON payload that becomes the effective result\nusing static values or references to the raw result or context object.\n\nThe following example extracts the output payload of a Lambda function Task and combines\nit with some static values and the state name from the context object.\n\n```ts\ndeclare const fn: lambda.Function;\nnew tasks.LambdaInvoke(this, 'Invoke Handler', {\n  lambdaFunction: fn,\n  resultSelector: {\n    lambdaOutput: sfn.JsonPath.stringAt('$.Payload'),\n    invokeRequestId: sfn.JsonPath.stringAt('$.SdkResponseMetadata.RequestId'),\n    staticValue: {\n      foo: 'bar',\n    },\n    stateName: sfn.JsonPath.stringAt('$$.State.Name'),\n  },\n});\n```\n\n### ResultPath\n\nThe output of a state can be a copy of its input, the result it produces (for\nexample, output from a Task state’s Lambda function), or a combination of its\ninput and result. Use [`ResultPath`](https://docs.aws.amazon.com/step-functions/latest/dg/input-output-resultpath.html) to control which combination of these is\npassed to the state output. If you don't specify an `ResultPath`, a default\nvalue of `$` will be used.\n\nThe following example adds the item from calling DynamoDB's `getItem` API to the state\ninput and passes it to the next state.\n\n```ts\ndeclare const myTable: dynamodb.Table;\nnew tasks.DynamoPutItem(this, 'PutItem', {\n  item: {\n    MessageId: tasks.DynamoAttributeValue.fromString('message-id'),\n  },\n  table: myTable,\n  resultPath: `$.Item`,\n});\n```\n\n⚠️ The `OutputPath` is computed after applying `ResultPath`. All service integrations\nreturn metadata as part of their response. When using `ResultPath`, it's not possible to\nmerge a subset of the task output to the input.\n\n## Task parameters from the state JSON\n\nMost tasks take parameters. Parameter values can either be static, supplied directly\nin the workflow definition (by specifying their values), or a value available at runtime\nin the state machine's execution (either as its input or an output of a prior state).\nParameter values available at runtime can be specified via the `JsonPath` class,\nusing methods such as `JsonPath.stringAt()`.\n\nThe following example provides the field named `input` as the input to the Lambda function\nand invokes it asynchronously.\n\n```ts\ndeclare const fn: lambda.Function;\n\nconst submitJob = new tasks.LambdaInvoke(this, 'Invoke Handler', {\n  lambdaFunction: fn,\n  payload: sfn.TaskInput.fromJsonPathAt('$.input'),\n  invocationType: tasks.LambdaInvocationType.EVENT,\n});\n```\n\nYou can also use [intrinsic functions](https://docs.aws.amazon.com/step-functions/latest/dg/amazon-states-language-intrinsic-functions.html) available on `JsonPath`, for example `JsonPath.format()`.\nHere is an example of starting an Athena query that is dynamically created using the task input:\n\n```ts\nconst startQueryExecutionJob = new tasks.AthenaStartQueryExecution(this, 'Athena Start Query', {\n  queryString: sfn.JsonPath.format('select contacts where year={};', sfn.JsonPath.stringAt('$.year')),\n  queryExecutionContext: {\n    databaseName: 'interactions',\n  },\n  resultConfiguration: {\n    encryptionConfiguration: {\n      encryptionOption: tasks.EncryptionOption.S3_MANAGED,\n    },\n    outputLocation: {\n      bucketName: 'mybucket',\n      objectKey: 'myprefix',\n    },\n  },\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n});\n```\n\nEach service integration has its own set of parameters that can be supplied.\n\n## Evaluate Expression\n\nUse the `EvaluateExpression` to perform simple operations referencing state paths. The\n`expression` referenced in the task will be evaluated in a Lambda function\n(`eval()`). This allows you to not have to write Lambda code for simple operations.\n\nExample: convert a wait time from milliseconds to seconds, concat this in a message and wait:\n\n```ts\nconst convertToSeconds = new tasks.EvaluateExpression(this, 'Convert to seconds', {\n  expression: '$.waitMilliseconds / 1000',\n  resultPath: '$.waitSeconds',\n});\n\nconst createMessage = new tasks.EvaluateExpression(this, 'Create message', {\n  // Note: this is a string inside a string.\n  expression: '`Now waiting ${$.waitSeconds} seconds...`',\n  runtime: lambda.Runtime.NODEJS_14_X,\n  resultPath: '$.message',\n});\n\nconst publishMessage = new tasks.SnsPublish(this, 'Publish message', {\n  topic: new sns.Topic(this, 'cool-topic'),\n  message: sfn.TaskInput.fromJsonPathAt('$.message'),\n  resultPath: '$.sns',\n});\n\nconst wait = new sfn.Wait(this, 'Wait', {\n  time: sfn.WaitTime.secondsPath('$.waitSeconds'),\n});\n\nnew sfn.StateMachine(this, 'StateMachine', {\n  definition: convertToSeconds\n    .next(createMessage)\n    .next(publishMessage)\n    .next(wait),\n});\n```\n\nThe `EvaluateExpression` supports a `runtime` prop to specify the Lambda\nruntime to use to evaluate the expression. Currently, only runtimes\nof the Node.js family are supported.\n\n## API Gateway\n\nStep Functions supports [API Gateway](https://docs.aws.amazon.com/step-functions/latest/dg/connect-api-gateway.html) through the service integration pattern.\n\nHTTP APIs are designed for low-latency, cost-effective integrations with AWS services, including AWS Lambda, and HTTP endpoints.\nHTTP APIs support OIDC and OAuth 2.0 authorization, and come with built-in support for CORS and automatic deployments.\nPrevious-generation REST APIs currently offer more features. More details can be found [here](https://docs.aws.amazon.com/apigateway/latest/developerguide/http-api-vs-rest.html).\n\n### Call REST API Endpoint\n\nThe `CallApiGatewayRestApiEndpoint` calls the REST API endpoint.\n\n```ts\nimport * as apigateway from '@aws-cdk/aws-apigateway';\nconst restApi = new apigateway.RestApi(this, 'MyRestApi');\n\nconst invokeTask = new tasks.CallApiGatewayRestApiEndpoint(this, 'Call REST API', {\n  api: restApi,\n  stageName: 'prod',\n  method: tasks.HttpMethod.GET,\n});\n```\n\nBe aware that the header values must be arrays. When passing the Task Token\nin the headers field `WAIT_FOR_TASK_TOKEN` integration, use\n`JsonPath.array()` to wrap the token in an array:\n\n```ts\nimport * as apigateway from '@aws-cdk/aws-apigateway';\ndeclare const api: apigateway.RestApi;\n\nnew tasks.CallApiGatewayRestApiEndpoint(this, 'Endpoint', {\n  api,\n  stageName: 'Stage',\n  method: tasks.HttpMethod.PUT,\n  integrationPattern: sfn.IntegrationPattern.WAIT_FOR_TASK_TOKEN,\n  headers: sfn.TaskInput.fromObject({\n    TaskToken: sfn.JsonPath.array(sfn.JsonPath.taskToken),\n  }),\n});\n```\n\n### Call HTTP API Endpoint\n\nThe `CallApiGatewayHttpApiEndpoint` calls the HTTP API endpoint.\n\n```ts\nimport * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst httpApi = new apigatewayv2.HttpApi(this, 'MyHttpApi');\n\nconst invokeTask = new tasks.CallApiGatewayHttpApiEndpoint(this, 'Call HTTP API', {\n  apiId: httpApi.apiId,\n  apiStack: Stack.of(httpApi),\n  method: tasks.HttpMethod.GET,\n});\n```\n\n### AWS SDK\n\nStep Functions supports calling [AWS service's API actions](https://docs.aws.amazon.com/step-functions/latest/dg/supported-services-awssdk.html)\nthrough the service integration pattern.\n\nYou can use Step Functions' AWS SDK integrations to call any of the over two hundred AWS services\ndirectly from your state machine, giving you access to over nine thousand API actions.\n\n```ts\ndeclare const myBucket: s3.Bucket;\nconst getObject = new tasks.CallAwsService(this, 'GetObject', {\n  service: 's3',\n  action: 'getObject',\n  parameters: {\n    Bucket: myBucket.bucketName,\n    Key: sfn.JsonPath.stringAt('$.key')\n  },\n  iamResources: [myBucket.arnForObjects('*')],\n});\n```\n\nUse camelCase for actions and PascalCase for parameter names.\n\nThe task automatically adds an IAM statement to the state machine role's policy based on the\nservice and action called. The resources for this statement must be specified in `iamResources`.\n\nUse the `iamAction` prop to manually specify the IAM action name in the case where the IAM\naction name does not match with the API service/action name:\n\n```ts\nconst listBuckets = new tasks.CallAwsService(this, 'ListBuckets', {\n  service: 's3',\n  action: 'listBuckets',\n  iamResources: ['*'],\n  iamAction: 's3:ListAllMyBuckets',\n});\n```\n\n## Athena\n\nStep Functions supports [Athena](https://docs.aws.amazon.com/step-functions/latest/dg/connect-athena.html) through the service integration pattern.\n\n### StartQueryExecution\n\nThe [StartQueryExecution](https://docs.aws.amazon.com/athena/latest/APIReference/API_StartQueryExecution.html) API runs the SQL query statement.\n\n```ts\nconst startQueryExecutionJob = new tasks.AthenaStartQueryExecution(this, 'Start Athena Query', {\n  queryString: sfn.JsonPath.stringAt('$.queryString'),\n  queryExecutionContext: {\n    databaseName: 'mydatabase',\n  },\n  resultConfiguration: {\n    encryptionConfiguration: {\n      encryptionOption: tasks.EncryptionOption.S3_MANAGED,\n    },\n    outputLocation: {\n      bucketName: 'query-results-bucket',\n      objectKey: 'folder',\n    },\n  },\n});\n```\n\n### GetQueryExecution\n\nThe [GetQueryExecution](https://docs.aws.amazon.com/athena/latest/APIReference/API_GetQueryExecution.html) API gets information about a single execution of a query.\n\n```ts\nconst getQueryExecutionJob = new tasks.AthenaGetQueryExecution(this, 'Get Query Execution', {\n  queryExecutionId: sfn.JsonPath.stringAt('$.QueryExecutionId'),\n});\n```\n\n### GetQueryResults\n\nThe [GetQueryResults](https://docs.aws.amazon.com/athena/latest/APIReference/API_GetQueryResults.html) API that streams the results of a single query execution specified by QueryExecutionId from S3.\n\n```ts\nconst getQueryResultsJob = new tasks.AthenaGetQueryResults(this, 'Get Query Results', {\n  queryExecutionId: sfn.JsonPath.stringAt('$.QueryExecutionId'),\n});\n```\n\n### StopQueryExecution\n\nThe [StopQueryExecution](https://docs.aws.amazon.com/athena/latest/APIReference/API_StopQueryExecution.html) API that stops a query execution.\n\n```ts\nconst stopQueryExecutionJob = new tasks.AthenaStopQueryExecution(this, 'Stop Query Execution', {\n  queryExecutionId: sfn.JsonPath.stringAt('$.QueryExecutionId'),\n});\n```\n\n## Batch\n\nStep Functions supports [Batch](https://docs.aws.amazon.com/step-functions/latest/dg/connect-batch.html) through the service integration pattern.\n\n### SubmitJob\n\nThe [SubmitJob](https://docs.aws.amazon.com/batch/latest/APIReference/API_SubmitJob.html) API submits an AWS Batch job from a job definition.\n\n```ts\nimport * as batch from '@aws-cdk/aws-batch';\ndeclare const batchJobDefinition: batch.JobDefinition;\ndeclare const batchQueue: batch.JobQueue;\n\nconst task = new tasks.BatchSubmitJob(this, 'Submit Job', {\n  jobDefinitionArn: batchJobDefinition.jobDefinitionArn,\n  jobName: 'MyJob',\n  jobQueueArn: batchQueue.jobQueueArn,\n});\n```\n\n## CodeBuild\n\nStep Functions supports [CodeBuild](https://docs.aws.amazon.com/step-functions/latest/dg/connect-codebuild.html) through the service integration pattern.\n\n### StartBuild\n\n[StartBuild](https://docs.aws.amazon.com/codebuild/latest/APIReference/API_StartBuild.html) starts a CodeBuild Project by Project Name.\n\n```ts\nimport * as codebuild from '@aws-cdk/aws-codebuild';\n\nconst codebuildProject = new codebuild.Project(this, 'Project', {\n  projectName: 'MyTestProject',\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands: [\n          'echo \"Hello, CodeBuild!\"',\n        ],\n      },\n    },\n  }),\n});\n\nconst task = new tasks.CodeBuildStartBuild(this, 'Task', {\n  project: codebuildProject,\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n  environmentVariablesOverride: {\n    ZONE: {\n      type: codebuild.BuildEnvironmentVariableType.PLAINTEXT,\n      value: sfn.JsonPath.stringAt('$.envVariables.zone'),\n    },\n  },\n});\n```\n\n## DynamoDB\n\nYou can call DynamoDB APIs from a `Task` state.\nRead more about calling DynamoDB APIs [here](https://docs.aws.amazon.com/step-functions/latest/dg/connect-ddb.html)\n\n### GetItem\n\nThe [GetItem](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_GetItem.html) operation returns a set of attributes for the item with the given primary key.\n\n```ts\ndeclare const myTable: dynamodb.Table;\nnew tasks.DynamoGetItem(this, 'Get Item', {\n  key: { messageId: tasks.DynamoAttributeValue.fromString('message-007') },\n  table: myTable,\n});\n```\n\n### PutItem\n\nThe [PutItem](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html) operation creates a new item, or replaces an old item with a new item.\n\n```ts\ndeclare const myTable: dynamodb.Table;\nnew tasks.DynamoPutItem(this, 'PutItem', {\n  item: {\n    MessageId: tasks.DynamoAttributeValue.fromString('message-007'),\n    Text: tasks.DynamoAttributeValue.fromString(sfn.JsonPath.stringAt('$.bar')),\n    TotalCount: tasks.DynamoAttributeValue.fromNumber(10),\n  },\n  table: myTable,\n});\n```\n\n### DeleteItem\n\nThe [DeleteItem](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_DeleteItem.html) operation deletes a single item in a table by primary key.\n\n```ts\ndeclare const myTable: dynamodb.Table;\nnew tasks.DynamoDeleteItem(this, 'DeleteItem', {\n  key: { MessageId: tasks.DynamoAttributeValue.fromString('message-007') },\n  table: myTable,\n  resultPath: sfn.JsonPath.DISCARD,\n});\n```\n\n### UpdateItem\n\nThe [UpdateItem](https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_UpdateItem.html) operation edits an existing item's attributes, or adds a new item\nto the table if it does not already exist.\n\n```ts\ndeclare const myTable: dynamodb.Table;\nnew tasks.DynamoUpdateItem(this, 'UpdateItem', {\n  key: {\n    MessageId: tasks.DynamoAttributeValue.fromString('message-007')\n  },\n  table: myTable,\n  expressionAttributeValues: {\n    ':val': tasks.DynamoAttributeValue.numberFromString(sfn.JsonPath.stringAt('$.Item.TotalCount.N')),\n    ':rand': tasks.DynamoAttributeValue.fromNumber(20),\n  },\n  updateExpression: 'SET TotalCount = :val + :rand',\n});\n```\n\n## ECS\n\nStep Functions supports [ECS/Fargate](https://docs.aws.amazon.com/step-functions/latest/dg/connect-ecs.html) through the service integration pattern.\n\n### RunTask\n\n[RunTask](https://docs.aws.amazon.com/step-functions/latest/dg/connect-ecs.html) starts a new task using the specified task definition.\n\n#### EC2\n\nThe EC2 launch type allows you to run your containerized applications on a cluster\nof Amazon EC2 instances that you manage.\n\nWhen a task that uses the EC2 launch type is launched, Amazon ECS must determine where\nto place the task based on the requirements specified in the task definition, such as\nCPU and memory. Similarly, when you scale down the task count, Amazon ECS must determine\nwhich tasks to terminate. You can apply task placement strategies and constraints to\ncustomize how Amazon ECS places and terminates tasks. Learn more about [task placement](https://docs.aws.amazon.com/AmazonECS/latest/developerguide/task-placement.html)\n\nThe latest ACTIVE revision of the passed task definition is used for running the task.\n\nThe following example runs a job from a task definition on EC2\n\n```ts\nconst vpc = ec2.Vpc.fromLookup(this, 'Vpc', {\n  isDefault: true,\n});\n\nconst cluster = new ecs.Cluster(this, 'Ec2Cluster', { vpc });\ncluster.addCapacity('DefaultAutoScalingGroup', {\n  instanceType: new ec2.InstanceType('t2.micro'),\n  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC },\n});\n\nconst taskDefinition = new ecs.TaskDefinition(this, 'TD', {\n  compatibility: ecs.Compatibility.EC2,\n});\n\ntaskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromRegistry('foo/bar'),\n  memoryLimitMiB: 256,\n});\n\nconst runTask = new tasks.EcsRunTask(this, 'Run', {\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n  cluster,\n  taskDefinition,\n  launchTarget: new tasks.EcsEc2LaunchTarget({\n    placementStrategies: [\n      ecs.PlacementStrategy.spreadAcrossInstances(),\n      ecs.PlacementStrategy.packedByCpu(),\n      ecs.PlacementStrategy.randomly(),\n    ],\n    placementConstraints: [\n      ecs.PlacementConstraint.memberOf('blieptuut'),\n    ],\n  }),\n});\n```\n\n#### Fargate\n\nAWS Fargate is a serverless compute engine for containers that works with Amazon\nElastic Container Service (ECS). Fargate makes it easy for you to focus on building\nyour applications. Fargate removes the need to provision and manage servers, lets you\nspecify and pay for resources per application, and improves security through application\nisolation by design. Learn more about [Fargate](https://aws.amazon.com/fargate/)\n\nThe Fargate launch type allows you to run your containerized applications without the need\nto provision and manage the backend infrastructure. Just register your task definition and\nFargate launches the container for you. The latest ACTIVE revision of the passed\ntask definition is used for running the task. Learn more about\n[Fargate Versioning](https://docs.aws.amazon.com/AmazonECS/latest/APIReference/API_DescribeTaskDefinition.html)\n\nThe following example runs a job from a task definition on Fargate\n\n```ts\nconst vpc = ec2.Vpc.fromLookup(this, 'Vpc', {\n  isDefault: true,\n});\n\nconst cluster = new ecs.Cluster(this, 'FargateCluster', { vpc });\n\nconst taskDefinition = new ecs.TaskDefinition(this, 'TD', {\n  memoryMiB: '512',\n  cpu: '256',\n  compatibility: ecs.Compatibility.FARGATE,\n});\n\nconst containerDefinition = taskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromRegistry('foo/bar'),\n  memoryLimitMiB: 256,\n});\n\nconst runTask = new tasks.EcsRunTask(this, 'RunFargate', {\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n  cluster,\n  taskDefinition,\n  assignPublicIp: true,\n  containerOverrides: [{\n    containerDefinition,\n    environment: [{ name: 'SOME_KEY', value: sfn.JsonPath.stringAt('$.SomeKey') }],\n  }],\n  launchTarget: new tasks.EcsFargateLaunchTarget(),\n});\n```\n\n## EMR\n\nStep Functions supports Amazon EMR through the service integration pattern.\nThe service integration APIs correspond to Amazon EMR APIs but differ in the\nparameters that are used.\n\n[Read more](https://docs.aws.amazon.com/step-functions/latest/dg/connect-emr.html) about the differences when using these service integrations.\n\n### Create Cluster\n\nCreates and starts running a cluster (job flow).\nCorresponds to the [`runJobFlow`](https://docs.aws.amazon.com/emr/latest/APIReference/API_RunJobFlow.html) API in EMR.\n\n```ts\nconst clusterRole = new iam.Role(this, 'ClusterRole', {\n  assumedBy: new iam.ServicePrincipal('ec2.amazonaws.com'),\n});\n\nconst serviceRole = new iam.Role(this, 'ServiceRole', {\n  assumedBy: new iam.ServicePrincipal('elasticmapreduce.amazonaws.com'),\n});\n\nconst autoScalingRole = new iam.Role(this, 'AutoScalingRole', {\n  assumedBy: new iam.ServicePrincipal('elasticmapreduce.amazonaws.com'),\n});\n\nautoScalingRole.assumeRolePolicy?.addStatements(\n  new iam.PolicyStatement({\n    effect: iam.Effect.ALLOW,\n    principals: [\n      new iam.ServicePrincipal('application-autoscaling.amazonaws.com'),\n    ],\n    actions: [\n      'sts:AssumeRole',\n    ],\n  }));\n)\n\nnew tasks.EmrCreateCluster(this, 'Create Cluster', {\n  instances: {},\n  clusterRole,\n  name: sfn.TaskInput.fromJsonPathAt('$.ClusterName').value,\n  serviceRole,\n  autoScalingRole,\n});\n```\n\nIf you want to run multiple steps in [parallel](https://docs.aws.amazon.com/emr/latest/ManagementGuide/emr-concurrent-steps.html),\nyou can specify the `stepConcurrencyLevel` property. The concurrency range is between 1\nand 256 inclusive, where the default concurrency of 1 means no step concurrency is allowed.\n`stepConcurrencyLevel` requires the EMR release label to be 5.28.0 or above.\n\n```ts\nnew tasks.EmrCreateCluster(this, 'Create Cluster', {\n  instances: {},\n  name: sfn.TaskInput.fromJsonPathAt('$.ClusterName').value,\n  stepConcurrencyLevel: 10,\n});\n```\n\n### Termination Protection\n\nLocks a cluster (job flow) so the EC2 instances in the cluster cannot be\nterminated by user intervention, an API call, or a job-flow error.\n\nCorresponds to the [`setTerminationProtection`](https://docs.aws.amazon.com/step-functions/latest/dg/connect-emr.html) API in EMR.\n\n```ts\nnew tasks.EmrSetClusterTerminationProtection(this, 'Task', {\n  clusterId: 'ClusterId',\n  terminationProtected: false,\n});\n```\n\n### Terminate Cluster\n\nShuts down a cluster (job flow).\nCorresponds to the [`terminateJobFlows`](https://docs.aws.amazon.com/emr/latest/APIReference/API_TerminateJobFlows.html) API in EMR.\n\n```ts\nnew tasks.EmrTerminateCluster(this, 'Task', {\n  clusterId: 'ClusterId',\n});\n```\n\n### Add Step\n\nAdds a new step to a running cluster.\nCorresponds to the [`addJobFlowSteps`](https://docs.aws.amazon.com/emr/latest/APIReference/API_AddJobFlowSteps.html) API in EMR.\n\n```ts\nnew tasks.EmrAddStep(this, 'Task', {\n  clusterId: 'ClusterId',\n  name: 'StepName',\n  jar: 'Jar',\n  actionOnFailure: tasks.ActionOnFailure.CONTINUE,\n});\n```\n\n### Cancel Step\n\nCancels a pending step in a running cluster.\nCorresponds to the [`cancelSteps`](https://docs.aws.amazon.com/emr/latest/APIReference/API_CancelSteps.html) API in EMR.\n\n```ts\nnew tasks.EmrCancelStep(this, 'Task', {\n  clusterId: 'ClusterId',\n  stepId: 'StepId',\n});\n```\n\n### Modify Instance Fleet\n\nModifies the target On-Demand and target Spot capacities for the instance\nfleet with the specified InstanceFleetName.\n\nCorresponds to the [`modifyInstanceFleet`](https://docs.aws.amazon.com/emr/latest/APIReference/API_ModifyInstanceFleet.html) API in EMR.\n\n```ts\nnew tasks.EmrModifyInstanceFleetByName(this, 'Task', {\n  clusterId: 'ClusterId',\n  instanceFleetName: 'InstanceFleetName',\n  targetOnDemandCapacity: 2,\n  targetSpotCapacity: 0,\n});\n```\n\n### Modify Instance Group\n\nModifies the number of nodes and configuration settings of an instance group.\n\nCorresponds to the [`modifyInstanceGroups`](https://docs.aws.amazon.com/emr/latest/APIReference/API_ModifyInstanceGroups.html) API in EMR.\n\n```ts\nnew tasks.EmrModifyInstanceGroupByName(this, 'Task', {\n  clusterId: 'ClusterId',\n  instanceGroupName: sfn.JsonPath.stringAt('$.InstanceGroupName'),\n  instanceGroup: {\n    instanceCount: 1,\n  },\n});\n```\n\n## EMR on EKS\n\nStep Functions supports Amazon EMR on EKS through the service integration pattern.\nThe service integration APIs correspond to Amazon EMR on EKS APIs, but differ in the parameters that are used.\n\n[Read more](https://docs.aws.amazon.com/step-functions/latest/dg/connect-emr-eks.html) about the differences when using these service integrations.\n\n[Setting up](https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/setting-up.html) the EKS cluster is required.\n\n### Create Virtual Cluster\n\nThe [CreateVirtualCluster](https://docs.aws.amazon.com/emr-on-eks/latest/APIReference/API_CreateVirtualCluster.html) API creates a single virtual cluster that's mapped to a single Kubernetes namespace.\n\nThe EKS cluster containing the Kubernetes namespace where the virtual cluster will be mapped can be passed in from the task input.\n\n```ts\nnew tasks.EmrContainersCreateVirtualCluster(this, 'Create a Virtual Cluster', {\n  eksCluster: tasks.EksClusterInput.fromTaskInput(sfn.TaskInput.fromText('clusterId')),\n});\n```\n\nThe EKS cluster can also be passed in directly.\n\n```ts\nimport * as eks from '@aws-cdk/aws-eks';\n\ndeclare const eksCluster: eks.Cluster;\n\nnew tasks.EmrContainersCreateVirtualCluster(this, 'Create a Virtual Cluster', {\n  eksCluster: tasks.EksClusterInput.fromCluster(eksCluster),\n});\n```\n\nBy default, the Kubernetes namespace that a virtual cluster maps to is \"default\", but a specific namespace within an EKS cluster can be selected.\n\n```ts\nnew tasks.EmrContainersCreateVirtualCluster(this, 'Create a Virtual Cluster', {\n  eksCluster: tasks.EksClusterInput.fromTaskInput(sfn.TaskInput.fromText('clusterId')),\n  eksNamespace: 'specified-namespace',\n});\n```\n\n### Delete Virtual Cluster\n\nThe [DeleteVirtualCluster](https://docs.aws.amazon.com/emr-on-eks/latest/APIReference/API_DeleteVirtualCluster.html) API deletes a virtual cluster.\n\n```ts\nnew tasks.EmrContainersDeleteVirtualCluster(this, 'Delete a Virtual Cluster', {\n  virtualClusterId: sfn.TaskInput.fromJsonPathAt('$.virtualCluster'),\n});\n```\n\n### Start Job Run\n\nThe [StartJobRun](https://docs.aws.amazon.com/emr-on-eks/latest/APIReference/API_StartJobRun.html) API starts a job run. A job is a unit of work that you submit to Amazon EMR on EKS for execution. The work performed by the job can be defined by a Spark jar, PySpark script, or SparkSQL query. A job run is an execution of the job on the virtual cluster.\n\nRequired setup:\n\n - If not done already, follow the [steps](https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/setting-up.html) to setup EMR on EKS and [create an EKS Cluster](https://docs.aws.amazon.com/cdk/api/latest/docs/aws-eks-readme.html#quick-start).\n - Enable [Cluster access](https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/setting-up-cluster-access.html)\n - Enable [IAM Role access](https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/setting-up-enable-IAM.html)\n\nThe following actions must be performed if the virtual cluster ID is supplied from the task input. Otherwise, if it is supplied statically in the state machine definition, these actions will be done automatically.\n\n - Create an [IAM role](https://docs.aws.amazon.com/cdk/api/latest/docs/@aws-cdk_aws-iam.Role.html)\n - Update the [Role Trust Policy](https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/setting-up-trust-policy.html) of the Job Execution Role.\n\nThe job can be configured with spark submit parameters:\n\n```ts\nnew tasks.EmrContainersStartJobRun(this, 'EMR Containers Start Job Run', {\n  virtualCluster: tasks.VirtualClusterInput.fromVirtualClusterId('de92jdei2910fwedz'),\n  releaseLabel: tasks.ReleaseLabel.EMR_6_2_0,\n  jobDriver: {\n    sparkSubmitJobDriver: {\n      entryPoint: sfn.TaskInput.fromText('local:///usr/lib/spark/examples/src/main/python/pi.py'),\n      sparkSubmitParameters: '--conf spark.executor.instances=2 --conf spark.executor.memory=2G --conf spark.executor.cores=2 --conf spark.driver.cores=1',\n    },\n  },\n});\n```\n\nConfiguring the job can also be done via application configuration:\n\n```ts\nnew tasks.EmrContainersStartJobRun(this, 'EMR Containers Start Job Run', {\n  virtualCluster: tasks.VirtualClusterInput.fromVirtualClusterId('de92jdei2910fwedz'),\n  releaseLabel: tasks.ReleaseLabel.EMR_6_2_0,\n  jobName: 'EMR-Containers-Job',\n  jobDriver: {\n    sparkSubmitJobDriver: {\n      entryPoint: sfn.TaskInput.fromText('local:///usr/lib/spark/examples/src/main/python/pi.py'),\n    },\n  },\n  applicationConfig: [{\n    classification: tasks.Classification.SPARK_DEFAULTS,\n    properties: {\n      'spark.executor.instances': '1',\n      'spark.executor.memory': '512M',\n    },\n  }],\n});\n```\n\nJob monitoring can be enabled if `monitoring.logging` is set true. This automatically generates an S3 bucket and CloudWatch logs.\n\n```ts\nnew tasks.EmrContainersStartJobRun(this, 'EMR Containers Start Job Run', {\n  virtualCluster: tasks.VirtualClusterInput.fromVirtualClusterId('de92jdei2910fwedz'),\n  releaseLabel: tasks.ReleaseLabel.EMR_6_2_0,\n  jobDriver: {\n    sparkSubmitJobDriver: {\n      entryPoint: sfn.TaskInput.fromText('local:///usr/lib/spark/examples/src/main/python/pi.py'),\n      sparkSubmitParameters: '--conf spark.executor.instances=2 --conf spark.executor.memory=2G --conf spark.executor.cores=2 --conf spark.driver.cores=1',\n    },\n  },\n  monitoring: {\n    logging: true,\n  },\n});\n```\n\nOtherwise, providing monitoring for jobs with existing log groups and log buckets is also available.\n\n```ts\nimport * as logs from '@aws-cdk/aws-logs';\n\nconst logGroup = new logs.LogGroup(this, 'Log Group');\nconst logBucket = new s3.Bucket(this, 'S3 Bucket')\n\nnew tasks.EmrContainersStartJobRun(this, 'EMR Containers Start Job Run', {\n  virtualCluster: tasks.VirtualClusterInput.fromVirtualClusterId('de92jdei2910fwedz'),\n  releaseLabel: tasks.ReleaseLabel.EMR_6_2_0,\n  jobDriver: {\n    sparkSubmitJobDriver: {\n      entryPoint: sfn.TaskInput.fromText('local:///usr/lib/spark/examples/src/main/python/pi.py'),\n      sparkSubmitParameters: '--conf spark.executor.instances=2 --conf spark.executor.memory=2G --conf spark.executor.cores=2 --conf spark.driver.cores=1',\n    },\n  },\n  monitoring: {\n    logGroup: logGroup,\n    logBucket: logBucket,\n  },\n});\n```\n\nUsers can provide their own existing Job Execution Role.\n\n```ts\nnew tasks.EmrContainersStartJobRun(this, 'EMR Containers Start Job Run', {\n  virtualCluster:tasks.VirtualClusterInput.fromTaskInput(sfn.TaskInput.fromJsonPathAt('$.VirtualClusterId')),\n  releaseLabel: tasks.ReleaseLabel.EMR_6_2_0,\n  jobName: 'EMR-Containers-Job',\n  executionRole: iam.Role.fromRoleArn(this, 'Job-Execution-Role', 'arn:aws:iam::xxxxxxxxxxxx:role/JobExecutionRole'),\n  jobDriver: {\n    sparkSubmitJobDriver: {\n      entryPoint: sfn.TaskInput.fromText('local:///usr/lib/spark/examples/src/main/python/pi.py'),\n      sparkSubmitParameters: '--conf spark.executor.instances=2 --conf spark.executor.memory=2G --conf spark.executor.cores=2 --conf spark.driver.cores=1',\n    },\n  },\n});\n```\n\n## EKS\n\nStep Functions supports Amazon EKS through the service integration pattern.\nThe service integration APIs correspond to Amazon EKS APIs.\n\n[Read more](https://docs.aws.amazon.com/step-functions/latest/dg/connect-eks.html) about the differences when using these service integrations.\n\n### Call\n\nRead and write Kubernetes resource objects via a Kubernetes API endpoint.\nCorresponds to the [`call`](https://docs.aws.amazon.com/step-functions/latest/dg/connect-eks.html) API in Step Functions Connector.\n\nThe following code snippet includes a Task state that uses eks:call to list the pods.\n\n```ts\nimport * as eks from '@aws-cdk/aws-eks';\n\nconst myEksCluster = new eks.Cluster(this, 'my sample cluster', {\n  version: eks.KubernetesVersion.V1_18,\n  clusterName: 'myEksCluster',\n});\n\nnew tasks.EksCall(this, 'Call a EKS Endpoint', {\n  cluster: myEksCluster,\n  httpMethod: tasks.HttpMethods.GET,\n  httpPath: '/api/v1/namespaces/default/pods',\n});\n```\n\n## EventBridge\n\nStep Functions supports Amazon EventBridge through the service integration pattern.\nThe service integration APIs correspond to Amazon EventBridge APIs.\n\n[Read more](https://docs.aws.amazon.com/step-functions/latest/dg/connect-eventbridge.html) about the differences when using these service integrations.\n\n### Put Events\n\nSend events to an EventBridge bus.\nCorresponds to the [`put-events`](https://docs.aws.amazon.com/step-functions/latest/dg/connect-eventbridge.html) API in Step Functions Connector.\n\nThe following code snippet includes a Task state that uses events:putevents to send an event to the default bus.\n\n```ts\nimport * as events from '@aws-cdk/aws-events';\n\nconst myEventBus = new events.EventBus(this, 'EventBus', {\n  eventBusName: 'MyEventBus1',\n});\n\nnew tasks.EventBridgePutEvents(this, 'Send an event to EventBridge', {\n  entries: [{\n    detail: sfn.TaskInput.fromObject({\n      Message: 'Hello from Step Functions!',\n    }),\n    eventBus: myEventBus,\n    detailType: 'MessageFromStepFunctions',\n    source: 'step.functions',\n  }],\n});\n```\n\n## Glue\n\nStep Functions supports [AWS Glue](https://docs.aws.amazon.com/step-functions/latest/dg/connect-glue.html) through the service integration pattern.\n\nYou can call the [`StartJobRun`](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-jobs-runs.html#aws-glue-api-jobs-runs-StartJobRun) API from a `Task` state.\n\n```ts\nnew tasks.GlueStartJobRun(this, 'Task', {\n  glueJobName: 'my-glue-job',\n  arguments: sfn.TaskInput.fromObject({\n    key: 'value',\n  }),\n  timeout: Duration.minutes(30),\n  notifyDelayAfter: Duration.minutes(5),\n});\n```\n\n## Glue DataBrew\n\nStep Functions supports [AWS Glue DataBrew](https://docs.aws.amazon.com/step-functions/latest/dg/connect-databrew.html) through the service integration pattern.\n\nYou can call the [`StartJobRun`](https://docs.aws.amazon.com/databrew/latest/dg/API_StartJobRun.html) API from a `Task` state.\n\n```ts\nnew tasks.GlueDataBrewStartJobRun(this, 'Task', {\n  name: 'databrew-job',\n});\n```\n\n## Lambda\n\n[Invoke](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html) a Lambda function.\n\nYou can specify the input to your Lambda function through the `payload` attribute.\nBy default, Step Functions invokes Lambda function with the state input (JSON path '$')\nas the input.\n\nThe following snippet invokes a Lambda Function with the state input as the payload\nby referencing the `$` path.\n\n```ts\ndeclare const fn: lambda.Function;\nnew tasks.LambdaInvoke(this, 'Invoke with state input', {\n  lambdaFunction: fn,\n});\n```\n\nWhen a function is invoked, the Lambda service sends  [these response\nelements](https://docs.aws.amazon.com/lambda/latest/dg/API_Invoke.html#API_Invoke_ResponseElements)\nback.\n\n⚠️ The response from the Lambda function is in an attribute called `Payload`\n\nThe following snippet invokes a Lambda Function by referencing the `$.Payload` path\nto reference the output of a Lambda executed before it.\n\n```ts\ndeclare const fn: lambda.Function;\nnew tasks.LambdaInvoke(this, 'Invoke with empty object as payload', {\n  lambdaFunction: fn,\n  payload: sfn.TaskInput.fromObject({}),\n});\n\n// use the output of fn as input\nnew tasks.LambdaInvoke(this, 'Invoke with payload field in the state input', {\n  lambdaFunction: fn,\n  payload: sfn.TaskInput.fromJsonPathAt('$.Payload'),\n});\n```\n\nThe following snippet invokes a Lambda and sets the task output to only include\nthe Lambda function response.\n\n```ts\ndeclare const fn: lambda.Function;\nnew tasks.LambdaInvoke(this, 'Invoke and set function response as task output', {\n  lambdaFunction: fn,\n  outputPath: '$.Payload',\n});\n```\n\nIf you want to combine the input and the Lambda function response you can use\nthe `payloadResponseOnly` property and specify the `resultPath`. This will put the\nLambda function ARN directly in the \"Resource\" string, but it conflicts with the\nintegrationPattern, invocationType, clientContext, and qualifier properties.\n\n```ts\ndeclare const fn: lambda.Function;\nnew tasks.LambdaInvoke(this, 'Invoke and combine function response with task input', {\n  lambdaFunction: fn,\n  payloadResponseOnly: true,\n  resultPath: '$.fn',\n});\n```\n\nYou can have Step Functions pause a task, and wait for an external process to\nreturn a task token. Read more about the [callback pattern](https://docs.aws.amazon.com/step-functions/latest/dg/callback-task-sample-sqs.html#call-back-lambda-example)\n\nTo use the callback pattern, set the `token` property on the task. Call the Step\nFunctions `SendTaskSuccess` or `SendTaskFailure` APIs with the token to\nindicate that the task has completed and the state machine should resume execution.\n\nThe following snippet invokes a Lambda with the task token as part of the input\nto the Lambda.\n\n```ts\ndeclare const fn: lambda.Function;\nnew tasks.LambdaInvoke(this, 'Invoke with callback', {\n  lambdaFunction: fn,\n  integrationPattern: sfn.IntegrationPattern.WAIT_FOR_TASK_TOKEN,\n  payload: sfn.TaskInput.fromObject({\n    token: sfn.JsonPath.taskToken,\n    input: sfn.JsonPath.stringAt('$.someField'),\n  }),\n});\n```\n\n⚠️ The task will pause until it receives that task token back with a `SendTaskSuccess` or `SendTaskFailure`\ncall. Learn more about [Callback with the Task\nToken](https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html#connect-wait-token).\n\nAWS Lambda can occasionally experience transient service errors. In this case, invoking Lambda\nresults in a 500 error, such as `ServiceException`, `AWSLambdaException`, or `SdkClientException`.\nAs a best practice, the `LambdaInvoke` task will retry on those errors with an interval of 2 seconds,\na back-off rate of 2 and 6 maximum attempts. Set the `retryOnServiceExceptions` prop to `false` to\ndisable this behavior.\n\n## SageMaker\n\nStep Functions supports [AWS SageMaker](https://docs.aws.amazon.com/step-functions/latest/dg/connect-sagemaker.html) through the service integration pattern.\n\nIf your training job or model uses resources from AWS Marketplace,\n[network isolation is required](https://docs.aws.amazon.com/sagemaker/latest/dg/mkt-algo-model-internet-free.html).\nTo do so, set the `enableNetworkIsolation` property to `true` for `SageMakerCreateModel` or `SageMakerCreateTrainingJob`.\n\nTo set environment variables for the Docker container use the `environment` property.\n\n### Create Training Job\n\nYou can call the [`CreateTrainingJob`](https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateTrainingJob.html) API from a `Task` state.\n\n```ts\nnew tasks.SageMakerCreateTrainingJob(this, 'TrainSagemaker', {\n  trainingJobName: sfn.JsonPath.stringAt('$.JobName'),\n  algorithmSpecification: {\n    algorithmName: 'BlazingText',\n    trainingInputMode: tasks.InputMode.FILE,\n  },\n  inputDataConfig: [{\n    channelName: 'train',\n    dataSource: {\n      s3DataSource: {\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n        s3Location: tasks.S3Location.fromJsonExpression('$.S3Bucket'),\n      },\n    },\n  }],\n  outputDataConfig: {\n    s3OutputLocation: tasks.S3Location.fromBucket(s3.Bucket.fromBucketName(this, 'Bucket', 'mybucket'), 'myoutputpath'),\n  },\n  resourceConfig: {\n    instanceCount: 1,\n    instanceType: new ec2.InstanceType(sfn.JsonPath.stringAt('$.InstanceType')),\n    volumeSize: Size.gibibytes(50),\n  }, // optional: default is 1 instance of EC2 `M4.XLarge` with `10GB` volume\n  stoppingCondition: {\n    maxRuntime: Duration.hours(2),\n  }, // optional: default is 1 hour\n});\n```\n\n### Create Transform Job\n\nYou can call the [`CreateTransformJob`](https://docs.aws.amazon.com/sagemaker/latest/dg/API_CreateTransformJob.html) API from a `Task` state.\n\n```ts\nnew tasks.SageMakerCreateTransformJob(this, 'Batch Inference', {\n  transformJobName: 'MyTransformJob',\n  modelName: 'MyModelName',\n  modelClientOptions: {\n    invocationsMaxRetries: 3,  // default is 0\n    invocationsTimeout: Duration.minutes(5),  // default is 60 seconds\n  },\n  transformInput: {\n    transformDataSource: {\n      s3DataSource: {\n        s3Uri: 's3://inputbucket/train',\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n      }\n    }\n  },\n  transformOutput: {\n    s3OutputPath: 's3://outputbucket/TransformJobOutputPath',\n  },\n  transformResources: {\n    instanceCount: 1,\n    instanceType: ec2.InstanceType.of(ec2.InstanceClass.M4, ec2.InstanceSize.XLARGE),\n  }\n});\n\n```\n\n### Create Endpoint\n\nYou can call the [`CreateEndpoint`](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateEndpoint.html) API from a `Task` state.\n\n```ts\nnew tasks.SageMakerCreateEndpoint(this, 'SagemakerEndpoint', {\n  endpointName: sfn.JsonPath.stringAt('$.EndpointName'),\n  endpointConfigName: sfn.JsonPath.stringAt('$.EndpointConfigName'),\n});\n```\n\n### Create Endpoint Config\n\nYou can call the [`CreateEndpointConfig`](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateEndpointConfig.html) API from a `Task` state.\n\n```ts\nnew tasks.SageMakerCreateEndpointConfig(this, 'SagemakerEndpointConfig', {\n  endpointConfigName: 'MyEndpointConfig',\n  productionVariants: [{\n  initialInstanceCount: 2,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.M5, ec2.InstanceSize.XLARGE),\n    modelName: 'MyModel',\n    variantName: 'awesome-variant',\n  }],\n});\n```\n\n### Create Model\n\nYou can call the [`CreateModel`](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_CreateModel.html) API from a `Task` state.\n\n```ts\nnew tasks.SageMakerCreateModel(this, 'Sagemaker', {\n  modelName: 'MyModel',\n  primaryContainer: new tasks.ContainerDefinition({\n    image: tasks.DockerImage.fromJsonExpression(sfn.JsonPath.stringAt('$.Model.imageName')),\n    mode: tasks.Mode.SINGLE_MODEL,\n    modelS3Location: tasks.S3Location.fromJsonExpression('$.TrainingJob.ModelArtifacts.S3ModelArtifacts'),\n  }),\n});\n```\n\n### Update Endpoint\n\nYou can call the [`UpdateEndpoint`](https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_UpdateEndpoint.html) API from a `Task` state.\n\n```ts\nnew tasks.SageMakerUpdateEndpoint(this, 'SagemakerEndpoint', {\n  endpointName: sfn.JsonPath.stringAt('$.Endpoint.Name'),\n  endpointConfigName: sfn.JsonPath.stringAt('$.Endpoint.EndpointConfig'),\n});\n```\n\n## SNS\n\nStep Functions supports [Amazon SNS](https://docs.aws.amazon.com/step-functions/latest/dg/connect-sns.html) through the service integration pattern.\n\nYou can call the [`Publish`](https://docs.aws.amazon.com/sns/latest/api/API_Publish.html) API from a `Task` state to publish to an SNS topic.\n\n```ts\nconst topic = new sns.Topic(this, 'Topic');\n\n// Use a field from the execution data as message.\nconst task1 = new tasks.SnsPublish(this, 'Publish1', {\n  topic,\n  integrationPattern: sfn.IntegrationPattern.REQUEST_RESPONSE,\n  message: sfn.TaskInput.fromDataAt('$.state.message'),\n  messageAttributes: {\n    place: {\n      value: sfn.JsonPath.stringAt('$.place'),\n    },\n    pic: {\n      // BINARY must be explicitly set\n      dataType: tasks.MessageAttributeDataType.BINARY,\n      value: sfn.JsonPath.stringAt('$.pic'),\n    },\n    people: {\n      value: 4,\n    },\n    handles: {\n      value: ['@kslater', '@jjf', null, '@mfanning'],\n    },\n  },\n});\n\n// Combine a field from the execution data with\n// a literal object.\nconst task2 = new tasks.SnsPublish(this, 'Publish2', {\n  topic,\n  message: sfn.TaskInput.fromObject({\n    field1: 'somedata',\n    field2: sfn.JsonPath.stringAt('$.field2'),\n  }),\n});\n```\n\n## Step Functions\n\n### Start Execution\n\nYou can manage [AWS Step Functions](https://docs.aws.amazon.com/step-functions/latest/dg/connect-stepfunctions.html) executions.\n\nAWS Step Functions supports it's own [`StartExecution`](https://docs.aws.amazon.com/step-functions/latest/apireference/API_StartExecution.html) API as a service integration.\n\n```ts\n// Define a state machine with one Pass state\nconst child = new sfn.StateMachine(this, 'ChildStateMachine', {\n  definition: sfn.Chain.start(new sfn.Pass(this, 'PassState')),\n});\n\n// Include the state machine in a Task state with callback pattern\nconst task = new tasks.StepFunctionsStartExecution(this, 'ChildTask', {\n  stateMachine: child,\n  integrationPattern: sfn.IntegrationPattern.WAIT_FOR_TASK_TOKEN,\n  input: sfn.TaskInput.fromObject({\n    token: sfn.JsonPath.taskToken,\n    foo: 'bar',\n  }),\n  name: 'MyExecutionName',\n});\n\n// Define a second state machine with the Task state above\nnew sfn.StateMachine(this, 'ParentStateMachine', {\n  definition: task,\n});\n```\n\nYou can utilize [Associate Workflow Executions](https://docs.aws.amazon.com/step-functions/latest/dg/concepts-nested-workflows.html#nested-execution-startid)\nvia the `associateWithParent` property. This allows the Step Functions UI to link child\nexecutions from parent executions, making it easier to trace execution flow across state machines.\n\n```ts\ndeclare const child: sfn.StateMachine;\nconst task = new tasks.StepFunctionsStartExecution(this, 'ChildTask', {\n  stateMachine: child,\n  associateWithParent: true,\n});\n```\n\nThis will add the payload `AWS_STEP_FUNCTIONS_STARTED_BY_EXECUTION_ID.$: $$.Execution.Id` to the\n`input`property for you, which will pass the execution ID from the context object to the\nexecution input. It requires `input` to be an object or not be set at all.\n\n### Invoke Activity\n\nYou can invoke a [Step Functions Activity](https://docs.aws.amazon.com/step-functions/latest/dg/concepts-activities.html) which enables you to have\na task in your state machine where the work is performed by a *worker* that can\nbe hosted on Amazon EC2, Amazon ECS, AWS Lambda, basically anywhere. Activities\nare a way to associate code running somewhere (known as an activity worker) with\na specific task in a state machine.\n\nWhen Step Functions reaches an activity task state, the workflow waits for an\nactivity worker to poll for a task. An activity worker polls Step Functions by\nusing GetActivityTask, and sending the ARN for the related activity.\n\nAfter the activity worker completes its work, it can provide a report of its\nsuccess or failure by using `SendTaskSuccess` or `SendTaskFailure`. These two\ncalls use the taskToken provided by GetActivityTask to associate the result\nwith that task.\n\nThe following example creates an activity and creates a task that invokes the activity.\n\n```ts\nconst submitJobActivity = new sfn.Activity(this, 'SubmitJob');\n\nnew tasks.StepFunctionsInvokeActivity(this, 'Submit Job', {\n  activity: submitJobActivity,\n});\n```\n\n## SQS\n\nStep Functions supports [Amazon SQS](https://docs.aws.amazon.com/step-functions/latest/dg/connect-sqs.html)\n\nYou can call the [`SendMessage`](https://docs.aws.amazon.com/AWSSimpleQueueService/latest/APIReference/API_SendMessage.html) API from a `Task` state\nto send a message to an SQS queue.\n\n```ts\nconst queue = new sqs.Queue(this, 'Queue');\n\n// Use a field from the execution data as message.\nconst task1 = new tasks.SqsSendMessage(this, 'Send1', {\n  queue,\n  messageBody: sfn.TaskInput.fromJsonPathAt('$.message'),\n});\n\n// Combine a field from the execution data with\n// a literal object.\nconst task2 = new tasks.SqsSendMessage(this, 'Send2', {\n  queue,\n  messageBody: sfn.TaskInput.fromObject({\n    field1: 'somedata',\n    field2: sfn.JsonPath.stringAt('$.field2'),\n  }),\n});\n```\n"
  },
  "repository": {
    "directory": "packages/@aws-cdk/aws-stepfunctions-tasks",
    "type": "git",
    "url": "https://github.com/aws/aws-cdk.git"
  },
  "schema": "jsii/0.10.0",
  "targets": {
    "dotnet": {
      "iconUrl": "https://raw.githubusercontent.com/aws/aws-cdk/master/logo/default-256-dark.png",
      "namespace": "Amazon.CDK.AWS.StepFunctions.Tasks",
      "packageId": "Amazon.CDK.AWS.StepFunctions.Tasks"
    },
    "java": {
      "maven": {
        "artifactId": "stepfunctions-tasks",
        "groupId": "software.amazon.awscdk"
      },
      "package": "software.amazon.awscdk.services.stepfunctions.tasks"
    },
    "js": {
      "npm": "@aws-cdk/aws-stepfunctions-tasks"
    },
    "python": {
      "classifiers": [
        "Framework :: AWS CDK",
        "Framework :: AWS CDK :: 1"
      ],
      "distName": "aws-cdk.aws-stepfunctions-tasks",
      "module": "aws_cdk.aws_stepfunctions_tasks"
    }
  },
  "types": {
    "@aws-cdk/aws-stepfunctions-tasks.AcceleratorClass": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "see": "https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html",
        "stability": "stable",
        "summary": "The generation of Elastic Inference (EI) instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst acceleratorClass = stepfunctions_tasks.AcceleratorClass.of('version');",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.AcceleratorClass",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 790
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Custom AcceleratorType."
          },
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 803
          },
          "name": "of",
          "parameters": [
            {
              "docs": {
                "summary": "- Elastic Inference accelerator generation."
              },
              "name": "version",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.AcceleratorClass"
            }
          },
          "static": true
        }
      ],
      "name": "AcceleratorClass",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Elastic Inference accelerator 1st generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 794
          },
          "name": "EIA1",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.AcceleratorClass"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Elastic Inference accelerator 2nd generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 798
          },
          "name": "EIA2",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.AcceleratorClass"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "- Elastic Inference accelerator generation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 807
          },
          "name": "version",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:AcceleratorClass"
    },
    "@aws-cdk/aws-stepfunctions-tasks.AcceleratorType": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "remarks": "EI instances provide on-demand GPU computing for inference",
        "see": "https://docs.aws.amazon.com/sagemaker/latest/dg/ei.html",
        "stability": "stable",
        "summary": "The size of the Elastic Inference (EI) instance to use for the production variant.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst acceleratorType = new stepfunctions_tasks.AcceleratorType('instanceTypeIdentifier');",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.AcceleratorType",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/sagemaker/base-types.ts",
          "line": 826
        },
        "parameters": [
          {
            "name": "instanceTypeIdentifier",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 816
      },
      "methods": [
        {
          "docs": {
            "remarks": "This class takes a combination of a class and size.",
            "stability": "stable",
            "summary": "AcceleratorType."
          },
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 822
          },
          "name": "of",
          "parameters": [
            {
              "name": "acceleratorClass",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.AcceleratorClass"
              }
            },
            {
              "name": "instanceSize",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.InstanceSize"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.AcceleratorType"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return the accelerator type as a dotted string."
          },
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 832
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        }
      ],
      "name": "AcceleratorType",
      "symbolId": "lib/sagemaker/base-types:AcceleratorType"
    },
    "@aws-cdk/aws-stepfunctions-tasks.ActionOnFailure": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "default": "CONTINUE",
        "example": "new tasks.EmrAddStep(this, 'Task', {\n  clusterId: 'ClusterId',\n  name: 'StepName',\n  jar: 'Jar',\n  actionOnFailure: tasks.ActionOnFailure.CONTINUE,\n});",
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_StepConfig.html\n\nHere, they are named as TERMINATE_JOB_FLOW, TERMINATE_CLUSTER, CANCEL_AND_WAIT, and CONTINUE respectively.",
        "stability": "stable",
        "summary": "The action to take when the cluster step fails."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.ActionOnFailure",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/emr/emr-add-step.ts",
        "line": 16
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Terminate the Cluster on Step Failure."
          },
          "name": "TERMINATE_CLUSTER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Cancel Step execution and enter WAITING state."
          },
          "name": "CANCEL_AND_WAIT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Continue to the next Step."
          },
          "name": "CONTINUE"
        }
      ],
      "name": "ActionOnFailure",
      "symbolId": "lib/emr/emr-add-step:ActionOnFailure"
    },
    "@aws-cdk/aws-stepfunctions-tasks.AlgorithmSpecification": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTrainingJob(this, 'TrainSagemaker', {\n  trainingJobName: sfn.JsonPath.stringAt('$.JobName'),\n  algorithmSpecification: {\n    algorithmName: 'BlazingText',\n    trainingInputMode: tasks.InputMode.FILE,\n  },\n  inputDataConfig: [{\n    channelName: 'train',\n    dataSource: {\n      s3DataSource: {\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n        s3Location: tasks.S3Location.fromJsonExpression('$.S3Bucket'),\n      },\n    },\n  }],\n  outputDataConfig: {\n    s3OutputLocation: tasks.S3Location.fromBucket(s3.Bucket.fromBucketName(this, 'Bucket', 'mybucket'), 'myoutputpath'),\n  },\n  resourceConfig: {\n    instanceCount: 1,\n    instanceType: new ec2.InstanceType(sfn.JsonPath.stringAt('$.InstanceType')),\n    volumeSize: Size.gibibytes(50),\n  }, // optional: default is 1 instance of EC2 `M4.XLarge` with `10GB` volume\n  stoppingCondition: {\n    maxRuntime: Duration.hours(2),\n  }, // optional: default is 1 hour\n});",
        "stability": "stable",
        "summary": "Specify the training algorithm and algorithm-specific metadata."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.AlgorithmSpecification",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 19
      },
      "name": "AlgorithmSpecification",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No algorithm is specified",
            "remarks": "This must be an algorithm resource that you created or subscribe to on AWS Marketplace.\nIf you specify a value for this parameter, you can't specify a value for TrainingImage.",
            "stability": "stable",
            "summary": "Name of the algorithm resource to use for the training job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 28
          },
          "name": "algorithmName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No metrics",
            "remarks": "Each object specifies the metric name and regular expressions used to parse algorithm logs.",
            "stability": "stable",
            "summary": "List of metric definition objects."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 35
          },
          "name": "metricDefinitions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.MetricDefinition"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No Docker image is specified",
            "stability": "stable",
            "summary": "Registry path of the Docker image that contains the training algorithm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 42
          },
          "name": "trainingImage",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.DockerImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'File' mode",
            "stability": "stable",
            "summary": "Input mode that the algorithm supports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 49
          },
          "name": "trainingInputMode",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.InputMode"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:AlgorithmSpecification"
    },
    "@aws-cdk/aws-stepfunctions-tasks.ApplicationConfiguration": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "remarks": "A configuration consists of a classification, properties, and optional nested configurations.\nA classification refers to an application-specific configuration file.\nProperties are the settings you want to change in that file.",
        "see": "https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-configure-apps.html",
        "stability": "stable",
        "summary": "A configuration specification to be used when provisioning virtual clusters, which can include configurations for applications and software bundled with Amazon EMR on EKS.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const applicationConfiguration_: stepfunctions_tasks.ApplicationConfiguration;\ndeclare const classification: stepfunctions_tasks.Classification;\nconst applicationConfiguration: stepfunctions_tasks.ApplicationConfiguration = {\n  classification: classification,\n\n  // the properties below are optional\n  nestedConfig: [{\n    classification: classification,\n\n    // the properties below are optional\n    nestedConfig: [applicationConfiguration_],\n    properties: {\n      propertiesKey: 'properties',\n    },\n  }],\n  properties: {\n    propertiesKey: 'properties',\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.ApplicationConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emrcontainers/start-job-run.ts",
        "line": 547
      },
      "name": "ApplicationConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Length Constraints: Minimum length of 1. Maximum length of 1024.",
            "stability": "stable",
            "summary": "The classification within a configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 553
          },
          "name": "classification",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.Classification"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No other configurations",
            "remarks": "Array Members: Maximum number of 100 items.",
            "stability": "stable",
            "summary": "A list of additional configurations to apply within a configuration object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 562
          },
          "name": "nestedConfig",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.ApplicationConfiguration"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No properties",
            "remarks": "Map Entries: Maximum number of 100 items.",
            "stability": "stable",
            "summary": "A set of properties specified within a configuration classification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 571
          },
          "name": "properties",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/emrcontainers/start-job-run:ApplicationConfiguration"
    },
    "@aws-cdk/aws-stepfunctions-tasks.AssembleWith": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "How to assemble the results of the transform job as a single S3 object."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.AssembleWith",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 885
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Concatenate the results in binary format."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Add a newline character at the end of every transformed record."
          },
          "name": "LINE"
        }
      ],
      "name": "AssembleWith",
      "symbolId": "lib/sagemaker/base-types:AssembleWith"
    },
    "@aws-cdk/aws-stepfunctions-tasks.AthenaGetQueryExecution": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const getQueryExecutionJob = new tasks.AthenaGetQueryExecution(this, 'Get Query Execution', {\n  queryExecutionId: sfn.JsonPath.stringAt('$.QueryExecutionId'),\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-athena.html",
        "stability": "stable",
        "summary": "Get an Athena Query Execution as a Task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.AthenaGetQueryExecution",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/athena/get-query-execution.ts",
          "line": 34
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.AthenaGetQueryExecutionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/athena/get-query-execution.ts",
        "line": 23
      },
      "name": "AthenaGetQueryExecution",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/get-query-execution.ts",
            "line": 29
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/get-query-execution.ts",
            "line": 30
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/athena/get-query-execution:AthenaGetQueryExecution"
    },
    "@aws-cdk/aws-stepfunctions-tasks.AthenaGetQueryExecutionProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const getQueryExecutionJob = new tasks.AthenaGetQueryExecution(this, 'Get Query Execution', {\n  queryExecutionId: sfn.JsonPath.stringAt('$.QueryExecutionId'),\n});",
        "stability": "stable",
        "summary": "Properties for getting a Query Execution."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.AthenaGetQueryExecutionProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/athena/get-query-execution.ts",
        "line": 9
      },
      "name": "AthenaGetQueryExecutionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Example value: `adfsaf-23trf23-f23rt23`",
            "stability": "stable",
            "summary": "Query that will be retrieved."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/get-query-execution.ts",
            "line": 15
          },
          "name": "queryExecutionId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/athena/get-query-execution:AthenaGetQueryExecutionProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.AthenaGetQueryResults": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const getQueryResultsJob = new tasks.AthenaGetQueryResults(this, 'Get Query Results', {\n  queryExecutionId: sfn.JsonPath.stringAt('$.QueryExecutionId'),\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-athena.html",
        "stability": "stable",
        "summary": "Get an Athena Query Results as a Task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.AthenaGetQueryResults",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/athena/get-query-results.ts",
          "line": 48
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.AthenaGetQueryResultsProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/athena/get-query-results.ts",
        "line": 37
      },
      "name": "AthenaGetQueryResults",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/get-query-results.ts",
            "line": 43
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/get-query-results.ts",
            "line": 44
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/athena/get-query-results:AthenaGetQueryResults"
    },
    "@aws-cdk/aws-stepfunctions-tasks.AthenaGetQueryResultsProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const getQueryResultsJob = new tasks.AthenaGetQueryResults(this, 'Get Query Results', {\n  queryExecutionId: sfn.JsonPath.stringAt('$.QueryExecutionId'),\n});",
        "stability": "stable",
        "summary": "Properties for getting a Query Results."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.AthenaGetQueryResultsProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/athena/get-query-results.ts",
        "line": 9
      },
      "name": "AthenaGetQueryResultsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Example value: `adfsaf-23trf23-f23rt23`",
            "stability": "stable",
            "summary": "Query that will be retrieved."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/get-query-results.ts",
            "line": 15
          },
          "name": "queryExecutionId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1000",
            "stability": "stable",
            "summary": "Max number of results."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/get-query-results.ts",
            "line": 29
          },
          "name": "maxResults",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No next token",
            "stability": "stable",
            "summary": "Pagination token."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/get-query-results.ts",
            "line": 22
          },
          "name": "nextToken",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/athena/get-query-results:AthenaGetQueryResultsProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.AthenaStartQueryExecution": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const startQueryExecutionJob = new tasks.AthenaStartQueryExecution(this, 'Athena Start Query', {\n  queryString: sfn.JsonPath.format('select contacts where year={};', sfn.JsonPath.stringAt('$.year')),\n  queryExecutionContext: {\n    databaseName: 'interactions',\n  },\n  resultConfiguration: {\n    encryptionConfiguration: {\n      encryptionOption: tasks.EncryptionOption.S3_MANAGED,\n    },\n    outputLocation: {\n      bucketName: 'mybucket',\n      objectKey: 'myprefix',\n    },\n  },\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-athena.html",
        "stability": "stable",
        "summary": "Start an Athena Query as a Task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.AthenaStartQueryExecution",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/athena/start-query-execution.ts",
          "line": 64
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.AthenaStartQueryExecutionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/athena/start-query-execution.ts",
        "line": 52
      },
      "name": "AthenaStartQueryExecution",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/start-query-execution.ts",
            "line": 59
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/start-query-execution.ts",
            "line": 60
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/athena/start-query-execution:AthenaStartQueryExecution"
    },
    "@aws-cdk/aws-stepfunctions-tasks.AthenaStartQueryExecutionProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const startQueryExecutionJob = new tasks.AthenaStartQueryExecution(this, 'Athena Start Query', {\n  queryString: sfn.JsonPath.format('select contacts where year={};', sfn.JsonPath.stringAt('$.year')),\n  queryExecutionContext: {\n    databaseName: 'interactions',\n  },\n  resultConfiguration: {\n    encryptionConfiguration: {\n      encryptionOption: tasks.EncryptionOption.S3_MANAGED,\n    },\n    outputLocation: {\n      bucketName: 'mybucket',\n      objectKey: 'myprefix',\n    },\n  },\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n});",
        "stability": "stable",
        "summary": "Properties for starting a Query Execution."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.AthenaStartQueryExecutionProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/athena/start-query-execution.ts",
        "line": 12
      },
      "name": "AthenaStartQueryExecutionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Query that will be started."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/start-query-execution.ts",
            "line": 16
          },
          "name": "queryString",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No client request token",
            "stability": "stable",
            "summary": "Unique string string to ensure idempotence."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/start-query-execution.ts",
            "line": 23
          },
          "name": "clientRequestToken",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No query execution context",
            "stability": "stable",
            "summary": "Database within which query executes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/start-query-execution.ts",
            "line": 30
          },
          "name": "queryExecutionContext",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.QueryExecutionContext"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No result configuration",
            "stability": "stable",
            "summary": "Configuration on how and where to save query."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/start-query-execution.ts",
            "line": 37
          },
          "name": "resultConfiguration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.ResultConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No work group",
            "stability": "stable",
            "summary": "Configuration on how and where to save query."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/start-query-execution.ts",
            "line": 44
          },
          "name": "workGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/athena/start-query-execution:AthenaStartQueryExecutionProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.AthenaStopQueryExecution": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const stopQueryExecutionJob = new tasks.AthenaStopQueryExecution(this, 'Stop Query Execution', {\n  queryExecutionId: sfn.JsonPath.stringAt('$.QueryExecutionId'),\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-athena.html",
        "stability": "stable",
        "summary": "Stop an Athena Query Execution as a Task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.AthenaStopQueryExecution",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/athena/stop-query-execution.ts",
          "line": 32
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.AthenaStopQueryExecutionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/athena/stop-query-execution.ts",
        "line": 21
      },
      "name": "AthenaStopQueryExecution",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/stop-query-execution.ts",
            "line": 27
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/stop-query-execution.ts",
            "line": 28
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/athena/stop-query-execution:AthenaStopQueryExecution"
    },
    "@aws-cdk/aws-stepfunctions-tasks.AthenaStopQueryExecutionProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const stopQueryExecutionJob = new tasks.AthenaStopQueryExecution(this, 'Stop Query Execution', {\n  queryExecutionId: sfn.JsonPath.stringAt('$.QueryExecutionId'),\n});",
        "stability": "stable",
        "summary": "Properties for stoping a Query Execution."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.AthenaStopQueryExecutionProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/athena/stop-query-execution.ts",
        "line": 9
      },
      "name": "AthenaStopQueryExecutionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Query that will be stopped."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/stop-query-execution.ts",
            "line": 13
          },
          "name": "queryExecutionId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/athena/stop-query-execution:AthenaStopQueryExecutionProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.AuthType": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "The authentication method used to call the endpoint."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.AuthType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/apigateway/base-types.ts",
        "line": 30
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Call the API direclty with no authorization method."
          },
          "name": "NO_AUTH"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use the IAM role associated with the current state machine for authorization."
          },
          "name": "IAM_ROLE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use the resource policy of the API for authorization."
          },
          "name": "RESOURCE_POLICY"
        }
      ],
      "name": "AuthType",
      "symbolId": "lib/apigateway/base-types:AuthType"
    },
    "@aws-cdk/aws-stepfunctions-tasks.BatchContainerOverrides": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The overrides that should be sent to a container.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const instanceType: ec2.InstanceType;\ndeclare const size: cdk.Size;\nconst batchContainerOverrides: stepfunctions_tasks.BatchContainerOverrides = {\n  command: ['command'],\n  environment: {\n    environmentKey: 'environment',\n  },\n  gpuCount: 123,\n  instanceType: instanceType,\n  memory: size,\n  vcpus: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.BatchContainerOverrides",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/batch/submit-job.ts",
        "line": 11
      },
      "name": "BatchContainerOverrides",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No command overrides",
            "stability": "stable",
            "summary": "The command to send to the container that overrides the default command from the Docker image or the job definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 18
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No environment overrides",
            "remarks": "You can add new environment variables, which are added to the container\nat launch, or you can override the existing environment variables from\nthe Docker image or the job definition.",
            "stability": "stable",
            "summary": "The environment variables to send to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 28
          },
          "name": "environment",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No GPU reservation",
            "remarks": "The number of GPUs reserved for all containers in a job\nshould not exceed the number of available GPUs on the compute\nresource that the job is launched on.",
            "stability": "stable",
            "summary": "The number of physical GPUs to reserve for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 53
          },
          "name": "gpuCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No instance type overrides",
            "remarks": "This parameter is not valid for single-node container jobs.",
            "stability": "stable",
            "summary": "The instance type to use for a multi-node parallel job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 36
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No memory overrides. The memory supplied in the job definition will be used.",
            "stability": "stable",
            "summary": "Memory reserved for the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 43
          },
          "name": "memory",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Size"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No vCPUs overrides",
            "remarks": "This value overrides the value set in the job definition.",
            "stability": "stable",
            "summary": "The number of vCPUs to reserve for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 61
          },
          "name": "vcpus",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/batch/submit-job:BatchContainerOverrides"
    },
    "@aws-cdk/aws-stepfunctions-tasks.BatchJobDependency": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "An object representing an AWS Batch job dependency.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst batchJobDependency: stepfunctions_tasks.BatchJobDependency = {\n  jobId: 'jobId',\n  type: 'type',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.BatchJobDependency",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/batch/submit-job.ts",
        "line": 67
      },
      "name": "BatchJobDependency",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No jobId",
            "stability": "stable",
            "summary": "The job ID of the AWS Batch job associated with this dependency."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 73
          },
          "name": "jobId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No type",
            "stability": "stable",
            "summary": "The type of the job dependency."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 80
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/batch/submit-job:BatchJobDependency"
    },
    "@aws-cdk/aws-stepfunctions-tasks.BatchStrategy": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "Specifies the number of records to include in a mini-batch for an HTTP inference request."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.BatchStrategy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 841
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Fits multiple records in a mini-batch."
          },
          "name": "MULTI_RECORD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Use a single record when making an invocation request."
          },
          "name": "SINGLE_RECORD"
        }
      ],
      "name": "BatchStrategy",
      "symbolId": "lib/sagemaker/base-types:BatchStrategy"
    },
    "@aws-cdk/aws-stepfunctions-tasks.BatchSubmitJob": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as batch from '@aws-cdk/aws-batch';\ndeclare const batchJobDefinition: batch.JobDefinition;\ndeclare const batchQueue: batch.JobQueue;\n\nconst task = new tasks.BatchSubmitJob(this, 'Submit Job', {\n  jobDefinitionArn: batchJobDefinition.jobDefinitionArn,\n  jobName: 'MyJob',\n  jobQueueArn: batchQueue.jobQueueArn,\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-batch.html",
        "stability": "stable",
        "summary": "Task to submits an AWS Batch job from a job definition."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.BatchSubmitJob",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/batch/submit-job.ts",
          "line": 168
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.BatchSubmitJobProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/batch/submit-job.ts",
        "line": 157
      },
      "name": "BatchSubmitJob",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 163
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 164
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/batch/submit-job:BatchSubmitJob"
    },
    "@aws-cdk/aws-stepfunctions-tasks.BatchSubmitJobProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as batch from '@aws-cdk/aws-batch';\ndeclare const batchJobDefinition: batch.JobDefinition;\ndeclare const batchQueue: batch.JobQueue;\n\nconst task = new tasks.BatchSubmitJob(this, 'Submit Job', {\n  jobDefinitionArn: batchJobDefinition.jobDefinitionArn,\n  jobName: 'MyJob',\n  jobQueueArn: batchQueue.jobQueueArn,\n});",
        "stability": "stable",
        "summary": "Properties for RunBatchJob."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.BatchSubmitJobProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/batch/submit-job.ts",
        "line": 87
      },
      "name": "BatchSubmitJobProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The arn of the job definition used by this job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 91
          },
          "name": "jobDefinitionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The first character must be alphanumeric, and up to 128 letters (uppercase and lowercase),\nnumbers, hyphens, and underscores are allowed.",
            "stability": "stable",
            "summary": "The name of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 98
          },
          "name": "jobName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The arn of the job queue into which the job is submitted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 103
          },
          "name": "jobQueueArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No array size",
            "remarks": "If you specify array properties for a job, it becomes an array job.\nFor more information, see Array Jobs in the AWS Batch User Guide.",
            "stability": "stable",
            "summary": "The array size can be between 2 and 10,000."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 112
          },
          "name": "arraySize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "remarks": "You may specify between 1 and 10 attempts.\nIf the value of attempts is greater than one,\nthe job is retried on failure the same number of attempts as the value.",
            "stability": "stable",
            "summary": "The number of times to move a job to the RUNNABLE status."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 149
          },
          "name": "attempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No container overrides",
            "see": "https://docs.aws.amazon.com/batch/latest/APIReference/API_SubmitJob.html#Batch-SubmitJob-request-containerOverrides",
            "stability": "stable",
            "summary": "A list of container overrides in JSON format that specify the name of a container in the specified job definition and the overrides it should receive."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 122
          },
          "name": "containerOverrides",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.BatchContainerOverrides"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No dependencies",
            "remarks": "A job can depend upon a maximum of 20 jobs.",
            "see": "https://docs.aws.amazon.com/batch/latest/APIReference/API_SubmitJob.html#Batch-SubmitJob-request-dependsOn",
            "stability": "stable",
            "summary": "A list of dependencies for the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 132
          },
          "name": "dependsOn",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.BatchJobDependency"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No parameters are passed",
            "stability": "stable",
            "summary": "The payload to be passed as parameters to the batch job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/submit-job.ts",
            "line": 139
          },
          "name": "payload",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        }
      ],
      "symbolId": "lib/batch/submit-job:BatchSubmitJobProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.CallApiGatewayEndpointBaseProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Base CallApiGatewayEdnpoint Task Props.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const resultSelector: any;\ndeclare const taskInput: stepfunctions.TaskInput;\nconst callApiGatewayEndpointBaseProps: stepfunctions_tasks.CallApiGatewayEndpointBaseProps = {\n  method: stepfunctions_tasks.HttpMethod.GET,\n\n  // the properties below are optional\n  apiPath: 'apiPath',\n  authType: stepfunctions_tasks.AuthType.NO_AUTH,\n  comment: 'comment',\n  headers: taskInput,\n  heartbeat: cdk.Duration.minutes(30),\n  inputPath: 'inputPath',\n  integrationPattern: stepfunctions.IntegrationPattern.REQUEST_RESPONSE,\n  outputPath: 'outputPath',\n  queryParameters: taskInput,\n  requestBody: taskInput,\n  resultPath: 'resultPath',\n  resultSelector: {\n    resultSelectorKey: resultSelector,\n  },\n  timeout: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.CallApiGatewayEndpointBaseProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/apigateway/base-types.ts",
        "line": 44
      },
      "name": "CallApiGatewayEndpointBaseProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Http method for the API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/base-types.ts",
            "line": 48
          },
          "name": "method",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.HttpMethod"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No path",
            "stability": "stable",
            "summary": "Path parameters appended after API endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/base-types.ts",
            "line": 60
          },
          "name": "apiPath",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "AuthType.NO_AUTH",
            "stability": "stable",
            "summary": "Authentication methods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/base-types.ts",
            "line": 78
          },
          "name": "authType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.AuthType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No headers",
            "stability": "stable",
            "summary": "HTTP request information that does not relate to contents of the request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/base-types.ts",
            "line": 54
          },
          "name": "headers",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No query parameters",
            "stability": "stable",
            "summary": "Query strings attatched to end of request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/base-types.ts",
            "line": 66
          },
          "name": "queryParameters",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No request body",
            "stability": "stable",
            "summary": "HTTP Request body."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/base-types.ts",
            "line": 72
          },
          "name": "requestBody",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        }
      ],
      "symbolId": "lib/apigateway/base-types:CallApiGatewayEndpointBaseProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.CallApiGatewayHttpApiEndpoint": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst httpApi = new apigatewayv2.HttpApi(this, 'MyHttpApi');\n\nconst invokeTask = new tasks.CallApiGatewayHttpApiEndpoint(this, 'Call HTTP API', {\n  apiId: httpApi.apiId,\n  apiStack: Stack.of(httpApi),\n  method: tasks.HttpMethod.GET,\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-api-gateway.html",
        "stability": "stable",
        "summary": "Call HTTP API endpoint as a Task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.CallApiGatewayHttpApiEndpoint",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/apigateway/call-http-api.ts",
          "line": 42
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.CallApiGatewayHttpApiEndpointProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/apigateway/call-http-api.ts",
        "line": 34
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/apigateway/base.ts",
            "line": 57
          },
          "name": "createPolicyStatements",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-iam.PolicyStatement"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "CallApiGatewayHttpApiEndpoint",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/call-http-api.ts",
            "line": 38
          },
          "name": "apiEndpoint",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/call-http-api.ts",
            "line": 39
          },
          "name": "arnForExecuteApi",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/call-http-api.ts",
            "line": 40
          },
          "name": "stageName",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/call-http-api.ts",
            "line": 35
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/call-http-api.ts",
            "line": 36
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/apigateway/call-http-api:CallApiGatewayHttpApiEndpoint"
    },
    "@aws-cdk/aws-stepfunctions-tasks.CallApiGatewayHttpApiEndpointProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst httpApi = new apigatewayv2.HttpApi(this, 'MyHttpApi');\n\nconst invokeTask = new tasks.CallApiGatewayHttpApiEndpoint(this, 'Call HTTP API', {\n  apiId: httpApi.apiId,\n  apiStack: Stack.of(httpApi),\n  method: tasks.HttpMethod.GET,\n});",
        "stability": "stable",
        "summary": "Properties for calling an HTTP API Endpoint."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.CallApiGatewayHttpApiEndpointProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions-tasks.CallApiGatewayEndpointBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/apigateway/call-http-api.ts",
        "line": 11
      },
      "name": "CallApiGatewayHttpApiEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Id of the API to call."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/call-http-api.ts",
            "line": 15
          },
          "name": "apiId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Stack in which the API is defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/call-http-api.ts",
            "line": 20
          },
          "name": "apiStack",
          "type": {
            "fqn": "@aws-cdk/core.Stack"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'$default'",
            "stability": "stable",
            "summary": "Name of the stage where the API is deployed to in API Gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/call-http-api.ts",
            "line": 26
          },
          "name": "stageName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/apigateway/call-http-api:CallApiGatewayHttpApiEndpointProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.CallApiGatewayRestApiEndpoint": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as apigateway from '@aws-cdk/aws-apigateway';\ndeclare const api: apigateway.RestApi;\n\nnew tasks.CallApiGatewayRestApiEndpoint(this, 'Endpoint', {\n  api,\n  stageName: 'Stage',\n  method: tasks.HttpMethod.PUT,\n  integrationPattern: sfn.IntegrationPattern.WAIT_FOR_TASK_TOKEN,\n  headers: sfn.TaskInput.fromObject({\n    TaskToken: sfn.JsonPath.array(sfn.JsonPath.taskToken),\n  }),\n});",
        "remarks": "Be aware that the header values must be arrays. When passing the Task Token\nin the headers field `WAIT_FOR_TASK_TOKEN` integration, use\n`JsonPath.array()` to wrap the token in an array:\n\n```ts\nimport * as apigateway from '@aws-cdk/aws-apigateway';\ndeclare const api: apigateway.RestApi;\n\nnew tasks.CallApiGatewayRestApiEndpoint(this, 'Endpoint', {\n   api,\n   stageName: 'Stage',\n   method: tasks.HttpMethod.PUT,\n   integrationPattern: sfn.IntegrationPattern.WAIT_FOR_TASK_TOKEN,\n   headers: sfn.TaskInput.fromObject({\n     TaskToken: sfn.JsonPath.array(sfn.JsonPath.taskToken),\n   }),\n});\n```",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-api-gateway.html",
        "stability": "stable",
        "summary": "Call REST API endpoint as a Task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.CallApiGatewayRestApiEndpoint",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/apigateway/call-rest-api.ts",
          "line": 56
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.CallApiGatewayRestApiEndpointProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/apigateway/call-rest-api.ts",
        "line": 48
      },
      "methods": [
        {
          "docs": {
            "stability": "stable"
          },
          "locationInModule": {
            "filename": "lib/apigateway/base.ts",
            "line": 57
          },
          "name": "createPolicyStatements",
          "protected": true,
          "returns": {
            "type": {
              "collection": {
                "elementtype": {
                  "fqn": "@aws-cdk/aws-iam.PolicyStatement"
                },
                "kind": "array"
              }
            }
          }
        }
      ],
      "name": "CallApiGatewayRestApiEndpoint",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/call-rest-api.ts",
            "line": 52
          },
          "name": "apiEndpoint",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/call-rest-api.ts",
            "line": 53
          },
          "name": "arnForExecuteApi",
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/call-rest-api.ts",
            "line": 54
          },
          "name": "stageName",
          "optional": true,
          "protected": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/call-rest-api.ts",
            "line": 49
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/call-rest-api.ts",
            "line": 50
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/apigateway/call-rest-api:CallApiGatewayRestApiEndpoint"
    },
    "@aws-cdk/aws-stepfunctions-tasks.CallApiGatewayRestApiEndpointProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as apigateway from '@aws-cdk/aws-apigateway';\ndeclare const api: apigateway.RestApi;\n\nnew tasks.CallApiGatewayRestApiEndpoint(this, 'Endpoint', {\n  api,\n  stageName: 'Stage',\n  method: tasks.HttpMethod.PUT,\n  integrationPattern: sfn.IntegrationPattern.WAIT_FOR_TASK_TOKEN,\n  headers: sfn.TaskInput.fromObject({\n    TaskToken: sfn.JsonPath.array(sfn.JsonPath.taskToken),\n  }),\n});",
        "stability": "stable",
        "summary": "Properties for calling an REST API Endpoint."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.CallApiGatewayRestApiEndpointProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions-tasks.CallApiGatewayEndpointBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/apigateway/call-rest-api.ts",
        "line": 12
      },
      "name": "CallApiGatewayRestApiEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "API to call."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/call-rest-api.ts",
            "line": 16
          },
          "name": "api",
          "type": {
            "fqn": "@aws-cdk/aws-apigateway.IRestApi"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the stage where the API is deployed to in API Gateway."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/apigateway/call-rest-api.ts",
            "line": 21
          },
          "name": "stageName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/apigateway/call-rest-api:CallApiGatewayRestApiEndpointProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.CallAwsService": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myBucket: s3.Bucket;\nconst getObject = new tasks.CallAwsService(this, 'GetObject', {\n  service: 's3',\n  action: 'getObject',\n  parameters: {\n    Bucket: myBucket.bucketName,\n    Key: sfn.JsonPath.stringAt('$.key')\n  },\n  iamResources: [myBucket.arnForObjects('*')],\n});",
        "stability": "stable",
        "summary": "A StepFunctions task to call an AWS service API."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.CallAwsService",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/aws-sdk/call-aws-service.ts",
          "line": 64
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.CallAwsServiceProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/aws-sdk/call-aws-service.ts",
        "line": 60
      },
      "name": "CallAwsService",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-sdk/call-aws-service.ts",
            "line": 61
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-sdk/call-aws-service.ts",
            "line": 62
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/aws-sdk/call-aws-service:CallAwsService"
    },
    "@aws-cdk/aws-stepfunctions-tasks.CallAwsServiceProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myBucket: s3.Bucket;\nconst getObject = new tasks.CallAwsService(this, 'GetObject', {\n  service: 's3',\n  action: 'getObject',\n  parameters: {\n    Bucket: myBucket.bucketName,\n    Key: sfn.JsonPath.stringAt('$.key')\n  },\n  iamResources: [myBucket.arnForObjects('*')],\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/supported-services-awssdk.html",
        "stability": "stable",
        "summary": "Properties for calling an AWS service's API action from your state machine."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.CallAwsServiceProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/aws-sdk/call-aws-service.ts",
        "line": 13
      },
      "name": "CallAwsServiceProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Use camelCase.",
            "stability": "stable",
            "summary": "The API action to call."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-sdk/call-aws-service.ts",
            "line": 26
          },
          "name": "action",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "By default the action for this IAM statement will be `service:action`.",
            "stability": "stable",
            "summary": "The resources for the IAM statement that will be added to the state machine role's policy to allow the state machine to make the API call."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-sdk/call-aws-service.ts",
            "line": 43
          },
          "name": "iamResources",
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/step-functions/latest/dg/supported-services-awssdk.html",
            "stability": "stable",
            "summary": "The AWS service to call."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-sdk/call-aws-service.ts",
            "line": 19
          },
          "name": "service",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- service:action",
            "remarks": "Use in the case where the IAM action name does not match with the\nAPI service/action name, e.g. `s3:ListBuckets` requires `s3:ListAllMyBuckets`.",
            "stability": "stable",
            "summary": "The action for the IAM statement that will be added to the state machine role's policy to allow the state machine to make the API call."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-sdk/call-aws-service.ts",
            "line": 54
          },
          "name": "iamAction",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no parameters",
            "remarks": "Use PascalCase for the parameter names.",
            "stability": "stable",
            "summary": "Parameters for the API action call."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/aws-sdk/call-aws-service.ts",
            "line": 35
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/aws-sdk/call-aws-service:CallAwsServiceProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.Channel": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Describes the training, validation or test dataset and the Amazon S3 location where it is stored.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const s3Location: stepfunctions_tasks.S3Location;\nconst channel: stepfunctions_tasks.Channel = {\n  channelName: 'channelName',\n  dataSource: {\n    s3DataSource: {\n      s3Location: s3Location,\n\n      // the properties below are optional\n      attributeNames: ['attributeNames'],\n      s3DataDistributionType: stepfunctions_tasks.S3DataDistributionType.FULLY_REPLICATED,\n      s3DataType: stepfunctions_tasks.S3DataType.MANIFEST_FILE,\n    },\n  },\n\n  // the properties below are optional\n  compressionType: stepfunctions_tasks.CompressionType.NONE,\n  contentType: 'contentType',\n  inputMode: stepfunctions_tasks.InputMode.PIPE,\n  recordWrapperType: stepfunctions_tasks.RecordWrapperType.NONE,\n  shuffleConfig: {\n    seed: 123,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.Channel",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 56
      },
      "name": "Channel",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the channel."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 61
          },
          "name": "channelName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Location of the channel data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 80
          },
          "name": "dataSource",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.DataSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "Compression type if training data is compressed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 68
          },
          "name": "compressionType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.CompressionType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The MIME type of the data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 75
          },
          "name": "contentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "Input mode to use for the data channel in a training job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 87
          },
          "name": "inputMode",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.InputMode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "remarks": "In this case, Amazon SageMaker wraps each individual S3 object in a RecordIO record.\nIf the input data is already in RecordIO format, you don't need to set this attribute.",
            "stability": "stable",
            "summary": "Specify RecordIO as the value when input data is in raw format but the training algorithm requires the RecordIO format."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 96
          },
          "name": "recordWrapperType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.RecordWrapperType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "Shuffle config option for input data in a channel."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 103
          },
          "name": "shuffleConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.ShuffleConfig"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:Channel"
    },
    "@aws-cdk/aws-stepfunctions-tasks.Classification": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrContainersStartJobRun(this, 'EMR Containers Start Job Run', {\n  virtualCluster: tasks.VirtualClusterInput.fromVirtualClusterId('de92jdei2910fwedz'),\n  releaseLabel: tasks.ReleaseLabel.EMR_6_2_0,\n  jobName: 'EMR-Containers-Job',\n  jobDriver: {\n    sparkSubmitJobDriver: {\n      entryPoint: sfn.TaskInput.fromText('local:///usr/lib/spark/examples/src/main/python/pi.py'),\n    },\n  },\n  applicationConfig: [{\n    classification: tasks.Classification.SPARK_DEFAULTS,\n    properties: {\n      'spark.executor.instances': '1',\n      'spark.executor.memory': '512M',\n    },\n  }],\n});",
        "remarks": "Class can be extended to add other classifications.\nFor example, new Classification('xxx-yyy');",
        "stability": "stable",
        "summary": "The classification within a EMR Containers application configuration."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.Classification",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Creates a new Classification."
        },
        "locationInModule": {
          "filename": "lib/emrcontainers/start-job-run.ts",
          "line": 535
        },
        "parameters": [
          {
            "docs": {
              "summary": "A literal string in case a new EMR classification is released, if not already defined."
            },
            "name": "classificationStatement",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emrcontainers/start-job-run.ts",
        "line": 483
      },
      "name": "Classification",
      "properties": [
        {
          "const": true,
          "docs": {
            "remarks": "When true, Amazon EMR automatically configures spark-defaults properties based on cluster hardware configuration.\n\nFor more info:",
            "see": "https://docs.aws.amazon.com/emr/latest/ReleaseGuide/emr-spark-configure.html#emr-spark-maximizeresourceallocation",
            "stability": "stable",
            "summary": "Sets the maximizeResourceAllocation property to true or false."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 491
          },
          "name": "SPARK",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.Classification"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "For more info:",
            "see": "https://spark.apache.org/docs/latest/configuration.html",
            "stability": "stable",
            "summary": "Sets values in the spark-defaults.conf file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 499
          },
          "name": "SPARK_DEFAULTS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.Classification"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "For more info:",
            "see": "https://spark.apache.org/docs/latest/configuration.html#environment-variables",
            "stability": "stable",
            "summary": "Sets values in the spark-env.sh file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 507
          },
          "name": "SPARK_ENV",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.Classification"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "Sets values in the hive-site.xml for Spark."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 512
          },
          "name": "SPARK_HIVE_SITE",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.Classification"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "For more settings and info:",
            "see": "https://github.com/apache/spark/blob/master/conf/log4j.properties.template",
            "stability": "stable",
            "summary": "Sets values in the log4j.properties file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 520
          },
          "name": "SPARK_LOG4J",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.Classification"
          }
        },
        {
          "const": true,
          "docs": {
            "remarks": "For more settings and info:",
            "see": "https://github.com/apache/spark/blob/master/conf/metrics.properties.template",
            "stability": "stable",
            "summary": "Sets values in the metrics.properties file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 528
          },
          "name": "SPARK_METRICS",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.Classification"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "A literal string in case a new EMR classification is released, if not already defined."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 535
          },
          "name": "classificationStatement",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emrcontainers/start-job-run:Classification"
    },
    "@aws-cdk/aws-stepfunctions-tasks.CodeBuildStartBuild": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as codebuild from '@aws-cdk/aws-codebuild';\n\nconst codebuildProject = new codebuild.Project(this, 'Project', {\n  projectName: 'MyTestProject',\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands: [\n          'echo \"Hello, CodeBuild!\"',\n        ],\n      },\n    },\n  }),\n});\n\nconst task = new tasks.CodeBuildStartBuild(this, 'Task', {\n  project: codebuildProject,\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n  environmentVariablesOverride: {\n    ZONE: {\n      type: codebuild.BuildEnvironmentVariableType.PLAINTEXT,\n      value: sfn.JsonPath.stringAt('$.envVariables.zone'),\n    },\n  },\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-codebuild.html",
        "stability": "stable",
        "summary": "Start a CodeBuild Build as a task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.CodeBuildStartBuild",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/codebuild/start-build.ts",
          "line": 40
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.CodeBuildStartBuildProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/codebuild/start-build.ts",
        "line": 29
      },
      "name": "CodeBuildStartBuild",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild/start-build.ts",
            "line": 35
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild/start-build.ts",
            "line": 36
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/codebuild/start-build:CodeBuildStartBuild"
    },
    "@aws-cdk/aws-stepfunctions-tasks.CodeBuildStartBuildProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as codebuild from '@aws-cdk/aws-codebuild';\n\nconst codebuildProject = new codebuild.Project(this, 'Project', {\n  projectName: 'MyTestProject',\n  buildSpec: codebuild.BuildSpec.fromObject({\n    version: '0.2',\n    phases: {\n      build: {\n        commands: [\n          'echo \"Hello, CodeBuild!\"',\n        ],\n      },\n    },\n  }),\n});\n\nconst task = new tasks.CodeBuildStartBuild(this, 'Task', {\n  project: codebuildProject,\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n  environmentVariablesOverride: {\n    ZONE: {\n      type: codebuild.BuildEnvironmentVariableType.PLAINTEXT,\n      value: sfn.JsonPath.stringAt('$.envVariables.zone'),\n    },\n  },\n});",
        "stability": "stable",
        "summary": "Properties for CodeBuildStartBuild."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.CodeBuildStartBuildProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/codebuild/start-build.ts",
        "line": 11
      },
      "name": "CodeBuildStartBuildProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "CodeBuild project to start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild/start-build.ts",
            "line": 15
          },
          "name": "project",
          "type": {
            "fqn": "@aws-cdk/aws-codebuild.IProject"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the latest environment variables already defined in the build project.",
            "stability": "stable",
            "summary": "A set of environment variables to be used for this build only."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/codebuild/start-build.ts",
            "line": 21
          },
          "name": "environmentVariablesOverride",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-codebuild.BuildEnvironmentVariable"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/codebuild/start-build:CodeBuildStartBuildProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.CommonEcsRunTaskProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Basic properties for ECS Tasks.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const cluster: ecs.Cluster;\ndeclare const containerDefinition: ecs.ContainerDefinition;\ndeclare const taskDefinition: ecs.TaskDefinition;\nconst commonEcsRunTaskProps: stepfunctions_tasks.CommonEcsRunTaskProps = {\n  cluster: cluster,\n  taskDefinition: taskDefinition,\n\n  // the properties below are optional\n  containerOverrides: [{\n    containerDefinition: containerDefinition,\n\n    // the properties below are optional\n    command: ['command'],\n    cpu: 123,\n    environment: [{\n      name: 'name',\n      value: 'value',\n    }],\n    memoryLimit: 123,\n    memoryReservation: 123,\n  }],\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.CommonEcsRunTaskProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/run-ecs-task-base.ts",
        "line": 12
      },
      "name": "CommonEcsRunTaskProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The topic to run the task on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-task-base.ts",
            "line": 16
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ICluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note: this must be TaskDefinition, and not ITaskDefinition,\nas it requires properties that are not known for imported task definitions",
            "stability": "stable",
            "summary": "Task Definition used for running tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-task-base.ts",
            "line": 24
          },
          "name": "taskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No overrides",
            "remarks": "Key is the name of the container to override, value is the\nvalues you want to override.",
            "stability": "stable",
            "summary": "Container setting overrides."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-task-base.ts",
            "line": 34
          },
          "name": "containerOverrides",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.ContainerOverride"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "FIRE_AND_FORGET",
            "remarks": "The valid value for Lambda is FIRE_AND_FORGET, SYNC and WAIT_FOR_TASK_TOKEN.",
            "stability": "stable",
            "summary": "The service integration pattern indicates different ways to call RunTask in ECS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-task-base.ts",
            "line": 43
          },
          "name": "integrationPattern",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.ServiceIntegrationPattern"
          }
        }
      ],
      "symbolId": "lib/ecs/run-ecs-task-base:CommonEcsRunTaskProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.CompressionType": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "Compression type of the data."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.CompressionType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 474
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "None compression type."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Gzip compression type."
          },
          "name": "GZIP"
        }
      ],
      "name": "CompressionType",
      "symbolId": "lib/sagemaker/base-types:CompressionType"
    },
    "@aws-cdk/aws-stepfunctions-tasks.ContainerDefinition": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateModel(this, 'Sagemaker', {\n  modelName: 'MyModel',\n  primaryContainer: new tasks.ContainerDefinition({\n    image: tasks.DockerImage.fromJsonExpression(sfn.JsonPath.stringAt('$.Model.imageName')),\n    mode: tasks.Mode.SINGLE_MODEL,\n    modelS3Location: tasks.S3Location.fromJsonExpression('$.TrainingJob.ModelArtifacts.S3ModelArtifacts'),\n  }),\n});",
        "see": "https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ContainerDefinition.html",
        "stability": "stable",
        "summary": "Describes the container, as part of model definition."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.ContainerDefinition",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/sagemaker/base-types.ts",
          "line": 687
        },
        "parameters": [
          {
            "name": "options",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.ContainerDefinitionOptions"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-stepfunctions-tasks.IContainerDefinition"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 685
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the ContainerDefinition type configured on Sagemaker Task."
          },
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 692
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-stepfunctions-tasks.IContainerDefinition",
          "parameters": [
            {
              "name": "task",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.ISageMakerTask"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.ContainerDefinitionConfig"
            }
          }
        }
      ],
      "name": "ContainerDefinition",
      "symbolId": "lib/sagemaker/base-types:ContainerDefinition"
    },
    "@aws-cdk/aws-stepfunctions-tasks.ContainerDefinitionConfig": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration options for the ContainerDefinition.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const parameters: any;\nconst containerDefinitionConfig: stepfunctions_tasks.ContainerDefinitionConfig = {\n  parameters: {\n    parametersKey: parameters,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.ContainerDefinitionConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 721
      },
      "name": "ContainerDefinitionConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No additional parameters passed",
            "stability": "stable",
            "summary": "Additional parameters to pass to the base task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 727
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:ContainerDefinitionConfig"
    },
    "@aws-cdk/aws-stepfunctions-tasks.ContainerDefinitionOptions": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateModel(this, 'Sagemaker', {\n  modelName: 'MyModel',\n  primaryContainer: new tasks.ContainerDefinition({\n    image: tasks.DockerImage.fromJsonExpression(sfn.JsonPath.stringAt('$.Model.imageName')),\n    mode: tasks.Mode.SINGLE_MODEL,\n    modelS3Location: tasks.S3Location.fromJsonExpression('$.TrainingJob.ModelArtifacts.S3ModelArtifacts'),\n  }),\n});",
        "see": "https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ContainerDefinition.html",
        "stability": "stable",
        "summary": "Properties to define a ContainerDefinition."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.ContainerDefinitionOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 637
      },
      "name": "ContainerDefinitionOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "remarks": "When a ContainerDefinition is part of an inference pipeline,\nthe value of the parameter uniquely identifies the container for the purposes of logging and metrics.",
            "stability": "stable",
            "summary": "This parameter is ignored for models that contain only a PrimaryContainer."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 669
          },
          "name": "containerHostName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No variables",
            "stability": "stable",
            "summary": "The environment variables to set in the Docker container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 649
          },
          "name": "environmentVariables",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The Amazon EC2 Container Registry (Amazon ECR) path where inference code is stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 643
          },
          "name": "image",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.DockerImage"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Mode.SINGLE_MODEL",
            "stability": "stable",
            "summary": "Defines how many models the container hosts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 661
          },
          "name": "mode",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.Mode"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The name or Amazon Resource Name (ARN) of the model package to use to create the model."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 655
          },
          "name": "modelPackageName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "remarks": "This path must point to a single gzip compressed tar archive (.tar.gz suffix).\nThe S3 path is required for Amazon SageMaker built-in algorithms, but not if you use your own algorithms.",
            "stability": "stable",
            "summary": "The S3 path where the model artifacts, which result from model training, are stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 677
          },
          "name": "modelS3Location",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.S3Location"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:ContainerDefinitionOptions"
    },
    "@aws-cdk/aws-stepfunctions-tasks.ContainerOverride": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "A list of container overrides that specify the name of a container and the overrides it should receive.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const containerDefinition: ecs.ContainerDefinition;\nconst containerOverride: stepfunctions_tasks.ContainerOverride = {\n  containerDefinition: containerDefinition,\n\n  // the properties below are optional\n  command: ['command'],\n  cpu: 123,\n  environment: [{\n    name: 'name',\n    value: 'value',\n  }],\n  memoryLimit: 123,\n  memoryReservation: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.ContainerOverride",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/run-ecs-task-base-types.ts",
        "line": 7
      },
      "name": "ContainerOverride",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the container inside the task definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-task-base-types.ts",
            "line": 11
          },
          "name": "containerDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ContainerDefinition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Default command from the Docker image or the task definition",
            "stability": "stable",
            "summary": "Command to run inside the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-task-base-types.ts",
            "line": 18
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The default value from the task definition.",
            "stability": "stable",
            "summary": "The number of cpu units reserved for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-task-base-types.ts",
            "line": 35
          },
          "name": "cpu",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The existing environment variables from the Docker image or the task definition",
            "remarks": "You can add new environment variables, which are added to the container at launch,\nor you can override the existing environment variables from the Docker image or the task definition.",
            "stability": "stable",
            "summary": "The environment variables to send to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-task-base-types.ts",
            "line": 28
          },
          "name": "environment",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.TaskEnvironmentVariable"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The default value from the task definition.",
            "stability": "stable",
            "summary": "The hard limit (in MiB) of memory to present to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-task-base-types.ts",
            "line": 42
          },
          "name": "memoryLimit",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The default value from the task definition.",
            "stability": "stable",
            "summary": "The soft limit (in MiB) of memory to reserve for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-task-base-types.ts",
            "line": 49
          },
          "name": "memoryReservation",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/ecs/run-ecs-task-base-types:ContainerOverride"
    },
    "@aws-cdk/aws-stepfunctions-tasks.ContainerOverrides": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "The overrides that should be sent to a container.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const instanceType: ec2.InstanceType;\nconst containerOverrides: stepfunctions_tasks.ContainerOverrides = {\n  command: ['command'],\n  environment: {\n    environmentKey: 'environment',\n  },\n  gpuCount: 123,\n  instanceType: instanceType,\n  memory: 123,\n  vcpus: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.ContainerOverrides",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/batch/run-batch-job.ts",
        "line": 10
      },
      "name": "ContainerOverrides",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No command overrides",
            "stability": "stable",
            "summary": "The command to send to the container that overrides the default command from the Docker image or the job definition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 17
          },
          "name": "command",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No environment overrides",
            "remarks": "You can add new environment variables, which are added to the container\nat launch, or you can override the existing environment variables from\nthe Docker image or the job definition.",
            "stability": "stable",
            "summary": "The environment variables to send to the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 27
          },
          "name": "environment",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No GPU reservation",
            "remarks": "The number of GPUs reserved for all containers in a job\nshould not exceed the number of available GPUs on the compute\nresource that the job is launched on.",
            "stability": "stable",
            "summary": "The number of physical GPUs to reserve for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 53
          },
          "name": "gpuCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No instance type overrides",
            "remarks": "This parameter is not valid for single-node container jobs.",
            "stability": "stable",
            "summary": "The instance type to use for a multi-node parallel job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 35
          },
          "name": "instanceType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No memory overrides",
            "remarks": "This value overrides the value set in the job definition.",
            "stability": "stable",
            "summary": "The number of MiB of memory reserved for the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 43
          },
          "name": "memory",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No vCPUs overrides",
            "remarks": "This value overrides the value set in the job definition.",
            "stability": "stable",
            "summary": "The number of vCPUs to reserve for the container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 61
          },
          "name": "vcpus",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/batch/run-batch-job:ContainerOverrides"
    },
    "@aws-cdk/aws-stepfunctions-tasks.DataSource": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTrainingJob(this, 'TrainSagemaker', {\n  trainingJobName: sfn.JsonPath.stringAt('$.JobName'),\n  algorithmSpecification: {\n    algorithmName: 'BlazingText',\n    trainingInputMode: tasks.InputMode.FILE,\n  },\n  inputDataConfig: [{\n    channelName: 'train',\n    dataSource: {\n      s3DataSource: {\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n        s3Location: tasks.S3Location.fromJsonExpression('$.S3Bucket'),\n      },\n    },\n  }],\n  outputDataConfig: {\n    s3OutputLocation: tasks.S3Location.fromBucket(s3.Bucket.fromBucketName(this, 'Bucket', 'mybucket'), 'myoutputpath'),\n  },\n  resourceConfig: {\n    instanceCount: 1,\n    instanceType: new ec2.InstanceType(sfn.JsonPath.stringAt('$.InstanceType')),\n    volumeSize: Size.gibibytes(50),\n  }, // optional: default is 1 instance of EC2 `M4.XLarge` with `10GB` volume\n  stoppingCondition: {\n    maxRuntime: Duration.hours(2),\n  }, // optional: default is 1 hour\n});",
        "stability": "stable",
        "summary": "Location of the channel data."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.DataSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 121
      },
      "name": "DataSource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "S3 location of the data source that is associated with a channel."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 125
          },
          "name": "s3DataSource",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.S3DataSource"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:DataSource"
    },
    "@aws-cdk/aws-stepfunctions-tasks.DockerImage": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateModel(this, 'Sagemaker', {\n  modelName: 'MyModel',\n  primaryContainer: new tasks.ContainerDefinition({\n    image: tasks.DockerImage.fromJsonExpression(sfn.JsonPath.stringAt('$.Model.imageName')),\n    mode: tasks.Mode.SINGLE_MODEL,\n    modelS3Location: tasks.S3Location.fromJsonExpression('$.TrainingJob.ModelArtifacts.S3ModelArtifacts'),\n  }),\n});",
        "stability": "stable",
        "summary": "Creates `IDockerImage` instances."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.DockerImage",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 351
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference a Docker image that is provided as an Asset in the current app."
          },
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 390
          },
          "name": "fromAsset",
          "parameters": [
            {
              "docs": {
                "summary": "the scope in which to create the Asset."
              },
              "name": "scope",
              "type": {
                "fqn": "constructs.Construct"
              }
            },
            {
              "docs": {
                "summary": "the ID for the asset in the construct tree."
              },
              "name": "id",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "the configuration props of the asset."
              },
              "name": "props",
              "type": {
                "fqn": "@aws-cdk/aws-ecr-assets.DockerImageAssetProps"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DockerImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference a Docker image stored in an ECR repository."
          },
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 358
          },
          "name": "fromEcrRepository",
          "parameters": [
            {
              "docs": {
                "summary": "the ECR repository where the image is hosted."
              },
              "name": "repository",
              "type": {
                "fqn": "@aws-cdk/aws-ecr.IRepository"
              }
            },
            {
              "docs": {
                "summary": "an optional `tag`."
              },
              "name": "tag",
              "optional": true,
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DockerImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Reference a Docker image which URI is obtained from the task's input."
          },
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 368
          },
          "name": "fromJsonExpression",
          "parameters": [
            {
              "docs": {
                "summary": "the JSON path expression with the task input."
              },
              "name": "expression",
              "type": {
                "primitive": "string"
              }
            },
            {
              "docs": {
                "summary": "whether ECR access should be permitted (set to `false` if the image will never be in ECR)."
              },
              "name": "allowAnyEcrImagePull",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DockerImage"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "When referencing ECR images, prefer using `inEcr`.",
            "stability": "stable",
            "summary": "Reference a Docker image by it's URI."
          },
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 379
          },
          "name": "fromRegistry",
          "parameters": [
            {
              "docs": {
                "summary": "the URI to the docker image."
              },
              "name": "imageUri",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DockerImage"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Called when the image is used by a SageMaker task."
          },
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 398
          },
          "name": "bind",
          "parameters": [
            {
              "name": "task",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.ISageMakerTask"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DockerImageConfig"
            }
          }
        }
      ],
      "name": "DockerImage",
      "symbolId": "lib/sagemaker/base-types:DockerImage"
    },
    "@aws-cdk/aws-stepfunctions-tasks.DockerImageConfig": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for a using Docker image.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst dockerImageConfig: stepfunctions_tasks.DockerImageConfig = {\n  imageUri: 'imageUri',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.DockerImageConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 340
      },
      "name": "DockerImageConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The fully qualified URI of the Docker image."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 344
          },
          "name": "imageUri",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:DockerImageConfig"
    },
    "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myTable: dynamodb.Table;\nnew tasks.DynamoDeleteItem(this, 'DeleteItem', {\n  key: { MessageId: tasks.DynamoAttributeValue.fromString('message-007') },\n  table: myTable,\n  resultPath: sfn.JsonPath.DISCARD,\n});",
        "remarks": "Each attribute value is described as a name-value pair.\nThe name is the data type, and the value is the data itself.",
        "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_AttributeValue.html",
        "stability": "stable",
        "summary": "Represents the data for an attribute."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/dynamodb/shared-types.ts",
        "line": 119
      },
      "methods": [
        {
          "docs": {
            "remarks": "For example:  \"BOOL\": true",
            "stability": "stable",
            "summary": "Sets an attribute of type Boolean from state input through Json path."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 252
          },
          "name": "booleanFromJsonPath",
          "parameters": [
            {
              "docs": {
                "summary": "Json path that specifies state input to be used."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For example:  \"B\": \"dGhpcyB0ZXh0IGlzIGJhc2U2NC1lbmNvZGVk\"",
            "stability": "stable",
            "summary": "Sets an attribute of type Binary."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 158
          },
          "name": "fromBinary",
          "parameters": [
            {
              "docs": {
                "summary": "base-64 encoded string."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For example:  \"BS\": [\"U3Vubnk=\", \"UmFpbnk=\", \"U25vd3k=\"]",
            "stability": "stable",
            "summary": "Sets an attribute of type Binary Set."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 194
          },
          "name": "fromBinarySet",
          "parameters": [
            {
              "name": "value",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For example:  \"BOOL\": true",
            "stability": "stable",
            "summary": "Sets an attribute of type Boolean."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 242
          },
          "name": "fromBoolean",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For example:  \"L\": [ {\"S\": \"Cookies\"} , {\"S\": \"Coffee\"}, {\"N\", \"3.14159\"}]",
            "stability": "stable",
            "summary": "Sets an attribute of type List."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 218
          },
          "name": "fromList",
          "parameters": [
            {
              "name": "value",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For example:  \"M\": {\"Name\": {\"S\": \"Joe\"}, \"Age\": {\"N\": \"35\"}}",
            "stability": "stable",
            "summary": "Sets an attribute of type Map."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 201
          },
          "name": "fromMap",
          "parameters": [
            {
              "name": "value",
              "type": {
                "collection": {
                  "elementtype": {
                    "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
                  },
                  "kind": "map"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For example:  \"NULL\": true",
            "stability": "stable",
            "summary": "Sets an attribute of type Null."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 235
          },
          "name": "fromNull",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "boolean"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For example: 1234\nNumbers are sent across the network to DynamoDB as strings,\nto maximize compatibility across languages and libraries.\nHowever, DynamoDB treats them as number type attributes for mathematical operations.",
            "stability": "stable",
            "summary": "Sets a literal number."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 137
          },
          "name": "fromNumber",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For example:  \"NS\": [\"42.2\", \"-19\", \"7.5\", \"3.14\"]\nNumbers are sent across the network to DynamoDB as strings,\nto maximize compatibility across languages and libraries.\nHowever, DynamoDB treats them as number type attributes for mathematical operations.",
            "stability": "stable",
            "summary": "Sets an attribute of type Number Set."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 175
          },
          "name": "fromNumberSet",
          "parameters": [
            {
              "name": "value",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "number"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For example:  \"S\": \"Hello\"\nStrings may be literal values or as JsonPath. Example values:\n\n- `DynamoAttributeValue.fromString('someValue')`\n- `DynamoAttributeValue.fromString(JsonPath.stringAt('$.bar'))`",
            "stability": "stable",
            "summary": "Sets an attribute of type String."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 127
          },
          "name": "fromString",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For example:  \"SS\": [\"Giraffe\", \"Hippo\" ,\"Zebra\"]",
            "stability": "stable",
            "summary": "Sets an attribute of type String Set."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 165
          },
          "name": "fromStringSet",
          "parameters": [
            {
              "name": "value",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For example:  \"L\": [ {\"S\": \"Cookies\"} , {\"S\": \"Coffee\"}, {\"S\", \"Veggies\"}]",
            "stability": "stable",
            "summary": "Sets an attribute of type List."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 227
          },
          "name": "listFromJsonPath",
          "parameters": [
            {
              "docs": {
                "summary": "Json path that specifies state input to be used."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For example:  \"M\": {\"Name\": {\"S\": \"Joe\"}, \"Age\": {\"N\": \"35\"}}",
            "stability": "stable",
            "summary": "Sets an attribute of type Map."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 210
          },
          "name": "mapFromJsonPath",
          "parameters": [
            {
              "docs": {
                "summary": "Json path that specifies state input to be used."
              },
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For example:  \"N\": \"123.45\"\nNumbers are sent across the network to DynamoDB as strings,\nto maximize compatibility across languages and libraries.\nHowever, DynamoDB treats them as number type attributes for mathematical operations.\n\nNumbers may be expressed as literal strings or as JsonPath",
            "stability": "stable",
            "summary": "Sets an attribute of type Number."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 149
          },
          "name": "numberFromString",
          "parameters": [
            {
              "name": "value",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "For example:  \"NS\": [\"42.2\", \"-19\", \"7.5\", \"3.14\"]\nNumbers are sent across the network to DynamoDB as strings,\nto maximize compatibility across languages and libraries.\nHowever, DynamoDB treats them as number type attributes for mathematical operations.\n\nNumbers may be expressed as literal strings or as JsonPath",
            "stability": "stable",
            "summary": "Sets an attribute of type Number Set."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 187
          },
          "name": "numberSetFromStrings",
          "parameters": [
            {
              "name": "value",
              "type": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns the DynamoDB attribute value."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 270
          },
          "name": "toObject",
          "returns": {
            "type": {
              "primitive": "any"
            }
          }
        }
      ],
      "name": "DynamoAttributeValue",
      "properties": [
        {
          "docs": {
            "remarks": "Data can be\ni.e. \"S\": \"Hello\"",
            "stability": "stable",
            "summary": "Represents the data for the attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 261
          },
          "name": "attributeValue",
          "type": {
            "primitive": "any"
          }
        }
      ],
      "symbolId": "lib/dynamodb/shared-types:DynamoAttributeValue"
    },
    "@aws-cdk/aws-stepfunctions-tasks.DynamoConsumedCapacity": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "Determines the level of detail about provisioned throughput consumption that is returned."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoConsumedCapacity",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/dynamodb/shared-types.ts",
        "line": 6
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The response includes the aggregate ConsumedCapacity for the operation, together with ConsumedCapacity for each table and secondary index that was accessed."
          },
          "name": "INDEXES"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The response includes only the aggregate ConsumedCapacity for the operation."
          },
          "name": "TOTAL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "No ConsumedCapacity details are included in the response."
          },
          "name": "NONE"
        }
      ],
      "name": "DynamoConsumedCapacity",
      "symbolId": "lib/dynamodb/shared-types:DynamoConsumedCapacity"
    },
    "@aws-cdk/aws-stepfunctions-tasks.DynamoDeleteItem": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myTable: dynamodb.Table;\nnew tasks.DynamoDeleteItem(this, 'DeleteItem', {\n  key: { MessageId: tasks.DynamoAttributeValue.fromString('message-007') },\n  table: myTable,\n  resultPath: sfn.JsonPath.DISCARD,\n});",
        "stability": "stable",
        "summary": "A StepFunctions task to call DynamoDeleteItem."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoDeleteItem",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/dynamodb/delete-item.ts",
          "line": 92
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoDeleteItemProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/dynamodb/delete-item.ts",
        "line": 88
      },
      "name": "DynamoDeleteItem",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/delete-item.ts",
            "line": 89
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/delete-item.ts",
            "line": 90
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/dynamodb/delete-item:DynamoDeleteItem"
    },
    "@aws-cdk/aws-stepfunctions-tasks.DynamoDeleteItemProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myTable: dynamodb.Table;\nnew tasks.DynamoDeleteItem(this, 'DeleteItem', {\n  key: { MessageId: tasks.DynamoAttributeValue.fromString('message-007') },\n  table: myTable,\n  resultPath: sfn.JsonPath.DISCARD,\n});",
        "stability": "stable",
        "summary": "Properties for DynamoDeleteItem Task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoDeleteItemProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/dynamodb/delete-item.ts",
        "line": 12
      },
      "name": "DynamoDeleteItemProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For the primary key, you must provide all of the attributes.\nFor example, with a simple primary key, you only need to provide a value for the partition key.\nFor a composite primary key, you must provide values for both the partition key and the sort key.",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_GetItem.html#DDB-GetItem-request-Key",
            "stability": "stable",
            "summary": "Primary key of the item to retrieve."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/delete-item.ts",
            "line": 27
          },
          "name": "key",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the table containing the requested item."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/delete-item.ts",
            "line": 16
          },
          "name": "table",
          "type": {
            "fqn": "@aws-cdk/aws-dynamodb.ITable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No condition expression",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_DeleteItem.html#DDB-DeleteItem-request-ConditionExpression",
            "stability": "stable",
            "summary": "A condition that must be satisfied in order for a conditional DeleteItem to succeed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/delete-item.ts",
            "line": 36
          },
          "name": "conditionExpression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No expression attribute names",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_DeleteItem.html#DDB-DeleteItem-request-ExpressionAttributeNames",
            "stability": "stable",
            "summary": "One or more substitution tokens for attribute names in an expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/delete-item.ts",
            "line": 45
          },
          "name": "expressionAttributeNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No expression attribute values",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_DeleteItem.html#DDB-DeleteItem-request-ExpressionAttributeValues",
            "stability": "stable",
            "summary": "One or more values that can be substituted in an expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/delete-item.ts",
            "line": 54
          },
          "name": "expressionAttributeValues",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DynamoConsumedCapacity.NONE",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_DeleteItem.html#DDB-DeleteItem-request-ReturnConsumedCapacity",
            "stability": "stable",
            "summary": "Determines the level of detail about provisioned throughput consumption that is returned in the response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/delete-item.ts",
            "line": 63
          },
          "name": "returnConsumedCapacity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoConsumedCapacity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DynamoItemCollectionMetrics.NONE",
            "remarks": "If set to SIZE, the response includes statistics about item collections, if any,\nthat were modified during the operation are returned in the response.\nIf set to NONE (the default), no statistics are returned.",
            "stability": "stable",
            "summary": "Determines whether item collection metrics are returned."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/delete-item.ts",
            "line": 73
          },
          "name": "returnItemCollectionMetrics",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoItemCollectionMetrics"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DynamoReturnValues.NONE",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_DeleteItem.html#DDB-DeleteItem-request-ReturnValues",
            "stability": "stable",
            "summary": "Use ReturnValues if you want to get the item attributes as they appeared before they were deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/delete-item.ts",
            "line": 82
          },
          "name": "returnValues",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoReturnValues"
          }
        }
      ],
      "symbolId": "lib/dynamodb/delete-item:DynamoDeleteItemProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.DynamoGetItem": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myTable: dynamodb.Table;\nnew tasks.DynamoGetItem(this, 'Get Item', {\n  key: { messageId: tasks.DynamoAttributeValue.fromString('message-007') },\n  table: myTable,\n});",
        "stability": "stable",
        "summary": "A StepFunctions task to call DynamoGetItem."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoGetItem",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/dynamodb/get-item.ts",
          "line": 74
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoGetItemProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/dynamodb/get-item.ts",
        "line": 70
      },
      "name": "DynamoGetItem",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/get-item.ts",
            "line": 71
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/get-item.ts",
            "line": 72
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/dynamodb/get-item:DynamoGetItem"
    },
    "@aws-cdk/aws-stepfunctions-tasks.DynamoGetItemProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myTable: dynamodb.Table;\nnew tasks.DynamoGetItem(this, 'Get Item', {\n  key: { messageId: tasks.DynamoAttributeValue.fromString('message-007') },\n  table: myTable,\n});",
        "stability": "stable",
        "summary": "Properties for DynamoGetItem Task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoGetItemProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/dynamodb/get-item.ts",
        "line": 12
      },
      "name": "DynamoGetItemProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For the primary key, you must provide all of the attributes.\nFor example, with a simple primary key, you only need to provide a value for the partition key.\nFor a composite primary key, you must provide values for both the partition key and the sort key.",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_GetItem.html#DDB-GetItem-request-Key",
            "stability": "stable",
            "summary": "Primary key of the item to retrieve."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/get-item.ts",
            "line": 27
          },
          "name": "key",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the table containing the requested item."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/get-item.ts",
            "line": 16
          },
          "name": "table",
          "type": {
            "fqn": "@aws-cdk/aws-dynamodb.ITable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "otherwise, the operation uses eventually consistent reads.",
            "stability": "stable",
            "summary": "Determines the read consistency model: If set to true, then the operation uses strongly consistent reads;"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/get-item.ts",
            "line": 36
          },
          "name": "consistentRead",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No expression attributes",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_GetItem.html#DDB-GetItem-request-ExpressionAttributeNames",
            "stability": "stable",
            "summary": "One or more substitution tokens for attribute names in an expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/get-item.ts",
            "line": 45
          },
          "name": "expressionAttributeNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No projection expression",
            "remarks": "These attributes can include scalars, sets, or elements of a JSON document.",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_GetItem.html#DDB-GetItem-request-ProjectionExpression",
            "stability": "stable",
            "summary": "An array of DynamoProjectionExpression that identifies one or more attributes to retrieve from the table."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/get-item.ts",
            "line": 55
          },
          "name": "projectionExpression",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoProjectionExpression"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DynamoConsumedCapacity.NONE",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_GetItem.html#DDB-GetItem-request-ReturnConsumedCapacity",
            "stability": "stable",
            "summary": "Determines the level of detail about provisioned throughput consumption that is returned in the response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/get-item.ts",
            "line": 64
          },
          "name": "returnConsumedCapacity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoConsumedCapacity"
          }
        }
      ],
      "symbolId": "lib/dynamodb/get-item:DynamoGetItemProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.DynamoItemCollectionMetrics": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "Determines whether item collection metrics are returned."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoItemCollectionMetrics",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/dynamodb/shared-types.ts",
        "line": 27
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "If set to SIZE, the response includes statistics about item collections, if any, that were modified during the operation."
          },
          "name": "SIZE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "If set to NONE, no statistics are returned."
          },
          "name": "NONE"
        }
      ],
      "name": "DynamoItemCollectionMetrics",
      "symbolId": "lib/dynamodb/shared-types:DynamoItemCollectionMetrics"
    },
    "@aws-cdk/aws-stepfunctions-tasks.DynamoProjectionExpression": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "Class to generate projection expression.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst dynamoProjectionExpression = new stepfunctions_tasks.DynamoProjectionExpression();",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoProjectionExpression",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/dynamodb/shared-types.ts",
        "line": 73
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds the array literal access for passed index."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 95
          },
          "name": "atIndex",
          "parameters": [
            {
              "docs": {
                "summary": "array index."
              },
              "name": "index",
              "type": {
                "primitive": "number"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoProjectionExpression"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "converts and return the string expression."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 107
          },
          "name": "toString",
          "returns": {
            "type": {
              "primitive": "string"
            }
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Adds the passed attribute to the chain."
          },
          "locationInModule": {
            "filename": "lib/dynamodb/shared-types.ts",
            "line": 81
          },
          "name": "withAttribute",
          "parameters": [
            {
              "docs": {
                "summary": "Attribute name."
              },
              "name": "attr",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoProjectionExpression"
            }
          }
        }
      ],
      "name": "DynamoProjectionExpression",
      "symbolId": "lib/dynamodb/shared-types:DynamoProjectionExpression"
    },
    "@aws-cdk/aws-stepfunctions-tasks.DynamoPutItem": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myTable: dynamodb.Table;\nnew tasks.DynamoPutItem(this, 'PutItem', {\n  item: {\n    MessageId: tasks.DynamoAttributeValue.fromString('message-id'),\n  },\n  table: myTable,\n  resultPath: `$.Item`,\n});",
        "stability": "stable",
        "summary": "A StepFunctions task to call DynamoPutItem."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoPutItem",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/dynamodb/put-item.ts",
          "line": 90
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoPutItemProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/dynamodb/put-item.ts",
        "line": 86
      },
      "name": "DynamoPutItem",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/put-item.ts",
            "line": 87
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/put-item.ts",
            "line": 88
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/dynamodb/put-item:DynamoPutItem"
    },
    "@aws-cdk/aws-stepfunctions-tasks.DynamoPutItemProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myTable: dynamodb.Table;\nnew tasks.DynamoPutItem(this, 'PutItem', {\n  item: {\n    MessageId: tasks.DynamoAttributeValue.fromString('message-id'),\n  },\n  table: myTable,\n  resultPath: `$.Item`,\n});",
        "stability": "stable",
        "summary": "Properties for DynamoPutItem Task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoPutItemProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/dynamodb/put-item.ts",
        "line": 12
      },
      "name": "DynamoPutItemProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Only the primary key attributes are required;\nyou can optionally provide other attribute name-value pairs for the item.",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html#DDB-PutItem-request-Item",
            "stability": "stable",
            "summary": "A map of attribute name/value pairs, one for each attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/put-item.ts",
            "line": 20
          },
          "name": "item",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the table where the item should be written ."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/put-item.ts",
            "line": 25
          },
          "name": "table",
          "type": {
            "fqn": "@aws-cdk/aws-dynamodb.ITable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No condition expression",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html#DDB-PutItem-request-ConditionExpression",
            "stability": "stable",
            "summary": "A condition that must be satisfied in order for a conditional PutItem operation to succeed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/put-item.ts",
            "line": 34
          },
          "name": "conditionExpression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No expression attribute names",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html#DDB-PutItem-request-ExpressionAttributeNames",
            "stability": "stable",
            "summary": "One or more substitution tokens for attribute names in an expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/put-item.ts",
            "line": 43
          },
          "name": "expressionAttributeNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No expression attribute values",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html#DDB-PutItem-request-ExpressionAttributeValues",
            "stability": "stable",
            "summary": "One or more values that can be substituted in an expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/put-item.ts",
            "line": 52
          },
          "name": "expressionAttributeValues",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DynamoConsumedCapacity.NONE",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html#DDB-PutItem-request-ReturnConsumedCapacity",
            "stability": "stable",
            "summary": "Determines the level of detail about provisioned throughput consumption that is returned in the response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/put-item.ts",
            "line": 61
          },
          "name": "returnConsumedCapacity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoConsumedCapacity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DynamoItemCollectionMetrics.NONE",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/LSI.html#LSI.ItemCollections",
            "stability": "stable",
            "summary": "The item collection metrics to returned in the response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/put-item.ts",
            "line": 70
          },
          "name": "returnItemCollectionMetrics",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoItemCollectionMetrics"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DynamoReturnValues.NONE",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_PutItem.html#DDB-PutItem-request-ReturnValues",
            "stability": "stable",
            "summary": "Use ReturnValues if you want to get the item attributes as they appeared before they were updated with the PutItem request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/put-item.ts",
            "line": 80
          },
          "name": "returnValues",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoReturnValues"
          }
        }
      ],
      "symbolId": "lib/dynamodb/put-item:DynamoPutItemProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.DynamoReturnValues": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "Use ReturnValues if you want to get the item attributes as they appear before or after they are changed."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoReturnValues",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/dynamodb/shared-types.ts",
        "line": 43
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Nothing is returned."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns all of the attributes of the item."
          },
          "name": "ALL_OLD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns only the updated attributes."
          },
          "name": "UPDATED_OLD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns all of the attributes of the item."
          },
          "name": "ALL_NEW"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Returns only the updated attributes."
          },
          "name": "UPDATED_NEW"
        }
      ],
      "name": "DynamoReturnValues",
      "symbolId": "lib/dynamodb/shared-types:DynamoReturnValues"
    },
    "@aws-cdk/aws-stepfunctions-tasks.DynamoUpdateItem": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myTable: dynamodb.Table;\nnew tasks.DynamoUpdateItem(this, 'UpdateItem', {\n  key: {\n    MessageId: tasks.DynamoAttributeValue.fromString('message-007')\n  },\n  table: myTable,\n  expressionAttributeValues: {\n    ':val': tasks.DynamoAttributeValue.numberFromString(sfn.JsonPath.stringAt('$.Item.TotalCount.N')),\n    ':rand': tasks.DynamoAttributeValue.fromNumber(20),\n  },\n  updateExpression: 'SET TotalCount = :val + :rand',\n});",
        "stability": "stable",
        "summary": "A StepFunctions task to call DynamoUpdateItem."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoUpdateItem",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/dynamodb/update-item.ts",
          "line": 102
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoUpdateItemProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/dynamodb/update-item.ts",
        "line": 98
      },
      "name": "DynamoUpdateItem",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/update-item.ts",
            "line": 99
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/update-item.ts",
            "line": 100
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/dynamodb/update-item:DynamoUpdateItem"
    },
    "@aws-cdk/aws-stepfunctions-tasks.DynamoUpdateItemProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const myTable: dynamodb.Table;\nnew tasks.DynamoUpdateItem(this, 'UpdateItem', {\n  key: {\n    MessageId: tasks.DynamoAttributeValue.fromString('message-007')\n  },\n  table: myTable,\n  expressionAttributeValues: {\n    ':val': tasks.DynamoAttributeValue.numberFromString(sfn.JsonPath.stringAt('$.Item.TotalCount.N')),\n    ':rand': tasks.DynamoAttributeValue.fromNumber(20),\n  },\n  updateExpression: 'SET TotalCount = :val + :rand',\n});",
        "stability": "stable",
        "summary": "Properties for DynamoUpdateItem Task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoUpdateItemProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/dynamodb/update-item.ts",
        "line": 12
      },
      "name": "DynamoUpdateItemProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For the primary key, you must provide all of the attributes.\nFor example, with a simple primary key, you only need to provide a value for the partition key.\nFor a composite primary key, you must provide values for both the partition key and the sort key.",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_GetItem.html#DDB-GetItem-request-Key",
            "stability": "stable",
            "summary": "Primary key of the item to retrieve."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/update-item.ts",
            "line": 27
          },
          "name": "key",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the table containing the requested item."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/update-item.ts",
            "line": 16
          },
          "name": "table",
          "type": {
            "fqn": "@aws-cdk/aws-dynamodb.ITable"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No condition expression",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_UpdateItem.html#DDB-UpdateItem-request-ConditionExpression",
            "stability": "stable",
            "summary": "A condition that must be satisfied in order for a conditional DeleteItem to succeed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/update-item.ts",
            "line": 36
          },
          "name": "conditionExpression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No expression attribute names",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_UpdateItem.html#DDB-UpdateItem-request-ExpressionAttributeNames",
            "stability": "stable",
            "summary": "One or more substitution tokens for attribute names in an expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/update-item.ts",
            "line": 45
          },
          "name": "expressionAttributeNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No expression attribute values",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_UpdateItem.html#DDB-UpdateItem-request-ExpressionAttributeValues",
            "stability": "stable",
            "summary": "One or more values that can be substituted in an expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/update-item.ts",
            "line": 54
          },
          "name": "expressionAttributeValues",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoAttributeValue"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DynamoConsumedCapacity.NONE",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_UpdateItem.html#DDB-UpdateItem-request-ReturnConsumedCapacity",
            "stability": "stable",
            "summary": "Determines the level of detail about provisioned throughput consumption that is returned in the response."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/update-item.ts",
            "line": 63
          },
          "name": "returnConsumedCapacity",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoConsumedCapacity"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DynamoItemCollectionMetrics.NONE",
            "remarks": "If set to SIZE, the response includes statistics about item collections, if any,\nthat were modified during the operation are returned in the response.\nIf set to NONE (the default), no statistics are returned.",
            "stability": "stable",
            "summary": "Determines whether item collection metrics are returned."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/update-item.ts",
            "line": 73
          },
          "name": "returnItemCollectionMetrics",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoItemCollectionMetrics"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "DynamoReturnValues.NONE",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_UpdateItem.html#DDB-UpdateItem-request-ReturnValues",
            "stability": "stable",
            "summary": "Use ReturnValues if you want to get the item attributes as they appeared before they were deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/update-item.ts",
            "line": 82
          },
          "name": "returnValues",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.DynamoReturnValues"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No update expression",
            "see": "https://docs.aws.amazon.com/amazondynamodb/latest/APIReference/API_UpdateItem.html#DDB-UpdateItem-request-UpdateExpression",
            "stability": "stable",
            "summary": "An expression that defines one or more attributes to be updated, the action to be performed on them, and new values for them."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/dynamodb/update-item.ts",
            "line": 92
          },
          "name": "updateExpression",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/dynamodb/update-item:DynamoUpdateItemProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EcsEc2LaunchTarget": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const vpc = ec2.Vpc.fromLookup(this, 'Vpc', {\n  isDefault: true,\n});\n\nconst cluster = new ecs.Cluster(this, 'Ec2Cluster', { vpc });\ncluster.addCapacity('DefaultAutoScalingGroup', {\n  instanceType: new ec2.InstanceType('t2.micro'),\n  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC },\n});\n\nconst taskDefinition = new ecs.TaskDefinition(this, 'TD', {\n  compatibility: ecs.Compatibility.EC2,\n});\n\ntaskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromRegistry('foo/bar'),\n  memoryLimitMiB: 256,\n});\n\nconst runTask = new tasks.EcsRunTask(this, 'Run', {\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n  cluster,\n  taskDefinition,\n  launchTarget: new tasks.EcsEc2LaunchTarget({\n    placementStrategies: [\n      ecs.PlacementStrategy.spreadAcrossInstances(),\n      ecs.PlacementStrategy.packedByCpu(),\n      ecs.PlacementStrategy.randomly(),\n    ],\n    placementConstraints: [\n      ecs.PlacementConstraint.memberOf('blieptuut'),\n    ],\n  }),\n});",
        "see": "https://docs.aws.amazon.com/AmazonECS/latest/userguide/launch_types.html#launch-type-ec2",
        "stability": "stable",
        "summary": "Configuration for running an ECS task on EC2."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsEc2LaunchTarget",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/ecs/run-task.ts",
          "line": 171
        },
        "parameters": [
          {
            "name": "options",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsEc2LaunchTargetOptions"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-stepfunctions-tasks.IEcsLaunchTarget"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs/run-task.ts",
        "line": 170
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the EC2 launch type is configured on RunTask."
          },
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 175
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-stepfunctions-tasks.IEcsLaunchTarget",
          "parameters": [
            {
              "name": "_task",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsRunTask"
              }
            },
            {
              "name": "launchTargetOptions",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.LaunchTargetBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsLaunchTargetConfig"
            }
          }
        }
      ],
      "name": "EcsEc2LaunchTarget",
      "symbolId": "lib/ecs/run-task:EcsEc2LaunchTarget"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EcsEc2LaunchTargetOptions": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const vpc = ec2.Vpc.fromLookup(this, 'Vpc', {\n  isDefault: true,\n});\n\nconst cluster = new ecs.Cluster(this, 'Ec2Cluster', { vpc });\ncluster.addCapacity('DefaultAutoScalingGroup', {\n  instanceType: new ec2.InstanceType('t2.micro'),\n  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC },\n});\n\nconst taskDefinition = new ecs.TaskDefinition(this, 'TD', {\n  compatibility: ecs.Compatibility.EC2,\n});\n\ntaskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromRegistry('foo/bar'),\n  memoryLimitMiB: 256,\n});\n\nconst runTask = new tasks.EcsRunTask(this, 'Run', {\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n  cluster,\n  taskDefinition,\n  launchTarget: new tasks.EcsEc2LaunchTarget({\n    placementStrategies: [\n      ecs.PlacementStrategy.spreadAcrossInstances(),\n      ecs.PlacementStrategy.packedByCpu(),\n      ecs.PlacementStrategy.randomly(),\n    ],\n    placementConstraints: [\n      ecs.PlacementConstraint.memberOf('blieptuut'),\n    ],\n  }),\n});",
        "stability": "stable",
        "summary": "Options to run an ECS task on EC2 in StepFunctions and ECS."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsEc2LaunchTargetOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/run-task.ts",
        "line": 124
      },
      "name": "EcsEc2LaunchTargetOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "Placement constraints."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 130
          },
          "name": "placementConstraints",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.PlacementConstraint"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "Placement strategies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 137
          },
          "name": "placementStrategies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ecs/run-task:EcsEc2LaunchTargetOptions"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EcsFargateLaunchTarget": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const vpc = ec2.Vpc.fromLookup(this, 'Vpc', {\n  isDefault: true,\n});\n\nconst cluster = new ecs.Cluster(this, 'FargateCluster', { vpc });\n\nconst taskDefinition = new ecs.TaskDefinition(this, 'TD', {\n  memoryMiB: '512',\n  cpu: '256',\n  compatibility: ecs.Compatibility.FARGATE,\n});\n\nconst containerDefinition = taskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromRegistry('foo/bar'),\n  memoryLimitMiB: 256,\n});\n\nconst runTask = new tasks.EcsRunTask(this, 'RunFargate', {\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n  cluster,\n  taskDefinition,\n  assignPublicIp: true,\n  containerOverrides: [{\n    containerDefinition,\n    environment: [{ name: 'SOME_KEY', value: sfn.JsonPath.stringAt('$.SomeKey') }],\n  }],\n  launchTarget: new tasks.EcsFargateLaunchTarget(),\n});",
        "see": "https://docs.aws.amazon.com/AmazonECS/latest/userguide/launch_types.html#launch-type-fargate",
        "stability": "stable",
        "summary": "Configuration for running an ECS task on Fargate."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsFargateLaunchTarget",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/ecs/run-task.ts",
          "line": 146
        },
        "parameters": [
          {
            "name": "options",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsFargateLaunchTargetOptions"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-stepfunctions-tasks.IEcsLaunchTarget"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs/run-task.ts",
        "line": 145
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Called when the Fargate launch type configured on RunTask."
          },
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 151
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-stepfunctions-tasks.IEcsLaunchTarget",
          "parameters": [
            {
              "name": "_task",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsRunTask"
              }
            },
            {
              "name": "launchTargetOptions",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.LaunchTargetBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsLaunchTargetConfig"
            }
          }
        }
      ],
      "name": "EcsFargateLaunchTarget",
      "symbolId": "lib/ecs/run-task:EcsFargateLaunchTarget"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EcsFargateLaunchTargetOptions": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Properties to define an ECS service.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst ecsFargateLaunchTargetOptions: stepfunctions_tasks.EcsFargateLaunchTargetOptions = {\n  platformVersion: ecs.FargatePlatformVersion.LATEST,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsFargateLaunchTargetOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/run-task.ts",
        "line": 111
      },
      "name": "EcsFargateLaunchTargetOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Fargate platform version is a combination of the kernel and container runtime versions.",
            "see": "https://docs.aws.amazon.com/AmazonECS/latest/developerguide/platform_versions.html",
            "stability": "stable",
            "summary": "Refers to a specific runtime environment for Fargate task infrastructure."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 118
          },
          "name": "platformVersion",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.FargatePlatformVersion"
          }
        }
      ],
      "symbolId": "lib/ecs/run-task:EcsFargateLaunchTargetOptions"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EcsLaunchTargetConfig": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration options for the ECS launch type.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const parameters: any;\nconst ecsLaunchTargetConfig: stepfunctions_tasks.EcsLaunchTargetConfig = {\n  parameters: {\n    parametersKey: parameters,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsLaunchTargetConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/run-task.ts",
        "line": 99
      },
      "name": "EcsLaunchTargetConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No additional parameters passed",
            "stability": "stable",
            "summary": "Additional parameters to pass to the base task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 105
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/ecs/run-task:EcsLaunchTargetConfig"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EcsRunTask": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const vpc = ec2.Vpc.fromLookup(this, 'Vpc', {\n  isDefault: true,\n});\n\nconst cluster = new ecs.Cluster(this, 'Ec2Cluster', { vpc });\ncluster.addCapacity('DefaultAutoScalingGroup', {\n  instanceType: new ec2.InstanceType('t2.micro'),\n  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC },\n});\n\nconst taskDefinition = new ecs.TaskDefinition(this, 'TD', {\n  compatibility: ecs.Compatibility.EC2,\n});\n\ntaskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromRegistry('foo/bar'),\n  memoryLimitMiB: 256,\n});\n\nconst runTask = new tasks.EcsRunTask(this, 'Run', {\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n  cluster,\n  taskDefinition,\n  launchTarget: new tasks.EcsEc2LaunchTarget({\n    placementStrategies: [\n      ecs.PlacementStrategy.spreadAcrossInstances(),\n      ecs.PlacementStrategy.packedByCpu(),\n      ecs.PlacementStrategy.randomly(),\n    ],\n    placementConstraints: [\n      ecs.PlacementConstraint.memberOf('blieptuut'),\n    ],\n  }),\n});",
        "stability": "stable",
        "summary": "Run a Task on ECS or Fargate."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsRunTask",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/ecs/run-task.ts",
          "line": 239
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsRunTaskProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs/run-task.ts",
        "line": 220
      },
      "name": "EcsRunTask",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Manage allowed network traffic for this service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 230
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 232
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 233
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/ecs/run-task:EcsRunTask"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EcsRunTaskBase": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "deprecated": "No replacement",
        "stability": "deprecated",
        "summary": "A StepFunctions Task to run a Task on ECS or Fargate.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const cluster: ecs.Cluster;\ndeclare const containerDefinition: ecs.ContainerDefinition;\ndeclare const parameters: any;\ndeclare const taskDefinition: ecs.TaskDefinition;\nconst ecsRunTaskBase = new stepfunctions_tasks.EcsRunTaskBase({\n  cluster: cluster,\n  taskDefinition: taskDefinition,\n\n  // the properties below are optional\n  containerOverrides: [{\n    containerDefinition: containerDefinition,\n\n    // the properties below are optional\n    command: ['command'],\n    cpu: 123,\n    environment: [{\n      name: 'name',\n      value: 'value',\n    }],\n    memoryLimit: 123,\n    memoryReservation: 123,\n  }],\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  parameters: {\n    parametersKey: parameters,\n  },\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsRunTaskBase",
      "initializer": {
        "docs": {
          "stability": "deprecated"
        },
        "locationInModule": {
          "filename": "lib/ecs/run-ecs-task-base.ts",
          "line": 73
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsRunTaskBaseProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-ec2.IConnectable",
        "@aws-cdk/aws-stepfunctions.IStepFunctionsTask"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs/run-ecs-task-base.ts",
        "line": 63
      },
      "methods": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Called when the task object is used in a workflow."
          },
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-task-base.ts",
            "line": 102
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-stepfunctions.IStepFunctionsTask",
          "parameters": [
            {
              "name": "task",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions.Task"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions.StepFunctionsTaskConfig"
            }
          }
        },
        {
          "docs": {
            "stability": "deprecated"
          },
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-task-base.ts",
            "line": 124
          },
          "name": "configureAwsVpcNetworking",
          "parameters": [
            {
              "name": "vpc",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.IVpc"
              }
            },
            {
              "name": "assignPublicIp",
              "optional": true,
              "type": {
                "primitive": "boolean"
              }
            },
            {
              "name": "subnetSelection",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
              }
            },
            {
              "name": "securityGroup",
              "optional": true,
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              }
            }
          ],
          "protected": true
        }
      ],
      "name": "EcsRunTaskBase",
      "properties": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Manage allowed network traffic for this service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-task-base.ts",
            "line": 67
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        }
      ],
      "symbolId": "lib/ecs/run-ecs-task-base:EcsRunTaskBase"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EcsRunTaskBaseProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "deprecated": "No replacement",
        "stability": "deprecated",
        "summary": "Construction properties for the BaseRunTaskProps.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const cluster: ecs.Cluster;\ndeclare const containerDefinition: ecs.ContainerDefinition;\ndeclare const parameters: any;\ndeclare const taskDefinition: ecs.TaskDefinition;\nconst ecsRunTaskBaseProps: stepfunctions_tasks.EcsRunTaskBaseProps = {\n  cluster: cluster,\n  taskDefinition: taskDefinition,\n\n  // the properties below are optional\n  containerOverrides: [{\n    containerDefinition: containerDefinition,\n\n    // the properties below are optional\n    command: ['command'],\n    cpu: 123,\n    environment: [{\n      name: 'name',\n      value: 'value',\n    }],\n    memoryLimit: 123,\n    memoryReservation: 123,\n  }],\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  parameters: {\n    parametersKey: parameters,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsRunTaskBaseProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions-tasks.CommonEcsRunTaskProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/run-ecs-task-base.ts",
        "line": 50
      },
      "name": "EcsRunTaskBaseProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No additional parameters passed",
            "stability": "deprecated",
            "summary": "Additional parameters to pass to the base task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-task-base.ts",
            "line": 56
          },
          "name": "parameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/ecs/run-ecs-task-base:EcsRunTaskBaseProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EcsRunTaskProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const vpc = ec2.Vpc.fromLookup(this, 'Vpc', {\n  isDefault: true,\n});\n\nconst cluster = new ecs.Cluster(this, 'Ec2Cluster', { vpc });\ncluster.addCapacity('DefaultAutoScalingGroup', {\n  instanceType: new ec2.InstanceType('t2.micro'),\n  vpcSubnets: { subnetType: ec2.SubnetType.PUBLIC },\n});\n\nconst taskDefinition = new ecs.TaskDefinition(this, 'TD', {\n  compatibility: ecs.Compatibility.EC2,\n});\n\ntaskDefinition.addContainer('TheContainer', {\n  image: ecs.ContainerImage.fromRegistry('foo/bar'),\n  memoryLimitMiB: 256,\n});\n\nconst runTask = new tasks.EcsRunTask(this, 'Run', {\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n  cluster,\n  taskDefinition,\n  launchTarget: new tasks.EcsEc2LaunchTarget({\n    placementStrategies: [\n      ecs.PlacementStrategy.spreadAcrossInstances(),\n      ecs.PlacementStrategy.packedByCpu(),\n      ecs.PlacementStrategy.randomly(),\n    ],\n    placementConstraints: [\n      ecs.PlacementConstraint.memberOf('blieptuut'),\n    ],\n  }),\n});",
        "stability": "stable",
        "summary": "Properties for ECS Tasks."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsRunTaskProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/run-task.ts",
        "line": 13
      },
      "name": "EcsRunTaskProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ECS cluster to run the task on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 17
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ICluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html",
            "stability": "stable",
            "summary": "An Amazon ECS launch type determines the type of infrastructure on which your tasks and services are hosted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 64
          },
          "name": "launchTarget",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.IEcsLaunchTarget"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Note: this must be TaskDefinition, and not ITaskDefinition,\nas it requires properties that are not known for imported task definitions",
            "stability": "stable",
            "summary": "[disable-awslint:ref-via-interface] Task Definition used for running tasks in the service."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 26
          },
          "name": "taskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.TaskDefinition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Assign public IP addresses to each task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 56
          },
          "name": "assignPublicIp",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No overrides",
            "remarks": "Specify the container to use and the overrides to apply.",
            "stability": "stable",
            "summary": "Container setting overrides."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 35
          },
          "name": "containerOverrides",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.ContainerOverride"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A new security group is created",
            "stability": "stable",
            "summary": "Existing security groups to use for the tasks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 49
          },
          "name": "securityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Public subnets if assignPublicIp is set. Private subnets otherwise.",
            "stability": "stable",
            "summary": "Subnets to place the task's ENIs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 42
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/ecs/run-task:EcsRunTaskProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EksCall": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as eks from '@aws-cdk/aws-eks';\n\nconst myEksCluster = new eks.Cluster(this, 'my sample cluster', {\n  version: eks.KubernetesVersion.V1_18,\n  clusterName: 'myEksCluster',\n});\n\nnew tasks.EksCall(this, 'Call a EKS Endpoint', {\n  cluster: myEksCluster,\n  httpMethod: tasks.HttpMethods.GET,\n  httpPath: '/api/v1/namespaces/default/pods',\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-eks.html",
        "stability": "stable",
        "summary": "Call a EKS endpoint as a Task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EksCall",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/eks/call.ts",
          "line": 63
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EksCallProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/eks/call.ts",
        "line": 46
      },
      "name": "EksCall",
      "properties": [
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-eks.html#connect-eks-permissions",
            "stability": "stable",
            "summary": "No policies are required due to eks:call is an Http service integration and does not call and EKS API directly."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks/call.ts",
            "line": 55
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks/call.ts",
            "line": 56
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/eks/call:EksCall"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EksCallProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as eks from '@aws-cdk/aws-eks';\n\nconst myEksCluster = new eks.Cluster(this, 'my sample cluster', {\n  version: eks.KubernetesVersion.V1_18,\n  clusterName: 'myEksCluster',\n});\n\nnew tasks.EksCall(this, 'Call a EKS Endpoint', {\n  cluster: myEksCluster,\n  httpMethod: tasks.HttpMethods.GET,\n  httpPath: '/api/v1/namespaces/default/pods',\n});",
        "stability": "stable",
        "summary": "Properties for calling a EKS endpoint with EksCall."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EksCallProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eks/call.ts",
        "line": 10
      },
      "name": "EksCallProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The EKS cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks/call.ts",
            "line": 15
          },
          "name": "cluster",
          "type": {
            "fqn": "@aws-cdk/aws-eks.ICluster"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "HTTP method (\"GET\", \"POST\", \"PUT\", ...) part of HTTP request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks/call.ts",
            "line": 20
          },
          "name": "httpMethod",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.HttpMethods"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "HTTP path of the Kubernetes REST API operation For example: /api/v1/namespaces/default/pods."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks/call.ts",
            "line": 26
          },
          "name": "httpPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- no query parameters",
            "stability": "stable",
            "summary": "Query Parameters part of HTTP request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks/call.ts",
            "line": 32
          },
          "name": "queryParameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "collection": {
                  "elementtype": {
                    "primitive": "string"
                  },
                  "kind": "array"
                }
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No request body",
            "stability": "stable",
            "summary": "Request body part of HTTP request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eks/call.ts",
            "line": 38
          },
          "name": "requestBody",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        }
      ],
      "symbolId": "lib/eks/call:EksCallProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EksClusterInput": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrContainersCreateVirtualCluster(this, 'Create a Virtual Cluster', {\n  eksCluster: tasks.EksClusterInput.fromTaskInput(sfn.TaskInput.fromText('clusterId')),\n  eksNamespace: 'specified-namespace',\n});",
        "stability": "stable",
        "summary": "Class that supports methods which return the EKS cluster name depending on input type."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EksClusterInput",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emrcontainers/create-virtual-cluster.ts",
        "line": 22
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Specify an existing EKS Cluster as the name for this Cluster."
          },
          "locationInModule": {
            "filename": "lib/emrcontainers/create-virtual-cluster.ts",
            "line": 27
          },
          "name": "fromCluster",
          "parameters": [
            {
              "name": "cluster",
              "type": {
                "fqn": "@aws-cdk/aws-eks.ICluster"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EksClusterInput"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Specify a Task Input as the name for this Cluster."
          },
          "locationInModule": {
            "filename": "lib/emrcontainers/create-virtual-cluster.ts",
            "line": 34
          },
          "name": "fromTaskInput",
          "parameters": [
            {
              "name": "taskInput",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EksClusterInput"
            }
          },
          "static": true
        }
      ],
      "name": "EksClusterInput",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The name of the EKS Cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/create-virtual-cluster.ts",
            "line": 43
          },
          "name": "clusterName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emrcontainers/create-virtual-cluster:EksClusterInput"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrAddStep": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrAddStep(this, 'Task', {\n  clusterId: 'ClusterId',\n  name: 'StepName',\n  jar: 'Jar',\n  actionOnFailure: tasks.ActionOnFailure.CONTINUE,\n});",
        "remarks": "The StepConfiguration is defined as Parameters in the state machine definition.\n\nOUTPUT: the StepId",
        "stability": "stable",
        "summary": "A Step Functions Task to add a Step to an EMR Cluster."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrAddStep",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/emr/emr-add-step.ts",
          "line": 114
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrAddStepProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emr/emr-add-step.ts",
        "line": 102
      },
      "name": "EmrAddStep",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-add-step.ts",
            "line": 109
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-add-step.ts",
            "line": 108
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/emr/emr-add-step:EmrAddStep"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrAddStepProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrAddStep(this, 'Task', {\n  clusterId: 'ClusterId',\n  name: 'StepName',\n  jar: 'Jar',\n  actionOnFailure: tasks.ActionOnFailure.CONTINUE,\n});",
        "stability": "stable",
        "summary": "Properties for EmrAddStep."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrAddStepProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-add-step.ts",
        "line": 37
      },
      "name": "EmrAddStepProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ClusterId to add the Step to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-add-step.ts",
            "line": 41
          },
          "name": "clusterId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_HadoopJarStepConfig.html",
            "stability": "stable",
            "summary": "A path to a JAR file run during the step."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-add-step.ts",
            "line": 64
          },
          "name": "jar",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_StepConfig.html",
            "stability": "stable",
            "summary": "The name of the Step."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-add-step.ts",
            "line": 48
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ActionOnFailure.CONTINUE",
            "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_StepConfig.html",
            "stability": "stable",
            "summary": "The action to take when the cluster step fails."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-add-step.ts",
            "line": 57
          },
          "name": "actionOnFailure",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.ActionOnFailure"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No args",
            "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_HadoopJarStepConfig.html",
            "stability": "stable",
            "summary": "A list of command line arguments passed to the JAR file's main function when executed."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-add-step.ts",
            "line": 82
          },
          "name": "args",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No mainClass",
            "remarks": "If not specified, the JAR file should specify a Main-Class in its manifest file.",
            "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_HadoopJarStepConfig.html",
            "stability": "stable",
            "summary": "The name of the main class in the specified Java file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-add-step.ts",
            "line": 73
          },
          "name": "mainClass",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No properties",
            "remarks": "You can use these properties to pass key value pairs to your main function.",
            "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_HadoopJarStepConfig.html",
            "stability": "stable",
            "summary": "A list of Java properties that are set when the step runs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-add-step.ts",
            "line": 91
          },
          "name": "properties",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/emr/emr-add-step:EmrAddStepProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCancelStep": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrCancelStep(this, 'Task', {\n  clusterId: 'ClusterId',\n  stepId: 'StepId',\n});",
        "stability": "stable",
        "summary": "A Step Functions Task to to cancel a Step on an EMR Cluster."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCancelStep",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/emr/emr-cancel-step.ts",
          "line": 32
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCancelStepProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emr/emr-cancel-step.ts",
        "line": 27
      },
      "name": "EmrCancelStep",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-cancel-step.ts",
            "line": 30
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-cancel-step.ts",
            "line": 29
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/emr/emr-cancel-step:EmrCancelStep"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCancelStepProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrCancelStep(this, 'Task', {\n  clusterId: 'ClusterId',\n  stepId: 'StepId',\n});",
        "stability": "stable",
        "summary": "Properties for EmrCancelStep."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCancelStepProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-cancel-step.ts",
        "line": 11
      },
      "name": "EmrCancelStepProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ClusterId to update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-cancel-step.ts",
            "line": 15
          },
          "name": "clusterId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The StepId to cancel."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-cancel-step.ts",
            "line": 20
          },
          "name": "stepId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr/emr-cancel-step:EmrCancelStepProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrContainersCreateVirtualCluster": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrContainersCreateVirtualCluster(this, 'Create a Virtual Cluster', {\n  eksCluster: tasks.EksClusterInput.fromTaskInput(sfn.TaskInput.fromText('clusterId')),\n  eksNamespace: 'specified-namespace',\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-emr-eks.html",
        "stability": "stable",
        "summary": "Task that creates an EMR Containers virtual cluster from an EKS cluster."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrContainersCreateVirtualCluster",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/emrcontainers/create-virtual-cluster.ts",
          "line": 94
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrContainersCreateVirtualClusterProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emrcontainers/create-virtual-cluster.ts",
        "line": 83
      },
      "name": "EmrContainersCreateVirtualCluster",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/create-virtual-cluster.ts",
            "line": 89
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/create-virtual-cluster.ts",
            "line": 90
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/emrcontainers/create-virtual-cluster:EmrContainersCreateVirtualCluster"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrContainersCreateVirtualClusterProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrContainersCreateVirtualCluster(this, 'Create a Virtual Cluster', {\n  eksCluster: tasks.EksClusterInput.fromTaskInput(sfn.TaskInput.fromText('clusterId')),\n  eksNamespace: 'specified-namespace',\n});",
        "stability": "stable",
        "summary": "Properties to define a EMR Containers CreateVirtualCluster Task on an EKS cluster."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrContainersCreateVirtualClusterProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emrcontainers/create-virtual-cluster.ts",
        "line": 49
      },
      "name": "EmrContainersCreateVirtualClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "EKS Cluster or task input that contains the name of the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/create-virtual-cluster.ts",
            "line": 54
          },
          "name": "eksCluster",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EksClusterInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 'default'",
            "stability": "stable",
            "summary": "The namespace of an EKS cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/create-virtual-cluster.ts",
            "line": 61
          },
          "name": "eksNamespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "stability": "stable",
            "summary": "The tags assigned to the virtual cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/create-virtual-cluster.ts",
            "line": 75
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- the name of the state machine execution that runs this task and state name",
            "stability": "stable",
            "summary": "Name of the virtual cluster that will be created."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/create-virtual-cluster.ts",
            "line": 68
          },
          "name": "virtualClusterName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emrcontainers/create-virtual-cluster:EmrContainersCreateVirtualClusterProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrContainersDeleteVirtualCluster": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrContainersDeleteVirtualCluster(this, 'Delete a Virtual Cluster', {\n  virtualClusterId: sfn.TaskInput.fromJsonPathAt('$.virtualCluster'),\n});",
        "see": "https://docs.amazonaws.cn/en_us/step-functions/latest/dg/connect-emr-eks.html",
        "stability": "stable",
        "summary": "Deletes an EMR Containers virtual cluster as a Task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrContainersDeleteVirtualCluster",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/emrcontainers/delete-virtual-cluster.ts",
          "line": 35
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrContainersDeleteVirtualClusterProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emrcontainers/delete-virtual-cluster.ts",
        "line": 23
      },
      "name": "EmrContainersDeleteVirtualCluster",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/delete-virtual-cluster.ts",
            "line": 30
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/delete-virtual-cluster.ts",
            "line": 31
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/emrcontainers/delete-virtual-cluster:EmrContainersDeleteVirtualCluster"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrContainersDeleteVirtualClusterProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrContainersDeleteVirtualCluster(this, 'Delete a Virtual Cluster', {\n  virtualClusterId: sfn.TaskInput.fromJsonPathAt('$.virtualCluster'),\n});",
        "stability": "stable",
        "summary": "Properties to define a EMR Containers DeleteVirtualCluster Task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrContainersDeleteVirtualClusterProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emrcontainers/delete-virtual-cluster.ts",
        "line": 10
      },
      "name": "EmrContainersDeleteVirtualClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ID of the virtual cluster that will be deleted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/delete-virtual-cluster.ts",
            "line": 15
          },
          "name": "virtualClusterId",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        }
      ],
      "symbolId": "lib/emrcontainers/delete-virtual-cluster:EmrContainersDeleteVirtualClusterProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrContainersStartJobRun": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrContainersStartJobRun(this, 'EMR Containers Start Job Run', {\n  virtualCluster: tasks.VirtualClusterInput.fromVirtualClusterId('de92jdei2910fwedz'),\n  releaseLabel: tasks.ReleaseLabel.EMR_6_2_0,\n  jobName: 'EMR-Containers-Job',\n  jobDriver: {\n    sparkSubmitJobDriver: {\n      entryPoint: sfn.TaskInput.fromText('local:///usr/lib/spark/examples/src/main/python/pi.py'),\n    },\n  },\n  applicationConfig: [{\n    classification: tasks.Classification.SPARK_DEFAULTS,\n    properties: {\n      'spark.executor.instances': '1',\n      'spark.executor.memory': '512M',\n    },\n  }],\n});",
        "remarks": "A job is a unit of work that you submit to Amazon EMR on EKS for execution.\nThe work performed by the job can be defined by a Spark jar, PySpark script, or SparkSQL query.\nA job run is an execution of the job on the virtual cluster.",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-emr-eks.html",
        "stability": "stable",
        "summary": "Starts a job run."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrContainersStartJobRun",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/emrcontainers/start-job-run.ts",
          "line": 105
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrContainersStartJobRunProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iam.IGrantable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emrcontainers/start-job-run.ts",
        "line": 90
      },
      "name": "EmrContainersStartJobRun",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 99
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 96
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 97
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/emrcontainers/start-job-run:EmrContainersStartJobRun"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrContainersStartJobRunProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrContainersStartJobRun(this, 'EMR Containers Start Job Run', {\n  virtualCluster: tasks.VirtualClusterInput.fromVirtualClusterId('de92jdei2910fwedz'),\n  releaseLabel: tasks.ReleaseLabel.EMR_6_2_0,\n  jobName: 'EMR-Containers-Job',\n  jobDriver: {\n    sparkSubmitJobDriver: {\n      entryPoint: sfn.TaskInput.fromText('local:///usr/lib/spark/examples/src/main/python/pi.py'),\n    },\n  },\n  applicationConfig: [{\n    classification: tasks.Classification.SPARK_DEFAULTS,\n    properties: {\n      'spark.executor.instances': '1',\n      'spark.executor.memory': '512M',\n    },\n  }],\n});",
        "stability": "stable",
        "summary": "The props for a EMR Containers StartJobRun Task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrContainersStartJobRunProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emrcontainers/start-job-run.ts",
        "line": 17
      },
      "name": "EmrContainersStartJobRunProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/emr-on-eks/latest/APIReference/API_JobDriver.html",
            "stability": "stable",
            "summary": "The job driver for the job run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 62
          },
          "name": "jobDriver",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.JobDriver"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Amazon EMR release version to use for the job run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 44
          },
          "name": "releaseLabel",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.ReleaseLabel"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ID of the virtual cluster where the job will be run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 21
          },
          "name": "virtualCluster",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.VirtualClusterInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No application config",
            "remarks": "Maximum of 100 items",
            "see": "https://docs.aws.amazon.com/emr-on-eks/latest/APIReference/API_Configuration.html",
            "stability": "stable",
            "summary": "The configurations for the application running in the job run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 55
          },
          "name": "applicationConfig",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.ApplicationConfiguration"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Automatically generated only when the provided `virtualClusterId` is not an encoded JSON path",
            "remarks": "If `virtualClusterId` is from a JSON input path, an execution role must be provided.\nIf an execution role is provided, follow the documentation to update the role trust policy.",
            "see": "https://docs.aws.amazon.com/emr/latest/EMR-on-EKS-DevelopmentGuide/setting-up-trust-policy.html",
            "stability": "stable",
            "summary": "The execution role for the job run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 39
          },
          "name": "executionRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No job run name",
            "stability": "stable",
            "summary": "The name of the job run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 28
          },
          "name": "jobName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- logging enabled and resources automatically generated if `monitoring.logging` is set to `true`",
            "see": "https://docs.aws.amazon.com/emr-on-eks/latest/APIReference/API_MonitoringConfiguration.html",
            "stability": "stable",
            "summary": "Configuration for monitoring the job run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 71
          },
          "name": "monitoring",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.Monitoring"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The tags assigned to job runs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 78
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/emrcontainers/start-job-run:EmrContainersStartJobRunProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const clusterRole = new iam.Role(this, 'ClusterRole', {\n  assumedBy: new iam.ServicePrincipal('ec2.amazonaws.com'),\n});\n\nconst serviceRole = new iam.Role(this, 'ServiceRole', {\n  assumedBy: new iam.ServicePrincipal('elasticmapreduce.amazonaws.com'),\n});\n\nconst autoScalingRole = new iam.Role(this, 'AutoScalingRole', {\n  assumedBy: new iam.ServicePrincipal('elasticmapreduce.amazonaws.com'),\n});\n\nautoScalingRole.assumeRolePolicy?.addStatements(\n  new iam.PolicyStatement({\n    effect: iam.Effect.ALLOW,\n    principals: [\n      new iam.ServicePrincipal('application-autoscaling.amazonaws.com'),\n    ],\n    actions: [\n      'sts:AssumeRole',\n    ],\n  }));\n)\n\nnew tasks.EmrCreateCluster(this, 'Create Cluster', {\n  instances: {},\n  clusterRole,\n  name: sfn.TaskInput.fromJsonPathAt('$.ClusterName').value,\n  serviceRole,\n  autoScalingRole,\n});",
        "remarks": "The ClusterConfiguration is defined as Parameters in the state machine definition.\n\nOUTPUT: the ClusterId.",
        "stability": "stable",
        "summary": "A Step Functions Task to create an EMR Cluster."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/emr/emr-create-cluster.ts",
          "line": 182
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateClusterProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 166
      },
      "name": "EmrCreateCluster",
      "properties": [
        {
          "docs": {
            "remarks": "Only available after task has been added to a state machine.",
            "stability": "stable",
            "summary": "The autoscaling role for the EMR Cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 251
          },
          "name": "autoScalingRole",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "remarks": "Only available after task has been added to a state machine.",
            "stability": "stable",
            "summary": "The instance role for the EMR Cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 239
          },
          "name": "clusterRole",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "remarks": "Only available after task has been added to a state machine.",
            "stability": "stable",
            "summary": "The service role for the EMR Cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 227
          },
          "name": "serviceRole",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 173
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 172
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ApplicationConfigProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "remarks": "Applies to Amazon EMR releases 4.0 and later. A case-insensitive list of applications for Amazon EMR to install and configure when launching\nthe cluster.\n\nSee the RunJobFlow API for complete documentation on input parameters",
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_Application.html",
        "stability": "stable",
        "summary": "Properties for the EMR Cluster Applications.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst applicationConfigProperty: stepfunctions_tasks.EmrCreateCluster.ApplicationConfigProperty = {\n  name: 'name',\n\n  // the properties below are optional\n  additionalInfo: {\n    additionalInfoKey: 'additionalInfo',\n  },\n  args: ['args'],\n  version: 'version',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ApplicationConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 1363
      },
      "name": "ApplicationConfigProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1382
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No additionalInfo",
            "remarks": "This is meta information about third-party applications that third-party vendors use\nfor testing purposes.",
            "stability": "stable",
            "summary": "This option is for advanced users only."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1370
          },
          "name": "additionalInfo",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No args",
            "stability": "stable",
            "summary": "Arguments for Amazon EMR to pass to the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1377
          },
          "name": "args",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No version",
            "stability": "stable",
            "summary": "The version of the application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1389
          },
          "name": "version",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.ApplicationConfigProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.AutoScalingPolicyProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_AutoScalingPolicy.html",
        "stability": "stable",
        "summary": "An automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\nconst autoScalingPolicyProperty: stepfunctions_tasks.EmrCreateCluster.AutoScalingPolicyProperty = {\n  constraints: {\n    maxCapacity: 123,\n    minCapacity: 123,\n  },\n  rules: [{\n    action: {\n      simpleScalingPolicyConfiguration: {\n        scalingAdjustment: 123,\n\n        // the properties below are optional\n        adjustmentType: stepfunctions_tasks.EmrCreateCluster.ScalingAdjustmentType.CHANGE_IN_CAPACITY,\n        coolDown: 123,\n      },\n\n      // the properties below are optional\n      market: stepfunctions_tasks.EmrCreateCluster.InstanceMarket.ON_DEMAND,\n    },\n    name: 'name',\n    trigger: {\n      cloudWatchAlarmDefinition: {\n        comparisonOperator: stepfunctions_tasks.EmrCreateCluster.CloudWatchAlarmComparisonOperator.GREATER_THAN_OR_EQUAL,\n        metricName: 'metricName',\n        period: cdk.Duration.minutes(30),\n\n        // the properties below are optional\n        dimensions: [{\n          key: 'key',\n          value: 'value',\n        }],\n        evaluationPeriods: 123,\n        namespace: 'namespace',\n        statistic: stepfunctions_tasks.EmrCreateCluster.CloudWatchAlarmStatistic.SAMPLE_COUNT,\n        threshold: 123,\n        unit: stepfunctions_tasks.EmrCreateCluster.CloudWatchAlarmUnit.NONE,\n      },\n    },\n\n    // the properties below are optional\n    description: 'description',\n  }],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.AutoScalingPolicyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 1124
      },
      "name": "AutoScalingPolicyProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Automatic scaling activity will not cause an instance\ngroup to grow above or below these limits.",
            "stability": "stable",
            "summary": "The upper and lower EC2 instance limits for an automatic scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1129
          },
          "name": "constraints",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScalingConstraintsProperty"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The scale-in and scale-out rules that comprise the automatic scaling policy."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1134
          },
          "name": "rules",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScalingRuleProperty"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.AutoScalingPolicyProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.BootstrapActionConfigProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "remarks": "See the RunJobFlow API for complete documentation on input parameters",
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_BootstrapActionConfig.html",
        "stability": "stable",
        "summary": "Configuration of a bootstrap action.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst bootstrapActionConfigProperty: stepfunctions_tasks.EmrCreateCluster.BootstrapActionConfigProperty = {\n  name: 'name',\n  scriptBootstrapAction: {\n    path: 'path',\n\n    // the properties below are optional\n    args: ['args'],\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.BootstrapActionConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 1420
      },
      "name": "BootstrapActionConfigProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the bootstrap action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1424
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The script run by the bootstrap action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1429
          },
          "name": "scriptBootstrapAction",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScriptBootstrapActionConfigProperty"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.BootstrapActionConfigProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.CloudWatchAlarmComparisonOperator": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "CloudWatch Alarm Comparison Operators."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.CloudWatchAlarmComparisonOperator",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 714
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "GREATER_THAN_OR_EQUAL."
          },
          "name": "GREATER_THAN_OR_EQUAL"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "GREATER_THAN."
          },
          "name": "GREATER_THAN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "LESS_THAN."
          },
          "name": "LESS_THAN"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "LESS_THAN_OR_EQUAL."
          },
          "name": "LESS_THAN_OR_EQUAL"
        }
      ],
      "name": "CloudWatchAlarmComparisonOperator",
      "namespace": "EmrCreateCluster",
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.CloudWatchAlarmComparisonOperator"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.CloudWatchAlarmDefinitionProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "remarks": "When the defined alarm conditions\nare satisfied, scaling activity begins.",
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_CloudWatchAlarmDefinition.html",
        "stability": "stable",
        "summary": "The definition of a CloudWatch metric alarm, which determines when an automatic scaling activity is triggered.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\nconst cloudWatchAlarmDefinitionProperty: stepfunctions_tasks.EmrCreateCluster.CloudWatchAlarmDefinitionProperty = {\n  comparisonOperator: stepfunctions_tasks.EmrCreateCluster.CloudWatchAlarmComparisonOperator.GREATER_THAN_OR_EQUAL,\n  metricName: 'metricName',\n  period: cdk.Duration.minutes(30),\n\n  // the properties below are optional\n  dimensions: [{\n    key: 'key',\n    value: 'value',\n  }],\n  evaluationPeriods: 123,\n  namespace: 'namespace',\n  statistic: stepfunctions_tasks.EmrCreateCluster.CloudWatchAlarmStatistic.SAMPLE_COUNT,\n  threshold: 123,\n  unit: stepfunctions_tasks.EmrCreateCluster.CloudWatchAlarmUnit.NONE,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.CloudWatchAlarmDefinitionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 902
      },
      "name": "CloudWatchAlarmDefinitionProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Determines how the metric specified by MetricName is compared to the value specified by Threshold."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 906
          },
          "name": "comparisonOperator",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.CloudWatchAlarmComparisonOperator"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the CloudWatch metric that is watched to determine an alarm condition."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 926
          },
          "name": "metricName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "EMR CloudWatch metrics are emitted every five minutes (300 seconds), so if\nan EMR CloudWatch metric is specified, specify 300.",
            "stability": "stable",
            "summary": "The period, in seconds, over which the statistic is applied."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 939
          },
          "name": "period",
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No dimensions",
            "stability": "stable",
            "summary": "A CloudWatch metric dimension."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 913
          },
          "name": "dimensions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.MetricDimensionProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1",
            "stability": "stable",
            "summary": "The number of periods, in five-minute increments, during which the alarm condition must exist before the alarm triggers automatic scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 921
          },
          "name": "evaluationPeriods",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'AWS/ElasticMapReduce'",
            "stability": "stable",
            "summary": "The namespace for the CloudWatch metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 933
          },
          "name": "namespace",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CloudWatchAlarmStatistic.AVERAGE",
            "stability": "stable",
            "summary": "The statistic to apply to the metric associated with the alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 946
          },
          "name": "statistic",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.CloudWatchAlarmStatistic"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The value against which the specified statistic is compared."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 953
          },
          "name": "threshold",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "CloudWatchAlarmUnit.NONE",
            "remarks": "The value specified for Unit must correspond to the units\nspecified in the CloudWatch metric.",
            "stability": "stable",
            "summary": "The unit of measure associated with the CloudWatch metric being watched."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 961
          },
          "name": "unit",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.CloudWatchAlarmUnit"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.CloudWatchAlarmDefinitionProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.CloudWatchAlarmStatistic": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "CloudWatch Alarm Statistics."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.CloudWatchAlarmStatistic",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 737
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "SAMPLE_COUNT."
          },
          "name": "SAMPLE_COUNT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "AVERAGE."
          },
          "name": "AVERAGE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "SUM."
          },
          "name": "SUM"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "MINIMUM."
          },
          "name": "MINIMUM"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "MAXIMUM."
          },
          "name": "MAXIMUM"
        }
      ],
      "name": "CloudWatchAlarmStatistic",
      "namespace": "EmrCreateCluster",
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.CloudWatchAlarmStatistic"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.CloudWatchAlarmUnit": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "CloudWatch Alarm Units."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.CloudWatchAlarmUnit",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 764
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "NONE."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "SECONDS."
          },
          "name": "SECONDS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "MICRO_SECONDS."
          },
          "name": "MICRO_SECONDS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "MILLI_SECONDS."
          },
          "name": "MILLI_SECONDS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "BYTES."
          },
          "name": "BYTES"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "KILO_BYTES."
          },
          "name": "KILO_BYTES"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "MEGA_BYTES."
          },
          "name": "MEGA_BYTES"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "GIGA_BYTES."
          },
          "name": "GIGA_BYTES"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "TERA_BYTES."
          },
          "name": "TERA_BYTES"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "BITS."
          },
          "name": "BITS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "KILO_BITS."
          },
          "name": "KILO_BITS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "MEGA_BITS."
          },
          "name": "MEGA_BITS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "GIGA_BITS."
          },
          "name": "GIGA_BITS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "TERA_BITS."
          },
          "name": "TERA_BITS"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "PERCENT."
          },
          "name": "PERCENT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "COUNT."
          },
          "name": "COUNT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "BYTES_PER_SECOND."
          },
          "name": "BYTES_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "KILO_BYTES_PER_SECOND."
          },
          "name": "KILO_BYTES_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "MEGA_BYTES_PER_SECOND."
          },
          "name": "MEGA_BYTES_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "GIGA_BYTES_PER_SECOND."
          },
          "name": "GIGA_BYTES_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "TERA_BYTES_PER_SECOND."
          },
          "name": "TERA_BYTES_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "BITS_PER_SECOND."
          },
          "name": "BITS_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "KILO_BITS_PER_SECOND."
          },
          "name": "KILO_BITS_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "MEGA_BITS_PER_SECOND."
          },
          "name": "MEGA_BITS_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "GIGA_BITS_PER_SECOND."
          },
          "name": "GIGA_BITS_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "TERA_BITS_PER_SECOND."
          },
          "name": "TERA_BITS_PER_SECOND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "COUNT_PER_SECOND."
          },
          "name": "COUNT_PER_SECOND"
        }
      ],
      "name": "CloudWatchAlarmUnit",
      "namespace": "EmrCreateCluster",
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.CloudWatchAlarmUnit"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ConfigurationProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "remarks": "See the RunJobFlow API for complete documentation on input parameters",
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_Configuration.html",
        "stability": "stable",
        "summary": "An optional configuration specification to be used when provisioning cluster instances, which can include configurations for applications and software bundled with Amazon EMR.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const configurationProperty_: stepfunctions_tasks.EmrCreateCluster.ConfigurationProperty;\nconst configurationProperty: stepfunctions_tasks.EmrCreateCluster.ConfigurationProperty = {\n  classification: 'classification',\n  configurations: [{\n    classification: 'classification',\n    configurations: [configurationProperty_],\n    properties: {\n      propertiesKey: 'properties',\n    },\n  }],\n  properties: {\n    propertiesKey: 'properties',\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 1441
      },
      "name": "ConfigurationProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "No classification",
            "stability": "stable",
            "summary": "The classification within a configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1447
          },
          "name": "classification",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No configurations",
            "stability": "stable",
            "summary": "A list of additional configurations to apply within a configuration object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1461
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ConfigurationProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No properties",
            "stability": "stable",
            "summary": "A set of properties specified within a configuration classification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1454
          },
          "name": "properties",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.ConfigurationProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.EbsBlockDeviceConfigProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_EbsBlockDeviceConfig.html",
        "stability": "stable",
        "summary": "Configuration of requested EBS block device associated with the instance group with count of volumes that will be associated to every instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const size: cdk.Size;\nconst ebsBlockDeviceConfigProperty: stepfunctions_tasks.EmrCreateCluster.EbsBlockDeviceConfigProperty = {\n  volumeSpecification: {\n    volumeSize: size,\n    volumeType: stepfunctions_tasks.EmrCreateCluster.EbsBlockDeviceVolumeType.GP2,\n\n    // the properties below are optional\n    iops: 123,\n  },\n\n  // the properties below are optional\n  volumesPerInstance: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.EbsBlockDeviceConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 500
      },
      "name": "EbsBlockDeviceConfigProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "EBS volume specifications such as volume type, IOPS, and size (GiB) that will be requested for the EBS volume attached to an EC2 instance in the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 505
          },
          "name": "volumeSpecification",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.VolumeSpecificationProperty"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "EMR selected default",
            "stability": "stable",
            "summary": "Number of EBS volumes with a specific volume configuration that will be associated with every instance in the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 512
          },
          "name": "volumesPerInstance",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.EbsBlockDeviceConfigProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.EbsBlockDeviceVolumeType": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "EBS Volume Types."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.EbsBlockDeviceVolumeType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 451
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "gp2 Volume Type."
          },
          "name": "GP2"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "io1 Volume Type."
          },
          "name": "IO1"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Standard Volume Type."
          },
          "name": "STANDARD"
        }
      ],
      "name": "EbsBlockDeviceVolumeType",
      "namespace": "EmrCreateCluster",
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.EbsBlockDeviceVolumeType"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.EbsConfigurationProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_EbsConfiguration.html",
        "stability": "stable",
        "summary": "The Amazon EBS configuration of a cluster instance.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const size: cdk.Size;\nconst ebsConfigurationProperty: stepfunctions_tasks.EmrCreateCluster.EbsConfigurationProperty = {\n  ebsBlockDeviceConfigs: [{\n    volumeSpecification: {\n      volumeSize: size,\n      volumeType: stepfunctions_tasks.EmrCreateCluster.EbsBlockDeviceVolumeType.GP2,\n\n      // the properties below are optional\n      iops: 123,\n    },\n\n    // the properties below are optional\n    volumesPerInstance: 123,\n  }],\n  ebsOptimized: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.EbsConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 521
      },
      "name": "EbsConfigurationProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "An array of Amazon EBS volume specifications attached to a cluster instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 527
          },
          "name": "ebsBlockDeviceConfigs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.EbsBlockDeviceConfigProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- EMR selected default",
            "stability": "stable",
            "summary": "Indicates whether an Amazon EBS volume is EBS-optimized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 534
          },
          "name": "ebsOptimized",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.EbsConfigurationProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.EmrClusterScaleDownBehavior": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_RunJobFlow.html#EMR-RunJobFlow-request-ScaleDownBehavior",
        "stability": "stable",
        "summary": "The Cluster ScaleDownBehavior specifies the way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an instance group is resized."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.EmrClusterScaleDownBehavior",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 414
      },
      "members": [
        {
          "docs": {
            "remarks": "This option is only available with Amazon EMR 5.1.0 and later and is the default for clusters created using that version",
            "stability": "stable",
            "summary": "Indicates that Amazon EMR terminates nodes at the instance-hour boundary, regardless of when the request to terminate the instance was submitted."
          },
          "name": "TERMINATE_AT_INSTANCE_HOUR"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Indicates that Amazon EMR adds nodes to a deny list and drains tasks from nodes before terminating the Amazon EC2 instances, regardless of the instance-hour boundary."
          },
          "name": "TERMINATE_AT_TASK_COMPLETION"
        }
      ],
      "name": "EmrClusterScaleDownBehavior",
      "namespace": "EmrCreateCluster",
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.EmrClusterScaleDownBehavior"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceFleetConfigProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_InstanceFleetConfig.html",
        "stability": "stable",
        "summary": "The configuration that defines an instance fleet.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const configurationProperty_: stepfunctions_tasks.EmrCreateCluster.ConfigurationProperty;\ndeclare const size: cdk.Size;\nconst instanceFleetConfigProperty: stepfunctions_tasks.EmrCreateCluster.InstanceFleetConfigProperty = {\n  instanceFleetType: stepfunctions_tasks.EmrCreateCluster.InstanceRoleType.MASTER,\n\n  // the properties below are optional\n  instanceTypeConfigs: [{\n    instanceType: 'instanceType',\n\n    // the properties below are optional\n    bidPrice: 'bidPrice',\n    bidPriceAsPercentageOfOnDemandPrice: 123,\n    configurations: [{\n      classification: 'classification',\n      configurations: [configurationProperty_],\n      properties: {\n        propertiesKey: 'properties',\n      },\n    }],\n    ebsConfiguration: {\n      ebsBlockDeviceConfigs: [{\n        volumeSpecification: {\n          volumeSize: size,\n          volumeType: stepfunctions_tasks.EmrCreateCluster.EbsBlockDeviceVolumeType.GP2,\n\n          // the properties below are optional\n          iops: 123,\n        },\n\n        // the properties below are optional\n        volumesPerInstance: 123,\n      }],\n      ebsOptimized: false,\n    },\n    weightedCapacity: 123,\n  }],\n  launchSpecifications: {\n    spotSpecification: {\n      timeoutAction: stepfunctions_tasks.EmrCreateCluster.SpotTimeoutAction.SWITCH_TO_ON_DEMAND,\n      timeoutDurationMinutes: 123,\n\n      // the properties below are optional\n      allocationStrategy: stepfunctions_tasks.EmrCreateCluster.SpotAllocationStrategy.CAPACITY_OPTIMIZED,\n      blockDurationMinutes: 123,\n    },\n  },\n  name: 'name',\n  targetOnDemandCapacity: 123,\n  targetSpotCapacity: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceFleetConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 668
      },
      "name": "InstanceFleetConfigProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Valid values are MASTER,CORE,and TASK.",
            "stability": "stable",
            "summary": "The node type that the instance fleet hosts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 672
          },
          "name": "instanceFleetType",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceRoleType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No instanceTpeConfigs",
            "stability": "stable",
            "summary": "The instance type configurations that define the EC2 instances in the instance fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 679
          },
          "name": "instanceTypeConfigs",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceTypeConfigProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No launchSpecifications",
            "stability": "stable",
            "summary": "The launch specification for the instance fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 686
          },
          "name": "launchSpecifications",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceFleetProvisioningSpecificationsProperty"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No name",
            "stability": "stable",
            "summary": "The friendly name of the instance fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 693
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No targetOnDemandCapacity",
            "stability": "stable",
            "summary": "The target capacity of On-Demand units for the instance fleet, which determines how many On-Demand instances to provision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 700
          },
          "name": "targetOnDemandCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No targetSpotCapacity",
            "stability": "stable",
            "summary": "The target capacity of Spot units for the instance fleet, which determines how many Spot instances to provision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 707
          },
          "name": "targetSpotCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.InstanceFleetConfigProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceFleetProvisioningSpecificationsProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_InstanceFleetProvisioningSpecifications.html",
        "stability": "stable",
        "summary": "The launch specification for Spot instances in the fleet, which determines the defined duration and provisioning timeout behavior.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst instanceFleetProvisioningSpecificationsProperty: stepfunctions_tasks.EmrCreateCluster.InstanceFleetProvisioningSpecificationsProperty = {\n  spotSpecification: {\n    timeoutAction: stepfunctions_tasks.EmrCreateCluster.SpotTimeoutAction.SWITCH_TO_ON_DEMAND,\n    timeoutDurationMinutes: 123,\n\n    // the properties below are optional\n    allocationStrategy: stepfunctions_tasks.EmrCreateCluster.SpotAllocationStrategy.CAPACITY_OPTIMIZED,\n    blockDurationMinutes: 123,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceFleetProvisioningSpecificationsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 655
      },
      "name": "InstanceFleetProvisioningSpecificationsProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The launch specification for Spot instances in the fleet, which determines the defined duration and provisioning timeout behavior."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 659
          },
          "name": "spotSpecification",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.SpotProvisioningSpecificationProperty"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.InstanceFleetProvisioningSpecificationsProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceGroupConfigProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_InstanceGroupConfig.html",
        "stability": "stable",
        "summary": "Configuration defining a new instance group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const configurationProperty_: stepfunctions_tasks.EmrCreateCluster.ConfigurationProperty;\ndeclare const size: cdk.Size;\nconst instanceGroupConfigProperty: stepfunctions_tasks.EmrCreateCluster.InstanceGroupConfigProperty = {\n  instanceCount: 123,\n  instanceRole: stepfunctions_tasks.EmrCreateCluster.InstanceRoleType.MASTER,\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  autoScalingPolicy: {\n    constraints: {\n      maxCapacity: 123,\n      minCapacity: 123,\n    },\n    rules: [{\n      action: {\n        simpleScalingPolicyConfiguration: {\n          scalingAdjustment: 123,\n\n          // the properties below are optional\n          adjustmentType: stepfunctions_tasks.EmrCreateCluster.ScalingAdjustmentType.CHANGE_IN_CAPACITY,\n          coolDown: 123,\n        },\n\n        // the properties below are optional\n        market: stepfunctions_tasks.EmrCreateCluster.InstanceMarket.ON_DEMAND,\n      },\n      name: 'name',\n      trigger: {\n        cloudWatchAlarmDefinition: {\n          comparisonOperator: stepfunctions_tasks.EmrCreateCluster.CloudWatchAlarmComparisonOperator.GREATER_THAN_OR_EQUAL,\n          metricName: 'metricName',\n          period: cdk.Duration.minutes(30),\n\n          // the properties below are optional\n          dimensions: [{\n            key: 'key',\n            value: 'value',\n          }],\n          evaluationPeriods: 123,\n          namespace: 'namespace',\n          statistic: stepfunctions_tasks.EmrCreateCluster.CloudWatchAlarmStatistic.SAMPLE_COUNT,\n          threshold: 123,\n          unit: stepfunctions_tasks.EmrCreateCluster.CloudWatchAlarmUnit.NONE,\n        },\n      },\n\n      // the properties below are optional\n      description: 'description',\n    }],\n  },\n  bidPrice: 'bidPrice',\n  configurations: [{\n    classification: 'classification',\n    configurations: [configurationProperty_],\n    properties: {\n      propertiesKey: 'properties',\n    },\n  }],\n  ebsConfiguration: {\n    ebsBlockDeviceConfigs: [{\n      volumeSpecification: {\n        volumeSize: size,\n        volumeType: stepfunctions_tasks.EmrCreateCluster.EbsBlockDeviceVolumeType.GP2,\n\n        // the properties below are optional\n        iops: 123,\n      },\n\n      // the properties below are optional\n      volumesPerInstance: 123,\n    }],\n    ebsOptimized: false,\n  },\n  market: stepfunctions_tasks.EmrCreateCluster.InstanceMarket.ON_DEMAND,\n  name: 'name',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceGroupConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 1143
      },
      "name": "InstanceGroupConfigProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Target number of instances for the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1175
          },
          "name": "instanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The role of the instance group in the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1180
          },
          "name": "instanceRole",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceRoleType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The EC2 instance type for all instances in the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1185
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "An automatic scaling policy for a core instance group or task instance group in an Amazon EMR cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1149
          },
          "name": "autoScalingPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.AutoScalingPolicyProperty"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "remarks": "Expressed in USD.",
            "stability": "stable",
            "summary": "The bid price for each EC2 Spot instance type as defined by InstanceType."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1156
          },
          "name": "bidPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The list of configurations supplied for an EMR cluster instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1163
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ConfigurationProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "EBS configurations that will be attached to each EC2 instance in the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1170
          },
          "name": "ebsConfiguration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.EbsConfigurationProperty"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- EMR selected default",
            "stability": "stable",
            "summary": "Market type of the EC2 instances used to create a cluster node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1192
          },
          "name": "market",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceMarket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "Friendly name given to the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1199
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.InstanceGroupConfigProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceMarket": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "EC2 Instance Market."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceMarket",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 983
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "On Demand Instance."
          },
          "name": "ON_DEMAND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Spot Instance."
          },
          "name": "SPOT"
        }
      ],
      "name": "InstanceMarket",
      "namespace": "EmrCreateCluster",
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.InstanceMarket"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceRoleType": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "Instance Role Types."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceRoleType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 432
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Master Node."
          },
          "name": "MASTER"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Core Node."
          },
          "name": "CORE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Task Node."
          },
          "name": "TASK"
        }
      ],
      "name": "InstanceRoleType",
      "namespace": "EmrCreateCluster",
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.InstanceRoleType"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceTypeConfigProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_InstanceTypeConfig.html",
        "stability": "stable",
        "summary": "An instance type configuration for each instance type in an instance fleet, which determines the EC2 instances Amazon EMR attempts to provision to fulfill On-Demand and Spot target capacities.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const configurationProperty_: stepfunctions_tasks.EmrCreateCluster.ConfigurationProperty;\ndeclare const size: cdk.Size;\nconst instanceTypeConfigProperty: stepfunctions_tasks.EmrCreateCluster.InstanceTypeConfigProperty = {\n  instanceType: 'instanceType',\n\n  // the properties below are optional\n  bidPrice: 'bidPrice',\n  bidPriceAsPercentageOfOnDemandPrice: 123,\n  configurations: [{\n    classification: 'classification',\n    configurations: [configurationProperty_],\n    properties: {\n      propertiesKey: 'properties',\n    },\n  }],\n  ebsConfiguration: {\n    ebsBlockDeviceConfigs: [{\n      volumeSpecification: {\n        volumeSize: size,\n        volumeType: stepfunctions_tasks.EmrCreateCluster.EbsBlockDeviceVolumeType.GP2,\n\n        // the properties below are optional\n        iops: 123,\n      },\n\n      // the properties below are optional\n      volumesPerInstance: 123,\n    }],\n    ebsOptimized: false,\n  },\n  weightedCapacity: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceTypeConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 544
      },
      "name": "InstanceTypeConfigProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "An EC2 instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 577
          },
          "name": "instanceType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "remarks": "Expressed in USD.",
            "stability": "stable",
            "summary": "The bid price for each EC2 Spot instance type as defined by InstanceType."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 550
          },
          "name": "bidPrice",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The bid price, as a percentage of On-Demand price."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 557
          },
          "name": "bidPriceAsPercentageOfOnDemandPrice",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "A configuration classification that applies when provisioning cluster instances, which can include configurations for applications and software that run on the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 565
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ConfigurationProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The configuration of Amazon Elastic Block Storage (EBS) attached to each instance as defined by InstanceType."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 572
          },
          "name": "ebsConfiguration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.EbsConfigurationProperty"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The number of units that a provisioned instance of this type provides toward fulfilling the target capacities defined in the InstanceFleetConfig."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 585
          },
          "name": "weightedCapacity",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.InstanceTypeConfigProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstancesConfigProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const clusterRole = new iam.Role(this, 'ClusterRole', {\n  assumedBy: new iam.ServicePrincipal('ec2.amazonaws.com'),\n});\n\nconst serviceRole = new iam.Role(this, 'ServiceRole', {\n  assumedBy: new iam.ServicePrincipal('elasticmapreduce.amazonaws.com'),\n});\n\nconst autoScalingRole = new iam.Role(this, 'AutoScalingRole', {\n  assumedBy: new iam.ServicePrincipal('elasticmapreduce.amazonaws.com'),\n});\n\nautoScalingRole.assumeRolePolicy?.addStatements(\n  new iam.PolicyStatement({\n    effect: iam.Effect.ALLOW,\n    principals: [\n      new iam.ServicePrincipal('application-autoscaling.amazonaws.com'),\n    ],\n    actions: [\n      'sts:AssumeRole',\n    ],\n  }));\n)\n\nnew tasks.EmrCreateCluster(this, 'Create Cluster', {\n  instances: {},\n  clusterRole,\n  name: sfn.TaskInput.fromJsonPathAt('$.ClusterName').value,\n  serviceRole,\n  autoScalingRole,\n});",
        "remarks": "See the RunJobFlow API for complete documentation on input parameters",
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_JobFlowInstancesConfig.html",
        "stability": "stable",
        "summary": "A specification of the number and type of Amazon EC2 instances."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstancesConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 1234
      },
      "name": "InstancesConfigProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "A list of additional Amazon EC2 security group IDs for the master node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1240
          },
          "name": "additionalMasterSecurityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "A list of additional Amazon EC2 security group IDs for the core and task nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1247
          },
          "name": "additionalSlaveSecurityGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The name of the EC2 key pair that can be used to ssh to the master node as the user called \"hadoop.\"."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1254
          },
          "name": "ec2KeyName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "EMR selected default",
            "remarks": "To launch the cluster in Amazon Virtual Private Cloud (Amazon VPC),\nset this parameter to the identifier of the Amazon VPC subnet where you want the cluster to launch.",
            "stability": "stable",
            "summary": "Applies to clusters that use the uniform instance group configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1262
          },
          "name": "ec2SubnetId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "EMR selected default",
            "remarks": "When multiple EC2 subnet IDs are specified, Amazon EMR evaluates them and\nlaunches instances in the optimal subnet.",
            "stability": "stable",
            "summary": "Applies to clusters that use the instance fleet configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1270
          },
          "name": "ec2SubnetIds",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The identifier of the Amazon EC2 security group for the master node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1277
          },
          "name": "emrManagedMasterSecurityGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The identifier of the Amazon EC2 security group for the core and task nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1284
          },
          "name": "emrManagedSlaveSecurityGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 0.18 if the AmiVersion parameter is not set. If AmiVersion is set, the version of Hadoop for that AMI version is used.",
            "stability": "stable",
            "summary": "Applies only to Amazon EMR release versions earlier than 4.0. The Hadoop version for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1291
          },
          "name": "hadoopVersion",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "stability": "stable",
            "summary": "The number of EC2 instances in the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1298
          },
          "name": "instanceCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "remarks": "The instance fleet configuration is available only in Amazon EMR versions 4.8.0 and later, excluding 5.0.x versions.",
            "stability": "stable",
            "summary": "Describes the EC2 instances and instance configurations for clusters that use the instance fleet configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1306
          },
          "name": "instanceFleets",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceFleetConfigProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "Configuration for the instance groups in a cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1313
          },
          "name": "instanceGroups",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceGroupConfigProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The EC2 instance type of the master node."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1320
          },
          "name": "masterInstanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- EMR selected default",
            "stability": "stable",
            "summary": "The Availability Zone in which the cluster runs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1327
          },
          "name": "placement",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.PlacementTypeProperty"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The identifier of the Amazon EC2 security group for the Amazon EMR service to access clusters in VPC private subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1334
          },
          "name": "serviceAccessSecurityGroup",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The EC2 instance type of the core and task nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1341
          },
          "name": "slaveInstanceType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Specifies whether to lock the cluster to prevent the Amazon EC2 instances from being terminated by API call, user intervention, or in the event of a job-flow error."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1349
          },
          "name": "terminationProtected",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.InstancesConfigProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.KerberosAttributesProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "remarks": "See the RunJobFlow API for complete documentation on input parameters",
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_KerberosAttributes.html",
        "stability": "stable",
        "summary": "Attributes for Kerberos configuration when Kerberos authentication is enabled using a security configuration.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst kerberosAttributesProperty: stepfunctions_tasks.EmrCreateCluster.KerberosAttributesProperty = {\n  realm: 'realm',\n\n  // the properties below are optional\n  adDomainJoinPassword: 'adDomainJoinPassword',\n  adDomainJoinUser: 'adDomainJoinUser',\n  crossRealmTrustPrincipalPassword: 'crossRealmTrustPrincipalPassword',\n  kdcAdminPassword: 'kdcAdminPassword',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.KerberosAttributesProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 1472
      },
      "name": "KerberosAttributesProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "For example, EC2.INTERNAL.",
            "stability": "stable",
            "summary": "The name of the Kerberos realm to which all nodes in a cluster belong."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1507
          },
          "name": "realm",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No adDomainJoinPassword",
            "stability": "stable",
            "summary": "The Active Directory password for ADDomainJoinUser."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1478
          },
          "name": "adDomainJoinPassword",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No adDomainJoinUser",
            "remarks": "A user with sufficient privileges to join\nresources to the domain.",
            "stability": "stable",
            "summary": "Required only when establishing a cross-realm trust with an Active Directory domain."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1486
          },
          "name": "adDomainJoinUser",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No crossRealmTrustPrincipalPassword",
            "remarks": "The cross-realm principal password, which\nmust be identical across realms.",
            "stability": "stable",
            "summary": "Required only when establishing a cross-realm trust with a KDC in a different realm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1494
          },
          "name": "crossRealmTrustPrincipalPassword",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No kdcAdminPassword",
            "stability": "stable",
            "summary": "The password used within the cluster for the kadmin service on the cluster-dedicated KDC, which maintains Kerberos principals, password policies, and keytabs for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1502
          },
          "name": "kdcAdminPassword",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.KerberosAttributesProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.MetricDimensionProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "remarks": "By default, Amazon EMR uses\none dimension whose Key is JobFlowID and Value is a variable representing the cluster ID, which is ${emr.clusterId}. This enables\nthe rule to bootstrap when the cluster ID becomes available",
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_MetricDimension.html",
        "stability": "stable",
        "summary": "A CloudWatch dimension, which is specified using a Key (known as a Name in CloudWatch), Value pair.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst metricDimensionProperty: stepfunctions_tasks.EmrCreateCluster.MetricDimensionProperty = {\n  key: 'key',\n  value: 'value',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.MetricDimensionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 883
      },
      "name": "MetricDimensionProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The dimension name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 887
          },
          "name": "key",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The dimension value."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 892
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.MetricDimensionProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.PlacementTypeProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_PlacementType.html",
        "stability": "stable",
        "summary": "The Amazon EC2 Availability Zone configuration of the cluster (job flow).",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst placementTypeProperty: stepfunctions_tasks.EmrCreateCluster.PlacementTypeProperty = {\n  availabilityZone: 'availabilityZone',\n  availabilityZones: ['availabilityZones'],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.PlacementTypeProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 1208
      },
      "name": "PlacementTypeProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- EMR selected default",
            "remarks": "AvailabilityZone is used for uniform instance groups, while AvailabilityZones\n(plural) is used for instance fleets.",
            "stability": "stable",
            "summary": "The Amazon EC2 Availability Zone for the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1215
          },
          "name": "availabilityZone",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- EMR selected default",
            "remarks": "AvailabilityZones is used for instance fleets, while AvailabilityZone (singular) is used for uniform instance groups.",
            "stability": "stable",
            "summary": "When multiple Availability Zones are specified, Amazon EMR evaluates them and launches instances in the optimal Availability Zone."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1223
          },
          "name": "availabilityZones",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.PlacementTypeProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScalingActionProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "remarks": "And an automatic scaling configuration, which describes how the policy adds or removes instances, the cooldown period,\nand the number of EC2 instances that will be added each time the CloudWatch metric alarm condition is satisfied.",
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_ScalingAction.html",
        "stability": "stable",
        "summary": "The type of adjustment the automatic scaling activity makes when triggered, and the periodicity of the adjustment.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst scalingActionProperty: stepfunctions_tasks.EmrCreateCluster.ScalingActionProperty = {\n  simpleScalingPolicyConfiguration: {\n    scalingAdjustment: 123,\n\n    // the properties below are optional\n    adjustmentType: stepfunctions_tasks.EmrCreateCluster.ScalingAdjustmentType.CHANGE_IN_CAPACITY,\n    coolDown: 123,\n  },\n\n  // the properties below are optional\n  market: stepfunctions_tasks.EmrCreateCluster.InstanceMarket.ON_DEMAND,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScalingActionProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 1052
      },
      "name": "ScalingActionProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The type of adjustment the automatic scaling activity makes when triggered, and the periodicity of the adjustment."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1063
          },
          "name": "simpleScalingPolicyConfiguration",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.SimpleScalingPolicyConfigurationProperty"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- EMR selected default",
            "remarks": "Instance groups use the market type specified for the group.",
            "stability": "stable",
            "summary": "Not available for instance groups."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1058
          },
          "name": "market",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstanceMarket"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.ScalingActionProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScalingAdjustmentType": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "AutoScaling Adjustment Type."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScalingAdjustmentType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 998
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "CHANGE_IN_CAPACITY."
          },
          "name": "CHANGE_IN_CAPACITY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "PERCENT_CHANGE_IN_CAPACITY."
          },
          "name": "PERCENT_CHANGE_IN_CAPACITY"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "EXACT_CAPACITY."
          },
          "name": "EXACT_CAPACITY"
        }
      ],
      "name": "ScalingAdjustmentType",
      "namespace": "EmrCreateCluster",
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.ScalingAdjustmentType"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScalingConstraintsProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "remarks": "Automatic scaling activities triggered by automatic scaling\nrules will not cause an instance group to grow above or below these limits.",
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_ScalingConstraints.html",
        "stability": "stable",
        "summary": "The upper and lower EC2 instance limits for an automatic scaling policy.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst scalingConstraintsProperty: stepfunctions_tasks.EmrCreateCluster.ScalingConstraintsProperty = {\n  maxCapacity: 123,\n  minCapacity: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScalingConstraintsProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 1104
      },
      "name": "ScalingConstraintsProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Scale-out\nactivities will not add instances beyond this boundary.",
            "stability": "stable",
            "summary": "The upper boundary of EC2 instances in an instance group beyond which scaling activities are not allowed to grow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1109
          },
          "name": "maxCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Scale-in\nactivities will not terminate instances below this boundary.",
            "stability": "stable",
            "summary": "The lower boundary of EC2 instances in an instance group below which scaling activities are not allowed to shrink."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1115
          },
          "name": "minCapacity",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.ScalingConstraintsProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScalingRuleProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_ScalingRule.html",
        "stability": "stable",
        "summary": "A scale-in or scale-out rule that defines scaling activity, including the CloudWatch metric alarm that triggers activity, how EC2 instances are added or removed, and the periodicity of adjustments.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\nconst scalingRuleProperty: stepfunctions_tasks.EmrCreateCluster.ScalingRuleProperty = {\n  action: {\n    simpleScalingPolicyConfiguration: {\n      scalingAdjustment: 123,\n\n      // the properties below are optional\n      adjustmentType: stepfunctions_tasks.EmrCreateCluster.ScalingAdjustmentType.CHANGE_IN_CAPACITY,\n      coolDown: 123,\n    },\n\n    // the properties below are optional\n    market: stepfunctions_tasks.EmrCreateCluster.InstanceMarket.ON_DEMAND,\n  },\n  name: 'name',\n  trigger: {\n    cloudWatchAlarmDefinition: {\n      comparisonOperator: stepfunctions_tasks.EmrCreateCluster.CloudWatchAlarmComparisonOperator.GREATER_THAN_OR_EQUAL,\n      metricName: 'metricName',\n      period: cdk.Duration.minutes(30),\n\n      // the properties below are optional\n      dimensions: [{\n        key: 'key',\n        value: 'value',\n      }],\n      evaluationPeriods: 123,\n      namespace: 'namespace',\n      statistic: stepfunctions_tasks.EmrCreateCluster.CloudWatchAlarmStatistic.SAMPLE_COUNT,\n      threshold: 123,\n      unit: stepfunctions_tasks.EmrCreateCluster.CloudWatchAlarmUnit.NONE,\n    },\n  },\n\n  // the properties below are optional\n  description: 'description',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScalingRuleProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 1073
      },
      "name": "ScalingRuleProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The conditions that trigger an automatic scaling activity."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1077
          },
          "name": "action",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScalingActionProperty"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Rule names must be unique within a scaling policy.",
            "stability": "stable",
            "summary": "The name used to identify an automatic scaling rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1089
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The CloudWatch alarm definition that determines when automatic scaling activity is triggered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1094
          },
          "name": "trigger",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScalingTriggerProperty"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "A friendly, more verbose description of the automatic scaling rule."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1084
          },
          "name": "description",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.ScalingRuleProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScalingTriggerProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "remarks": "When the defined alarm conditions are met along with other trigger parameters, scaling activity begins.",
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_ScalingTrigger.html",
        "stability": "stable",
        "summary": "The conditions that trigger an automatic scaling activity and the definition of a CloudWatch metric alarm.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\nconst scalingTriggerProperty: stepfunctions_tasks.EmrCreateCluster.ScalingTriggerProperty = {\n  cloudWatchAlarmDefinition: {\n    comparisonOperator: stepfunctions_tasks.EmrCreateCluster.CloudWatchAlarmComparisonOperator.GREATER_THAN_OR_EQUAL,\n    metricName: 'metricName',\n    period: cdk.Duration.minutes(30),\n\n    // the properties below are optional\n    dimensions: [{\n      key: 'key',\n      value: 'value',\n    }],\n    evaluationPeriods: 123,\n    namespace: 'namespace',\n    statistic: stepfunctions_tasks.EmrCreateCluster.CloudWatchAlarmStatistic.SAMPLE_COUNT,\n    threshold: 123,\n    unit: stepfunctions_tasks.EmrCreateCluster.CloudWatchAlarmUnit.NONE,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScalingTriggerProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 971
      },
      "name": "ScalingTriggerProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "When the defined alarm conditions are met along with other trigger parameters,\nscaling activity begins.",
            "stability": "stable",
            "summary": "The definition of a CloudWatch metric alarm."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 976
          },
          "name": "cloudWatchAlarmDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.CloudWatchAlarmDefinitionProperty"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.ScalingTriggerProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScriptBootstrapActionConfigProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_ScriptBootstrapActionConfig.html",
        "stability": "stable",
        "summary": "Configuration of the script to run during a bootstrap action.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst scriptBootstrapActionConfigProperty: stepfunctions_tasks.EmrCreateCluster.ScriptBootstrapActionConfigProperty = {\n  path: 'path',\n\n  // the properties below are optional\n  args: ['args'],\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScriptBootstrapActionConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 1398
      },
      "name": "ScriptBootstrapActionConfigProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Can be either a location in Amazon S3 or on a local file system.",
            "stability": "stable",
            "summary": "Location of the script to run during a bootstrap action."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1402
          },
          "name": "path",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No args",
            "stability": "stable",
            "summary": "A list of command line arguments to pass to the bootstrap action script."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1409
          },
          "name": "args",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.ScriptBootstrapActionConfigProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.SimpleScalingPolicyConfigurationProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_SimpleScalingPolicyConfiguration.html",
        "stability": "stable",
        "summary": "An automatic scaling configuration, which describes how the policy adds or removes instances, the cooldown period, and the number of EC2 instances that will be added each time the CloudWatch metric alarm condition is satisfied.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst simpleScalingPolicyConfigurationProperty: stepfunctions_tasks.EmrCreateCluster.SimpleScalingPolicyConfigurationProperty = {\n  scalingAdjustment: 123,\n\n  // the properties below are optional\n  adjustmentType: stepfunctions_tasks.EmrCreateCluster.ScalingAdjustmentType.CHANGE_IN_CAPACITY,\n  coolDown: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.SimpleScalingPolicyConfigurationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 1020
      },
      "name": "SimpleScalingPolicyConfigurationProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "A positive value adds to the instance group's\nEC2 instance count while a negative number removes instances. If AdjustmentType is set to EXACT_CAPACITY, the number should only be\na positive integer.",
            "stability": "stable",
            "summary": "The amount by which to scale in or scale out, based on the specified AdjustmentType."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1041
          },
          "name": "scalingAdjustment",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The way in which EC2 instances are added (if ScalingAdjustment is a positive number) or terminated (if ScalingAdjustment is a negative number) each time the scaling activity is triggered."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1027
          },
          "name": "adjustmentType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ScalingAdjustmentType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "stability": "stable",
            "summary": "The amount of time, in seconds, after a scaling activity completes before any further trigger-related scaling activities can start."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 1034
          },
          "name": "coolDown",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.SimpleScalingPolicyConfigurationProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.SpotAllocationStrategy": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "remarks": "Specifies the strategy to use in launching Spot Instance fleets. For example, \"capacity-optimized\" launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching.",
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_SpotProvisioningSpecification.html",
        "stability": "stable",
        "summary": "Spot Allocation Strategies."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.SpotAllocationStrategy",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 611
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Capacity-optimized, which launches instances from Spot Instance pools with optimal capacity for the number of instances that are launching."
          },
          "name": "CAPACITY_OPTIMIZED"
        }
      ],
      "name": "SpotAllocationStrategy",
      "namespace": "EmrCreateCluster",
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.SpotAllocationStrategy"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.SpotProvisioningSpecificationProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_SpotProvisioningSpecification.html",
        "stability": "stable",
        "summary": "The launch specification for Spot instances in the instance fleet, which determines the defined duration and provisioning timeout behavior.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst spotProvisioningSpecificationProperty: stepfunctions_tasks.EmrCreateCluster.SpotProvisioningSpecificationProperty = {\n  timeoutAction: stepfunctions_tasks.EmrCreateCluster.SpotTimeoutAction.SWITCH_TO_ON_DEMAND,\n  timeoutDurationMinutes: 123,\n\n  // the properties below are optional\n  allocationStrategy: stepfunctions_tasks.EmrCreateCluster.SpotAllocationStrategy.CAPACITY_OPTIMIZED,\n  blockDurationMinutes: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.SpotProvisioningSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 624
      },
      "name": "SpotProvisioningSpecificationProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The action to take when TargetSpotCapacity has not been fulfilled when the TimeoutDurationMinutes has expired."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 641
          },
          "name": "timeoutAction",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.SpotTimeoutAction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The spot provisioning timeout period in minutes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 646
          },
          "name": "timeoutDurationMinutes",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No allocation strategy, i.e. spot instance type will be chosen based on current price only",
            "stability": "stable",
            "summary": "Specifies the strategy to use in launching Spot Instance fleets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 630
          },
          "name": "allocationStrategy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.SpotAllocationStrategy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No blockDurationMinutes",
            "stability": "stable",
            "summary": "The defined duration for Spot instances (also known as Spot blocks) in minutes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 636
          },
          "name": "blockDurationMinutes",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.SpotProvisioningSpecificationProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.SpotTimeoutAction": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "Spot Timeout Actions."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.SpotTimeoutAction",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 592
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "SWITCH_TO_ON_DEMAND."
          },
          "name": "SWITCH_TO_ON_DEMAND"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "TERMINATE_CLUSTER."
          },
          "name": "TERMINATE_CLUSTER"
        }
      ],
      "name": "SpotTimeoutAction",
      "namespace": "EmrCreateCluster",
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.SpotTimeoutAction"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.VolumeSpecificationProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_VolumeSpecification.html",
        "stability": "stable",
        "summary": "EBS volume specifications such as volume type, IOPS, and size (GiB) that will be requested for the EBS volume attached to an EC2 instance in the cluster.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const size: cdk.Size;\nconst volumeSpecificationProperty: stepfunctions_tasks.EmrCreateCluster.VolumeSpecificationProperty = {\n  volumeSize: size,\n  volumeType: stepfunctions_tasks.EmrCreateCluster.EbsBlockDeviceVolumeType.GP2,\n\n  // the properties below are optional\n  iops: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.VolumeSpecificationProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 473
      },
      "name": "VolumeSpecificationProperty",
      "namespace": "EmrCreateCluster",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "If the volume type is EBS-optimized, the minimum value is 10GiB.\nMaximum size is 1TiB",
            "stability": "stable",
            "summary": "The volume size."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 485
          },
          "name": "volumeSize",
          "type": {
            "fqn": "@aws-cdk/core.Size"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Volume types supported are gp2, io1, standard.",
            "stability": "stable",
            "summary": "The volume type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 490
          },
          "name": "volumeType",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.EbsBlockDeviceVolumeType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- EMR selected default",
            "stability": "stable",
            "summary": "The number of I/O operations per second (IOPS) that the volume supports."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 479
          },
          "name": "iops",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateCluster.VolumeSpecificationProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrCreateClusterProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const clusterRole = new iam.Role(this, 'ClusterRole', {\n  assumedBy: new iam.ServicePrincipal('ec2.amazonaws.com'),\n});\n\nconst serviceRole = new iam.Role(this, 'ServiceRole', {\n  assumedBy: new iam.ServicePrincipal('elasticmapreduce.amazonaws.com'),\n});\n\nconst autoScalingRole = new iam.Role(this, 'AutoScalingRole', {\n  assumedBy: new iam.ServicePrincipal('elasticmapreduce.amazonaws.com'),\n});\n\nautoScalingRole.assumeRolePolicy?.addStatements(\n  new iam.PolicyStatement({\n    effect: iam.Effect.ALLOW,\n    principals: [\n      new iam.ServicePrincipal('application-autoscaling.amazonaws.com'),\n    ],\n    actions: [\n      'sts:AssumeRole',\n    ],\n  }));\n)\n\nnew tasks.EmrCreateCluster(this, 'Create Cluster', {\n  instances: {},\n  clusterRole,\n  name: sfn.TaskInput.fromJsonPathAt('$.ClusterName').value,\n  serviceRole,\n  autoScalingRole,\n});",
        "remarks": "See the RunJobFlow API for complete documentation on input parameters",
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_RunJobFlow.html",
        "stability": "stable",
        "summary": "Properties for EmrCreateCluster."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateClusterProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-create-cluster.ts",
        "line": 22
      },
      "name": "EmrCreateClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "A specification of the number and type of Amazon EC2 instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 26
          },
          "name": "instances",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.InstancesConfigProperty"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Name of the Cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 40
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "A JSON string for selecting additional features."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 54
          },
          "name": "additionalInfo",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- EMR selected default",
            "stability": "stable",
            "summary": "A case-insensitive list of applications for Amazon EMR to install and configure when launching the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 61
          },
          "name": "applications",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ApplicationConfigProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A role will be created.",
            "stability": "stable",
            "summary": "An IAM role for automatic scaling policies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 68
          },
          "name": "autoScalingRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "A list of bootstrap actions to run before Hadoop starts on the cluster nodes."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 75
          },
          "name": "bootstrapActions",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.BootstrapActionConfigProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- * A Role will be created",
            "remarks": "An IAM role for an EMR cluster. The EC2 instances of the cluster assume this role.\n\nThis attribute has been renamed from jobFlowRole to clusterRole to align with other ERM/StepFunction integration parameters.",
            "stability": "stable",
            "summary": "Also called instance profile and EC2 role."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 35
          },
          "name": "clusterRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The list of configurations supplied for the EMR cluster you are creating."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 82
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ConfigurationProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The ID of a custom Amazon EBS-backed Linux AMI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 89
          },
          "name": "customAmiId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- EMR selected default",
            "stability": "stable",
            "summary": "The size of the EBS root device volume of the Linux AMI that is used for each EC2 instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 96
          },
          "name": "ebsRootVolumeSize",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Size"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "Attributes for Kerberos configuration when Kerberos authentication is enabled using a security configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 103
          },
          "name": "kerberosAttributes",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.KerberosAttributesProperty"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The location in Amazon S3 to write the log files of the job flow."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 110
          },
          "name": "logUri",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- EMR selected default",
            "stability": "stable",
            "summary": "The Amazon EMR release label, which determines the version of open-source application packages installed on the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 117
          },
          "name": "releaseLabel",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- EMR selected default",
            "stability": "stable",
            "summary": "Specifies the way that individual Amazon EC2 instances terminate when an automatic scale-in activity occurs or an instance group is resized."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 124
          },
          "name": "scaleDownBehavior",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.EmrClusterScaleDownBehavior"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The name of a security configuration to apply to the cluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 131
          },
          "name": "securityConfiguration",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A role will be created that Amazon EMR service can assume.",
            "stability": "stable",
            "summary": "The IAM role that will be assumed by the Amazon EMR service to access AWS resources on your behalf."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 47
          },
          "name": "serviceRole",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "1 - no step concurrency allowed",
            "remarks": "Requires EMR release label 5.28.0 or above.\nMust be in range [1, 256].",
            "stability": "stable",
            "summary": "Specifies the step concurrency level to allow multiple steps to run in parallel."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 141
          },
          "name": "stepConcurrencyLevel",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "A list of tags to associate with a cluster and propagate to Amazon EC2 instances."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 148
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "A value of true indicates that all IAM users in the AWS account can perform cluster actions if they have the proper IAM policy permissions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-create-cluster.ts",
            "line": 155
          },
          "name": "visibleToAllUsers",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/emr/emr-create-cluster:EmrCreateClusterProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceFleetByName": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrModifyInstanceFleetByName(this, 'Task', {\n  clusterId: 'ClusterId',\n  instanceFleetName: 'InstanceFleetName',\n  targetOnDemandCapacity: 2,\n  targetSpotCapacity: 0,\n});",
        "stability": "stable",
        "summary": "A Step Functions Task to to modify an InstanceFleet on an EMR Cluster."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceFleetByName",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/emr/emr-modify-instance-fleet-by-name.ts",
          "line": 50
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceFleetByNameProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emr/emr-modify-instance-fleet-by-name.ts",
        "line": 45
      },
      "name": "EmrModifyInstanceFleetByName",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-fleet-by-name.ts",
            "line": 48
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-fleet-by-name.ts",
            "line": 47
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/emr/emr-modify-instance-fleet-by-name:EmrModifyInstanceFleetByName"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceFleetByNameProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrModifyInstanceFleetByName(this, 'Task', {\n  clusterId: 'ClusterId',\n  instanceFleetName: 'InstanceFleetName',\n  targetOnDemandCapacity: 2,\n  targetSpotCapacity: 0,\n});",
        "stability": "stable",
        "summary": "Properties for EmrModifyInstanceFleetByName."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceFleetByNameProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-modify-instance-fleet-by-name.ts",
        "line": 11
      },
      "name": "EmrModifyInstanceFleetByNameProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ClusterId to update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-fleet-by-name.ts",
            "line": 15
          },
          "name": "clusterId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The InstanceFleetName to update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-fleet-by-name.ts",
            "line": 20
          },
          "name": "instanceFleetName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_InstanceFleetModifyConfig.html",
            "stability": "stable",
            "summary": "The target capacity of On-Demand units for the instance fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-fleet-by-name.ts",
            "line": 29
          },
          "name": "targetOnDemandCapacity",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_InstanceFleetModifyConfig.html",
            "stability": "stable",
            "summary": "The target capacity of Spot units for the instance fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-fleet-by-name.ts",
            "line": 38
          },
          "name": "targetSpotCapacity",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/emr/emr-modify-instance-fleet-by-name:EmrModifyInstanceFleetByNameProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceGroupByName": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrModifyInstanceGroupByName(this, 'Task', {\n  clusterId: 'ClusterId',\n  instanceGroupName: sfn.JsonPath.stringAt('$.InstanceGroupName'),\n  instanceGroup: {\n    instanceCount: 1,\n  },\n});",
        "stability": "stable",
        "summary": "A Step Functions Task to to modify an InstanceGroup on an EMR Cluster."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceGroupByName",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
          "line": 42
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceGroupByNameProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
        "line": 38
      },
      "name": "EmrModifyInstanceGroupByName",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
            "line": 40
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
            "line": 39
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/emr/emr-modify-instance-group-by-name:EmrModifyInstanceGroupByName"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceGroupByName.InstanceGroupModifyConfigProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrModifyInstanceGroupByName(this, 'Task', {\n  clusterId: 'ClusterId',\n  instanceGroupName: sfn.JsonPath.stringAt('$.InstanceGroupName'),\n  instanceGroup: {\n    instanceCount: 1,\n  },\n});",
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_InstanceGroupModifyConfig.html",
        "stability": "stable",
        "summary": "Modify the size or configurations of an instance group."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceGroupByName.InstanceGroupModifyConfigProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
        "line": 134
      },
      "name": "InstanceGroupModifyConfigProperty",
      "namespace": "EmrModifyInstanceGroupByName",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "A list of new or modified configurations to apply for an instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
            "line": 140
          },
          "name": "configurations",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrCreateCluster.ConfigurationProperty"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "remarks": "After you terminate the instances, the instance group will not return to its original requested size.",
            "stability": "stable",
            "summary": "The EC2 InstanceIds to terminate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
            "line": 147
          },
          "name": "eC2InstanceIdsToTerminate",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "Target size for the instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
            "line": 154
          },
          "name": "instanceCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_ShrinkPolicy.html",
            "stability": "stable",
            "summary": "Policy for customizing shrink operations."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
            "line": 163
          },
          "name": "shrinkPolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceGroupByName.ShrinkPolicyProperty"
          }
        }
      ],
      "symbolId": "lib/emr/emr-modify-instance-group-by-name:EmrModifyInstanceGroupByName.InstanceGroupModifyConfigProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceGroupByName.InstanceResizePolicyProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_InstanceResizePolicy.html",
        "stability": "stable",
        "summary": "Custom policy for requesting termination protection or termination of specific instances when shrinking an instance group.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\nconst instanceResizePolicyProperty: stepfunctions_tasks.EmrModifyInstanceGroupByName.InstanceResizePolicyProperty = {\n  instancesToProtect: ['instancesToProtect'],\n  instancesToTerminate: ['instancesToTerminate'],\n  instanceTerminationTimeout: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceGroupByName.InstanceResizePolicyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
        "line": 83
      },
      "name": "InstanceResizePolicyProperty",
      "namespace": "EmrModifyInstanceGroupByName",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No instances will be protected when shrinking an instance group",
            "stability": "stable",
            "summary": "Specific list of instances to be protected when shrinking an instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
            "line": 89
          },
          "name": "instancesToProtect",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No instances will be terminated when shrinking an instance group.",
            "stability": "stable",
            "summary": "Specific list of instances to be terminated when shrinking an instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
            "line": 96
          },
          "name": "instancesToTerminate",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "cdk.Duration.seconds",
            "stability": "stable",
            "summary": "Decommissioning timeout override for the specific list of instances to be terminated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
            "line": 103
          },
          "name": "instanceTerminationTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/emr/emr-modify-instance-group-by-name:EmrModifyInstanceGroupByName.InstanceResizePolicyProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceGroupByName.ShrinkPolicyProperty": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "remarks": "Allows configuration of decommissioning timeout and targeted instance shrinking.",
        "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_ShrinkPolicy.html",
        "stability": "stable",
        "summary": "Policy for customizing shrink operations.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\nconst shrinkPolicyProperty: stepfunctions_tasks.EmrModifyInstanceGroupByName.ShrinkPolicyProperty = {\n  decommissionTimeout: cdk.Duration.minutes(30),\n  instanceResizePolicy: {\n    instancesToProtect: ['instancesToProtect'],\n    instancesToTerminate: ['instancesToTerminate'],\n    instanceTerminationTimeout: cdk.Duration.minutes(30),\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceGroupByName.ShrinkPolicyProperty",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
        "line": 112
      },
      "name": "ShrinkPolicyProperty",
      "namespace": "EmrModifyInstanceGroupByName",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- EMR selected default",
            "remarks": "Overrides the default YARN decommissioning timeout.",
            "stability": "stable",
            "summary": "The desired timeout for decommissioning an instance."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
            "line": 118
          },
          "name": "decommissionTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "Custom policy for requesting termination protection or termination of specific instances when shrinking an instance group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
            "line": 125
          },
          "name": "instanceResizePolicy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceGroupByName.InstanceResizePolicyProperty"
          }
        }
      ],
      "symbolId": "lib/emr/emr-modify-instance-group-by-name:EmrModifyInstanceGroupByName.ShrinkPolicyProperty"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceGroupByNameProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrModifyInstanceGroupByName(this, 'Task', {\n  clusterId: 'ClusterId',\n  instanceGroupName: sfn.JsonPath.stringAt('$.InstanceGroupName'),\n  instanceGroup: {\n    instanceCount: 1,\n  },\n});",
        "stability": "stable",
        "summary": "Properties for EmrModifyInstanceGroupByName."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceGroupByNameProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
        "line": 13
      },
      "name": "EmrModifyInstanceGroupByNameProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ClusterId to update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
            "line": 17
          },
          "name": "clusterId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This uses the same syntax as the ModifyInstanceGroups API.",
            "see": "https://docs.aws.amazon.com/emr/latest/APIReference/API_ModifyInstanceGroups.html",
            "stability": "stable",
            "summary": "The JSON that you want to provide to your ModifyInstanceGroup call as input."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
            "line": 31
          },
          "name": "instanceGroup",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrModifyInstanceGroupByName.InstanceGroupModifyConfigProperty"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The InstanceGroupName to update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-modify-instance-group-by-name.ts",
            "line": 22
          },
          "name": "instanceGroupName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr/emr-modify-instance-group-by-name:EmrModifyInstanceGroupByNameProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrSetClusterTerminationProtection": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrSetClusterTerminationProtection(this, 'Task', {\n  clusterId: 'ClusterId',\n  terminationProtected: false,\n});",
        "stability": "stable",
        "summary": "A Step Functions Task to to set Termination Protection on an EMR Cluster."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrSetClusterTerminationProtection",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/emr/emr-set-cluster-termination-protection.ts",
          "line": 32
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrSetClusterTerminationProtectionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emr/emr-set-cluster-termination-protection.ts",
        "line": 27
      },
      "name": "EmrSetClusterTerminationProtection",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-set-cluster-termination-protection.ts",
            "line": 30
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-set-cluster-termination-protection.ts",
            "line": 29
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/emr/emr-set-cluster-termination-protection:EmrSetClusterTerminationProtection"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrSetClusterTerminationProtectionProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrSetClusterTerminationProtection(this, 'Task', {\n  clusterId: 'ClusterId',\n  terminationProtected: false,\n});",
        "stability": "stable",
        "summary": "Properties for EmrSetClusterTerminationProtection."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrSetClusterTerminationProtectionProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-set-cluster-termination-protection.ts",
        "line": 11
      },
      "name": "EmrSetClusterTerminationProtectionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ClusterId to update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-set-cluster-termination-protection.ts",
            "line": 15
          },
          "name": "clusterId",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Termination protection indicator."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-set-cluster-termination-protection.ts",
            "line": 20
          },
          "name": "terminationProtected",
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/emr/emr-set-cluster-termination-protection:EmrSetClusterTerminationProtectionProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrTerminateCluster": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrTerminateCluster(this, 'Task', {\n  clusterId: 'ClusterId',\n});",
        "stability": "stable",
        "summary": "A Step Functions Task to terminate an EMR Cluster."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrTerminateCluster",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/emr/emr-terminate-cluster.ts",
          "line": 33
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrTerminateClusterProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emr/emr-terminate-cluster.ts",
        "line": 22
      },
      "name": "EmrTerminateCluster",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-terminate-cluster.ts",
            "line": 29
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-terminate-cluster.ts",
            "line": 28
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/emr/emr-terminate-cluster:EmrTerminateCluster"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EmrTerminateClusterProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrTerminateCluster(this, 'Task', {\n  clusterId: 'ClusterId',\n});",
        "stability": "stable",
        "summary": "Properties for EmrTerminateCluster."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EmrTerminateClusterProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emr/emr-terminate-cluster.ts",
        "line": 11
      },
      "name": "EmrTerminateClusterProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ClusterId to terminate."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emr/emr-terminate-cluster.ts",
            "line": 15
          },
          "name": "clusterId",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emr/emr-terminate-cluster:EmrTerminateClusterProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EncryptionConfiguration": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const startQueryExecutionJob = new tasks.AthenaStartQueryExecution(this, 'Athena Start Query', {\n  queryString: sfn.JsonPath.format('select contacts where year={};', sfn.JsonPath.stringAt('$.year')),\n  queryExecutionContext: {\n    databaseName: 'interactions',\n  },\n  resultConfiguration: {\n    encryptionConfiguration: {\n      encryptionOption: tasks.EncryptionOption.S3_MANAGED,\n    },\n    outputLocation: {\n      bucketName: 'mybucket',\n      objectKey: 'myprefix',\n    },\n  },\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n});",
        "see": "https://docs.aws.amazon.com/athena/latest/APIReference/API_EncryptionConfiguration.html",
        "stability": "stable",
        "summary": "Encryption Configuration of the S3 bucket."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EncryptionConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/athena/start-query-execution.ts",
        "line": 234
      },
      "name": "EncryptionConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "EncryptionOption.S3_MANAGED",
            "stability": "stable",
            "summary": "Type of S3 server-side encryption enabled."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/start-query-execution.ts",
            "line": 241
          },
          "name": "encryptionOption",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EncryptionOption"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No KMS key for Encryption Option SSE_S3 and default master key for Encryption Option SSE_KMS and CSE_KMS",
            "stability": "stable",
            "summary": "KMS key ARN or ID."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/start-query-execution.ts",
            "line": 248
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ],
      "symbolId": "lib/athena/start-query-execution:EncryptionConfiguration"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EncryptionOption": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const startQueryExecutionJob = new tasks.AthenaStartQueryExecution(this, 'Athena Start Query', {\n  queryString: sfn.JsonPath.format('select contacts where year={};', sfn.JsonPath.stringAt('$.year')),\n  queryExecutionContext: {\n    databaseName: 'interactions',\n  },\n  resultConfiguration: {\n    encryptionConfiguration: {\n      encryptionOption: tasks.EncryptionOption.S3_MANAGED,\n    },\n    outputLocation: {\n      bucketName: 'mybucket',\n      objectKey: 'myprefix',\n    },\n  },\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n});",
        "see": "https://docs.aws.amazon.com/athena/latest/APIReference/API_EncryptionConfiguration.html#athena-Type-EncryptionConfiguration-EncryptionOption",
        "stability": "stable",
        "summary": "Encryption Options of the S3 bucket."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EncryptionOption",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/athena/start-query-execution.ts",
        "line": 256
      },
      "members": [
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html",
            "stability": "stable",
            "summary": "Server side encryption (SSE) with an Amazon S3-managed key."
          },
          "name": "S3_MANAGED"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html",
            "stability": "stable",
            "summary": "Server-side encryption (SSE) with an AWS KMS key managed by the account owner."
          },
          "name": "KMS"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingClientSideEncryption.html",
            "stability": "stable",
            "summary": "Client-side encryption (CSE) with an AWS KMS key managed by the account owner."
          },
          "name": "CLIENT_SIDE_KMS"
        }
      ],
      "name": "EncryptionOption",
      "symbolId": "lib/athena/start-query-execution:EncryptionOption"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EvaluateExpression": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const convertToSeconds = new tasks.EvaluateExpression(this, 'Convert to seconds', {\n  expression: '$.waitMilliseconds / 1000',\n  resultPath: '$.waitSeconds',\n});\n\nconst createMessage = new tasks.EvaluateExpression(this, 'Create message', {\n  // Note: this is a string inside a string.\n  expression: '`Now waiting ${$.waitSeconds} seconds...`',\n  runtime: lambda.Runtime.NODEJS_14_X,\n  resultPath: '$.message',\n});\n\nconst publishMessage = new tasks.SnsPublish(this, 'Publish message', {\n  topic: new sns.Topic(this, 'cool-topic'),\n  message: sfn.TaskInput.fromJsonPathAt('$.message'),\n  resultPath: '$.sns',\n});\n\nconst wait = new sfn.Wait(this, 'Wait', {\n  time: sfn.WaitTime.secondsPath('$.waitSeconds'),\n});\n\nnew sfn.StateMachine(this, 'StateMachine', {\n  definition: convertToSeconds\n    .next(createMessage)\n    .next(publishMessage)\n    .next(wait),\n});",
        "remarks": "OUTPUT: the output of this task is the evaluated expression.",
        "stability": "stable",
        "summary": "A Step Functions Task to evaluate an expression."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EvaluateExpression",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/evaluate-expression.ts",
          "line": 56
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EvaluateExpressionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/evaluate-expression.ts",
        "line": 50
      },
      "name": "EvaluateExpression",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/evaluate-expression.ts",
            "line": 51
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/evaluate-expression.ts",
            "line": 52
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/evaluate-expression:EvaluateExpression"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EvaluateExpressionProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const convertToSeconds = new tasks.EvaluateExpression(this, 'Convert to seconds', {\n  expression: '$.waitMilliseconds / 1000',\n  resultPath: '$.waitSeconds',\n});\n\nconst createMessage = new tasks.EvaluateExpression(this, 'Create message', {\n  // Note: this is a string inside a string.\n  expression: '`Now waiting ${$.waitSeconds} seconds...`',\n  runtime: lambda.Runtime.NODEJS_14_X,\n  resultPath: '$.message',\n});\n\nconst publishMessage = new tasks.SnsPublish(this, 'Publish message', {\n  topic: new sns.Topic(this, 'cool-topic'),\n  message: sfn.TaskInput.fromJsonPathAt('$.message'),\n  resultPath: '$.sns',\n});\n\nconst wait = new sfn.Wait(this, 'Wait', {\n  time: sfn.WaitTime.secondsPath('$.waitSeconds'),\n});\n\nnew sfn.StateMachine(this, 'StateMachine', {\n  definition: convertToSeconds\n    .next(createMessage)\n    .next(publishMessage)\n    .next(wait),\n});",
        "stability": "stable",
        "summary": "Properties for EvaluateExpression."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EvaluateExpressionProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/evaluate-expression.ts",
        "line": 11
      },
      "name": "EvaluateExpressionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Example value: `'$.a + $.b'`",
            "stability": "stable",
            "summary": "The expression to evaluate. The expression may contain state paths."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/evaluate-expression.ts",
            "line": 17
          },
          "name": "expression",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "lambda.Runtime.NODEJS_14_X",
            "stability": "stable",
            "summary": "The runtime language to use to evaluate the expression."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/evaluate-expression.ts",
            "line": 24
          },
          "name": "runtime",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-lambda.Runtime"
          }
        }
      ],
      "symbolId": "lib/evaluate-expression:EvaluateExpressionProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EventBridgePutEvents": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as events from '@aws-cdk/aws-events';\n\nconst myEventBus = new events.EventBus(this, 'EventBus', {\n  eventBusName: 'MyEventBus1',\n});\n\nnew tasks.EventBridgePutEvents(this, 'Send an event to EventBridge', {\n  entries: [{\n    detail: sfn.TaskInput.fromObject({\n      Message: 'Hello from Step Functions!',\n    }),\n    eventBus: myEventBus,\n    detailType: 'MessageFromStepFunctions',\n    source: 'step.functions',\n  }],\n});",
        "stability": "stable",
        "summary": "A StepFunctions Task to send events to an EventBridge event bus."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EventBridgePutEvents",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/eventbridge/put-events.ts",
          "line": 75
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EventBridgePutEventsProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/eventbridge/put-events.ts",
        "line": 64
      },
      "name": "EventBridgePutEvents",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eventbridge/put-events.ts",
            "line": 70
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eventbridge/put-events.ts",
            "line": 71
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/eventbridge/put-events:EventBridgePutEvents"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EventBridgePutEventsEntry": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/eventbridge/latest/APIReference/API_PutEventsRequestEntry.html",
        "stability": "stable",
        "summary": "An entry to be sent to EventBridge.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as events from '@aws-cdk/aws-events';\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const eventBus: events.EventBus;\ndeclare const taskInput: stepfunctions.TaskInput;\nconst eventBridgePutEventsEntry: stepfunctions_tasks.EventBridgePutEventsEntry = {\n  detail: taskInput,\n  detailType: 'detailType',\n  source: 'source',\n\n  // the properties below are optional\n  eventBus: eventBus,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EventBridgePutEventsEntry",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eventbridge/put-events.ts",
        "line": 13
      },
      "name": "EventBridgePutEventsEntry",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "example": "sfn.TaskInput.fromText('{\"instance-id\": \"i-1234567890abcdef0\", \"state\": \"terminated\"}');\nsfn.TaskInput.fromObject({ Message: 'Hello from Step Functions' });\nsfn.TaskInput.fromJsonPathAt('$.EventDetail');",
            "remarks": "Can either be provided as an object or as a JSON-serialized string",
            "stability": "stable",
            "summary": "The event body."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eventbridge/put-events.ts",
            "line": 24
          },
          "name": "detail",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "For example, events by CloudTrail have detail type \"AWS API Call via CloudTrail\"",
            "see": "https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-events.html",
            "stability": "stable",
            "summary": "Used along with the source field to help identify the fields and values expected in the detail field."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eventbridge/put-events.ts",
            "line": 32
          },
          "name": "detailType",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Example value: `com.example.service`",
            "see": "https://docs.aws.amazon.com/eventbridge/latest/userguide/eb-events.html",
            "stability": "stable",
            "summary": "The service or application that caused this event to be generated."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eventbridge/put-events.ts",
            "line": 48
          },
          "name": "source",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- event is sent to account's default event bus",
            "stability": "stable",
            "summary": "The event bus the entry will be sent to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eventbridge/put-events.ts",
            "line": 39
          },
          "name": "eventBus",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-events.IEventBus"
          }
        }
      ],
      "symbolId": "lib/eventbridge/put-events:EventBridgePutEventsEntry"
    },
    "@aws-cdk/aws-stepfunctions-tasks.EventBridgePutEventsProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as events from '@aws-cdk/aws-events';\n\nconst myEventBus = new events.EventBus(this, 'EventBus', {\n  eventBusName: 'MyEventBus1',\n});\n\nnew tasks.EventBridgePutEvents(this, 'Send an event to EventBridge', {\n  entries: [{\n    detail: sfn.TaskInput.fromObject({\n      Message: 'Hello from Step Functions!',\n    }),\n    eventBus: myEventBus,\n    detailType: 'MessageFromStepFunctions',\n    source: 'step.functions',\n  }],\n});",
        "stability": "stable",
        "summary": "Properties for sending events with PutEvents."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.EventBridgePutEventsProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/eventbridge/put-events.ts",
        "line": 54
      },
      "name": "EventBridgePutEventsProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The entries that will be sent (must be at least 1)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/eventbridge/put-events.ts",
            "line": 58
          },
          "name": "entries",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.EventBridgePutEventsEntry"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/eventbridge/put-events:EventBridgePutEventsProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.GlueDataBrewStartJobRun": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.GlueDataBrewStartJobRun(this, 'Task', {\n  name: 'databrew-job',\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-databrew.html",
        "stability": "stable",
        "summary": "Start a Job run as a Task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.GlueDataBrewStartJobRun",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/databrew/start-job-run.ts",
          "line": 37
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.GlueDataBrewStartJobRunProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/databrew/start-job-run.ts",
        "line": 23
      },
      "name": "GlueDataBrewStartJobRun",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/databrew/start-job-run.ts",
            "line": 30
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/databrew/start-job-run.ts",
            "line": 31
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/databrew/start-job-run:GlueDataBrewStartJobRun"
    },
    "@aws-cdk/aws-stepfunctions-tasks.GlueDataBrewStartJobRunProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.GlueDataBrewStartJobRun(this, 'Task', {\n  name: 'databrew-job',\n});",
        "stability": "stable",
        "summary": "Properties for starting a job run with StartJobRun."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.GlueDataBrewStartJobRunProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/databrew/start-job-run.ts",
        "line": 10
      },
      "name": "GlueDataBrewStartJobRunProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Glue DataBrew Job to run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/databrew/start-job-run.ts",
            "line": 15
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/databrew/start-job-run:GlueDataBrewStartJobRunProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.GlueStartJobRun": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.GlueStartJobRun(this, 'Task', {\n  glueJobName: 'my-glue-job',\n  arguments: sfn.TaskInput.fromObject({\n    key: 'value',\n  }),\n  timeout: Duration.minutes(30),\n  notifyDelayAfter: Duration.minutes(5),\n});",
        "remarks": "OUTPUT: the output of this task is a JobRun structure, for details consult\nhttps://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-jobs-runs.html#aws-glue-api-jobs-runs-JobRun",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-glue.html",
        "stability": "stable",
        "summary": "Starts an AWS Glue job in a Task state."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.GlueStartJobRun",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/glue/start-job-run.ts",
          "line": 66
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.GlueStartJobRunProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/glue/start-job-run.ts",
        "line": 55
      },
      "name": "GlueStartJobRun",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/glue/start-job-run.ts",
            "line": 61
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/glue/start-job-run.ts",
            "line": 62
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/glue/start-job-run:GlueStartJobRun"
    },
    "@aws-cdk/aws-stepfunctions-tasks.GlueStartJobRunProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.GlueStartJobRun(this, 'Task', {\n  glueJobName: 'my-glue-job',\n  arguments: sfn.TaskInput.fromObject({\n    key: 'value',\n  }),\n  timeout: Duration.minutes(30),\n  notifyDelayAfter: Duration.minutes(5),\n});",
        "stability": "stable",
        "summary": "Properties for starting an AWS Glue job as a task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.GlueStartJobRunProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/glue/start-job-run.ts",
        "line": 10
      },
      "name": "GlueStartJobRunProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Glue job name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/glue/start-job-run.ts",
            "line": 15
          },
          "name": "glueJobName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Default arguments set in the job definition",
            "remarks": "For this job run, they replace the default arguments set in the job\ndefinition itself.",
            "stability": "stable",
            "summary": "The job arguments specifically for this run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/glue/start-job-run.ts",
            "line": 25
          },
          "name": "arguments",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Default delay set in the job definition",
            "remarks": "Must be at least 1 minute.",
            "stability": "stable",
            "summary": "After a job run starts, the number of minutes to wait before sending a job run delay notification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/glue/start-job-run.ts",
            "line": 44
          },
          "name": "notifyDelayAfter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Default configuration set in the job definition",
            "remarks": "This must match the Glue API",
            "see": "https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-common.html#aws-glue-api-regex-oneLine",
            "stability": "stable",
            "summary": "The name of the SecurityConfiguration structure to be used with this job run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/glue/start-job-run.ts",
            "line": 35
          },
          "name": "securityConfiguration",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/glue/start-job-run:GlueStartJobRunProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.HttpMethod": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as apigatewayv2 from '@aws-cdk/aws-apigatewayv2';\nconst httpApi = new apigatewayv2.HttpApi(this, 'MyHttpApi');\n\nconst invokeTask = new tasks.CallApiGatewayHttpApiEndpoint(this, 'Call HTTP API', {\n  apiId: httpApi.apiId,\n  apiStack: Stack.of(httpApi),\n  method: tasks.HttpMethod.GET,\n});",
        "stability": "stable",
        "summary": "Http Methods that API Gateway supports."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.HttpMethod",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/apigateway/base-types.ts",
        "line": 4
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Retreive data from a server at the specified resource."
          },
          "name": "GET"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Send data to the API endpoint to create or udpate a resource."
          },
          "name": "POST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Send data to the API endpoint to update or create a resource."
          },
          "name": "PUT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Delete the resource at the specified endpoint."
          },
          "name": "DELETE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Apply partial modifications to the resource."
          },
          "name": "PATCH"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Retreive data from a server at the specified resource without the response body."
          },
          "name": "HEAD"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Return data describing what other methods and operations the server supports."
          },
          "name": "OPTIONS"
        }
      ],
      "name": "HttpMethod",
      "symbolId": "lib/apigateway/base-types:HttpMethod"
    },
    "@aws-cdk/aws-stepfunctions-tasks.HttpMethods": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as eks from '@aws-cdk/aws-eks';\n\nconst myEksCluster = new eks.Cluster(this, 'my sample cluster', {\n  version: eks.KubernetesVersion.V1_18,\n  clusterName: 'myEksCluster',\n});\n\nnew tasks.EksCall(this, 'Call a EKS Endpoint', {\n  cluster: myEksCluster,\n  httpMethod: tasks.HttpMethods.GET,\n  httpPath: '/api/v1/namespaces/default/pods',\n});",
        "stability": "stable",
        "summary": "Method type of a EKS call."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.HttpMethods",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/eks/call.ts",
        "line": 105
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Retrieve data from a server at the specified resource."
          },
          "name": "GET"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Send data to the API endpoint to create or update a resource."
          },
          "name": "POST"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Send data to the API endpoint to update or create a resource."
          },
          "name": "PUT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Delete the resource at the specified endpoint."
          },
          "name": "DELETE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Apply partial modifications to the resource."
          },
          "name": "PATCH"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Retrieve data from a server at the specified resource without the response body."
          },
          "name": "HEAD"
        }
      ],
      "name": "HttpMethods",
      "symbolId": "lib/eks/call:HttpMethods"
    },
    "@aws-cdk/aws-stepfunctions-tasks.IContainerDefinition": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "see": "https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ContainerDefinition.html",
        "stability": "stable",
        "summary": "Configuration of the container used to host the model."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.IContainerDefinition",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 711
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Called when the ContainerDefinition is used by a SageMaker task."
          },
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 715
          },
          "name": "bind",
          "parameters": [
            {
              "name": "task",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.ISageMakerTask"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.ContainerDefinitionConfig"
            }
          }
        }
      ],
      "name": "IContainerDefinition",
      "symbolId": "lib/sagemaker/base-types:IContainerDefinition"
    },
    "@aws-cdk/aws-stepfunctions-tasks.IEcsLaunchTarget": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "see": "https://docs.aws.amazon.com/AmazonECS/latest/developerguide/launch_types.html",
        "stability": "stable",
        "summary": "An Amazon ECS launch type determines the type of infrastructure on which your tasks and services are hosted."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.IEcsLaunchTarget",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/run-task.ts",
        "line": 71
      },
      "methods": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "called when the ECS launch target is configured on RunTask."
          },
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 75
          },
          "name": "bind",
          "parameters": [
            {
              "name": "task",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsRunTask"
              }
            },
            {
              "name": "launchTargetOptions",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.LaunchTargetBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.EcsLaunchTargetConfig"
            }
          }
        }
      ],
      "name": "IEcsLaunchTarget",
      "symbolId": "lib/ecs/run-task:IEcsLaunchTarget"
    },
    "@aws-cdk/aws-stepfunctions-tasks.ISageMakerTask": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "Task to train a machine learning model using Amazon SageMaker."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.ISageMakerTask",
      "interfaces": [
        "@aws-cdk/aws-iam.IGrantable"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 14
      },
      "name": "ISageMakerTask",
      "symbolId": "lib/sagemaker/base-types:ISageMakerTask"
    },
    "@aws-cdk/aws-stepfunctions-tasks.InputMode": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTrainingJob(this, 'TrainSagemaker', {\n  trainingJobName: sfn.JsonPath.stringAt('$.JobName'),\n  algorithmSpecification: {\n    algorithmName: 'BlazingText',\n    trainingInputMode: tasks.InputMode.FILE,\n  },\n  inputDataConfig: [{\n    channelName: 'train',\n    dataSource: {\n      s3DataSource: {\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n        s3Location: tasks.S3Location.fromJsonExpression('$.S3Bucket'),\n      },\n    },\n  }],\n  outputDataConfig: {\n    s3OutputLocation: tasks.S3Location.fromBucket(s3.Bucket.fromBucketName(this, 'Bucket', 'mybucket'), 'myoutputpath'),\n  },\n  resourceConfig: {\n    instanceCount: 1,\n    instanceType: new ec2.InstanceType(sfn.JsonPath.stringAt('$.InstanceType')),\n    volumeSize: Size.gibibytes(50),\n  }, // optional: default is 1 instance of EC2 `M4.XLarge` with `10GB` volume\n  stoppingCondition: {\n    maxRuntime: Duration.hours(2),\n  }, // optional: default is 1 hour\n});",
        "stability": "stable",
        "summary": "Input mode that the algorithm supports."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.InputMode",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 458
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Pipe mode."
          },
          "name": "PIPE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "File mode."
          },
          "name": "FILE"
        }
      ],
      "name": "InputMode",
      "symbolId": "lib/sagemaker/base-types:InputMode"
    },
    "@aws-cdk/aws-stepfunctions-tasks.InvocationType": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "deprecated": "use `LambdaInvocationType`",
        "stability": "deprecated",
        "summary": "Invocation type of a Lambda."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.InvocationType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/lambda/run-lambda-task.ts",
        "line": 112
      },
      "members": [
        {
          "docs": {
            "remarks": "The API response includes the function response and additional data.",
            "stability": "deprecated",
            "summary": "Invoke synchronously."
          },
          "name": "REQUEST_RESPONSE"
        },
        {
          "docs": {
            "remarks": "Send events that fail multiple times to the function's dead-letter queue (if it's configured).\nThe API response only includes a status code.",
            "stability": "deprecated",
            "summary": "Invoke asynchronously."
          },
          "name": "EVENT"
        },
        {
          "docs": {
            "stability": "deprecated",
            "summary": "TValidate parameter values and verify that the user or role has permission to invoke the function."
          },
          "name": "DRY_RUN"
        }
      ],
      "name": "InvocationType",
      "symbolId": "lib/lambda/run-lambda-task:InvocationType"
    },
    "@aws-cdk/aws-stepfunctions-tasks.InvokeActivity": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "deprecated": "use `StepFunctionsInvokeActivity`",
        "remarks": "An Activity can be used directly as a Resource.",
        "stability": "deprecated",
        "summary": "A Step Functions Task to invoke an Activity worker.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const activity: stepfunctions.Activity;\nconst invokeActivity = new stepfunctions_tasks.InvokeActivity(activity, /* all optional props */ {\n  heartbeat: cdk.Duration.minutes(30),\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.InvokeActivity",
      "initializer": {
        "docs": {
          "stability": "deprecated"
        },
        "locationInModule": {
          "filename": "lib/invoke-activity.ts",
          "line": 27
        },
        "parameters": [
          {
            "name": "activity",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions.IActivity"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.InvokeActivityProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.IStepFunctionsTask"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/invoke-activity.ts",
        "line": 26
      },
      "methods": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Called when the task object is used in a workflow."
          },
          "locationInModule": {
            "filename": "lib/invoke-activity.ts",
            "line": 30
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-stepfunctions.IStepFunctionsTask",
          "parameters": [
            {
              "name": "_task",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions.Task"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions.StepFunctionsTaskConfig"
            }
          }
        }
      ],
      "name": "InvokeActivity",
      "symbolId": "lib/invoke-activity:InvokeActivity"
    },
    "@aws-cdk/aws-stepfunctions-tasks.InvokeActivityProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "deprecated": "use `StepFunctionsInvokeActivity` and `StepFunctionsInvokeActivityProps`.",
        "stability": "deprecated",
        "summary": "Properties for FunctionTask.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\nconst invokeActivityProps: stepfunctions_tasks.InvokeActivityProps = {\n  heartbeat: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.InvokeActivityProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/invoke-activity.ts",
        "line": 8
      },
      "name": "InvokeActivityProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "No heart beat timeout",
            "remarks": "If the time between heart beats takes longer than this, a 'Timeout' error is raised.",
            "stability": "deprecated",
            "summary": "Maximum time between heart beats."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/invoke-activity.ts",
            "line": 16
          },
          "name": "heartbeat",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/invoke-activity:InvokeActivityProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.InvokeFunction": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "deprecated": "Use `LambdaInvoke`",
        "remarks": "The Lambda function Arn is defined as Resource in the state machine definition.\n\nOUTPUT: the output of this task is the return value of the Lambda Function.",
        "stability": "deprecated",
        "summary": "A Step Functions Task to invoke a Lambda function.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const function_: lambda.Function;\ndeclare const payload: any;\nconst invokeFunction = new stepfunctions_tasks.InvokeFunction(function_, /* all optional props */ {\n  payload: {\n    payloadKey: payload,\n  },\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.InvokeFunction",
      "initializer": {
        "docs": {
          "stability": "deprecated"
        },
        "locationInModule": {
          "filename": "lib/lambda/invoke-function.ts",
          "line": 31
        },
        "parameters": [
          {
            "name": "lambdaFunction",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.IFunction"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.InvokeFunctionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.IStepFunctionsTask"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda/invoke-function.ts",
        "line": 30
      },
      "methods": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Called when the task object is used in a workflow."
          },
          "locationInModule": {
            "filename": "lib/lambda/invoke-function.ts",
            "line": 34
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-stepfunctions.IStepFunctionsTask",
          "parameters": [
            {
              "name": "_task",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions.Task"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions.StepFunctionsTaskConfig"
            }
          }
        }
      ],
      "name": "InvokeFunction",
      "symbolId": "lib/lambda/invoke-function:InvokeFunction"
    },
    "@aws-cdk/aws-stepfunctions-tasks.InvokeFunctionProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "deprecated": "use `LambdaInvoke`",
        "stability": "deprecated",
        "summary": "Properties for InvokeFunction.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const payload: any;\nconst invokeFunctionProps: stepfunctions_tasks.InvokeFunctionProps = {\n  payload: {\n    payloadKey: payload,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.InvokeFunctionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda/invoke-function.ts",
        "line": 10
      },
      "name": "InvokeFunctionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- The JSON data indicated by the task's InputPath is used as payload",
            "remarks": "This parameter is named as payload to keep consistent with RunLambdaTask class.",
            "stability": "deprecated",
            "summary": "The JSON that you want to provide to your Lambda function as input."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/invoke-function.ts",
            "line": 18
          },
          "name": "payload",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        }
      ],
      "symbolId": "lib/lambda/invoke-function:InvokeFunctionProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.JobDependency": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "An object representing an AWS Batch job dependency.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst jobDependency: stepfunctions_tasks.JobDependency = {\n  jobId: 'jobId',\n  type: 'type',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.JobDependency",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/batch/run-batch-job.ts",
        "line": 67
      },
      "name": "JobDependency",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No jobId",
            "stability": "stable",
            "summary": "The job ID of the AWS Batch job associated with this dependency."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 73
          },
          "name": "jobId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No type",
            "stability": "stable",
            "summary": "The type of the job dependency."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 80
          },
          "name": "type",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/batch/run-batch-job:JobDependency"
    },
    "@aws-cdk/aws-stepfunctions-tasks.JobDriver": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrContainersStartJobRun(this, 'EMR Containers Start Job Run', {\n  virtualCluster: tasks.VirtualClusterInput.fromVirtualClusterId('de92jdei2910fwedz'),\n  releaseLabel: tasks.ReleaseLabel.EMR_6_2_0,\n  jobName: 'EMR-Containers-Job',\n  jobDriver: {\n    sparkSubmitJobDriver: {\n      entryPoint: sfn.TaskInput.fromText('local:///usr/lib/spark/examples/src/main/python/pi.py'),\n    },\n  },\n  applicationConfig: [{\n    classification: tasks.Classification.SPARK_DEFAULTS,\n    properties: {\n      'spark.executor.instances': '1',\n      'spark.executor.memory': '512M',\n    },\n  }],\n});",
        "remarks": "The job driver is used to provide an input for the job that will be run.",
        "stability": "stable",
        "summary": "Specify the driver that the EMR Containers job runs on."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.JobDriver",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emrcontainers/start-job-run.ts",
        "line": 468
      },
      "name": "JobDriver",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "see": "https://docs.aws.amazon.com/emr-on-eks/latest/APIReference/API_SparkSubmitJobDriver.html",
            "stability": "stable",
            "summary": "The job driver parameters specified for spark submit."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 475
          },
          "name": "sparkSubmitJobDriver",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.SparkSubmitJobDriver"
          }
        }
      ],
      "symbolId": "lib/emrcontainers/start-job-run:JobDriver"
    },
    "@aws-cdk/aws-stepfunctions-tasks.LambdaInvocationType": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "declare const fn: lambda.Function;\n\nconst submitJob = new tasks.LambdaInvoke(this, 'Invoke Handler', {\n  lambdaFunction: fn,\n  payload: sfn.TaskInput.fromJsonPathAt('$.input'),\n  invocationType: tasks.LambdaInvocationType.EVENT,\n});",
        "stability": "stable",
        "summary": "Invocation type of a Lambda."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvocationType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/lambda/invoke.ts",
        "line": 169
      },
      "members": [
        {
          "docs": {
            "remarks": "Keep the connection open until the function returns a response or times out.\nThe API response includes the function response and additional data.",
            "stability": "stable",
            "summary": "Invoke the function synchronously."
          },
          "name": "REQUEST_RESPONSE"
        },
        {
          "docs": {
            "remarks": "Send events that fail multiple times to the function's dead-letter queue (if it's configured).\nThe API response only includes a status code.",
            "stability": "stable",
            "summary": "Invoke the function asynchronously."
          },
          "name": "EVENT"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Validate parameter values and verify that the user or role has permission to invoke the function."
          },
          "name": "DRY_RUN"
        }
      ],
      "name": "LambdaInvocationType",
      "symbolId": "lib/lambda/invoke:LambdaInvocationType"
    },
    "@aws-cdk/aws-stepfunctions-tasks.LambdaInvoke": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const orderFn: lambda.Function;\n\nconst submitJob = new tasks.LambdaInvoke(this, 'InvokeOrderProcessor', {\n  lambdaFunction: orderFn,\n  payload: sfn.TaskInput.fromObject({\n    OrderId: sfn.JsonPath.stringAt('$.OrderId'),\n  }),\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-lambda.html",
        "stability": "stable",
        "summary": "Invoke a Lambda function as a Task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvoke",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/lambda/invoke.ts",
          "line": 94
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvokeProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda/invoke.ts",
        "line": 82
      },
      "name": "LambdaInvoke",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/invoke.ts",
            "line": 89
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/invoke.ts",
            "line": 90
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/lambda/invoke:LambdaInvoke"
    },
    "@aws-cdk/aws-stepfunctions-tasks.LambdaInvokeProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "import * as lambda from '@aws-cdk/aws-lambda';\n\ndeclare const orderFn: lambda.Function;\n\nconst submitJob = new tasks.LambdaInvoke(this, 'InvokeOrderProcessor', {\n  lambdaFunction: orderFn,\n  payload: sfn.TaskInput.fromObject({\n    OrderId: sfn.JsonPath.stringAt('$.OrderId'),\n  }),\n});",
        "stability": "stable",
        "summary": "Properties for invoking a Lambda function with LambdaInvoke."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvokeProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda/invoke.ts",
        "line": 11
      },
      "name": "LambdaInvokeProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Lambda function to invoke."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/invoke.ts",
            "line": 16
          },
          "name": "lambdaFunction",
          "type": {
            "fqn": "@aws-cdk/aws-lambda.IFunction"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No context",
            "stability": "stable",
            "summary": "Up to 3583 bytes of base64-encoded data about the invoking client to pass to the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/invoke.ts",
            "line": 38
          },
          "name": "clientContext",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "InvocationType.REQUEST_RESPONSE",
            "stability": "stable",
            "summary": "Invocation type of the Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/invoke.ts",
            "line": 30
          },
          "name": "invocationType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.LambdaInvocationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The state input (JSON path '$')",
            "stability": "stable",
            "summary": "The JSON that will be supplied as input to the Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/invoke.ts",
            "line": 23
          },
          "name": "payload",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "The `payloadResponseOnly` property cannot be used if `integrationPattern`, `invocationType`,\n`clientContext`, or `qualifier` are specified.\nIt always uses the REQUEST_RESPONSE behavior.",
            "stability": "stable",
            "summary": "Invoke the Lambda in a way that only returns the payload response without additional metadata."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/invoke.ts",
            "line": 61
          },
          "name": "payloadResponseOnly",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Version or alias inherent to the `lambdaFunction` object.",
            "deprecated": "pass a Version or Alias object as lambdaFunction instead",
            "remarks": "You only need to supply this if you want the version of the Lambda Function to depend\non data in the state machine state. If not, you can pass the appropriate Alias or Version object\ndirectly as the `lambdaFunction` argument.",
            "stability": "deprecated",
            "summary": "Version or alias to invoke a published version of the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/invoke.ts",
            "line": 50
          },
          "name": "qualifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "remarks": "This handles `Lambda.ServiceException`, `Lambda.AWSLambdaException` and\n`Lambda.SdkClientException` with an interval of 2 seconds, a back-off rate\nof 2 and 6 maximum attempts.",
            "see": "https://docs.aws.amazon.com/step-functions/latest/dg/bp-lambda-serviceexception.html",
            "stability": "stable",
            "summary": "Whether to retry on Lambda service exceptions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/invoke.ts",
            "line": 74
          },
          "name": "retryOnServiceExceptions",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/lambda/invoke:LambdaInvokeProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.LaunchTargetBindOptions": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for binding a launch target to an ECS run job task.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const cluster: ecs.Cluster;\ndeclare const taskDefinition: ecs.TaskDefinition;\nconst launchTargetBindOptions: stepfunctions_tasks.LaunchTargetBindOptions = {\n  taskDefinition: taskDefinition,\n\n  // the properties below are optional\n  cluster: cluster,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.LaunchTargetBindOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/run-task.ts",
        "line": 81
      },
      "name": "LaunchTargetBindOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Task definition to run Docker containers in Amazon ECS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 85
          },
          "name": "taskDefinition",
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ITaskDefinition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No cluster",
            "stability": "stable",
            "summary": "A regional grouping of one or more container instances on which you can run tasks and services."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-task.ts",
            "line": 93
          },
          "name": "cluster",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.ICluster"
          }
        }
      ],
      "symbolId": "lib/ecs/run-task:LaunchTargetBindOptions"
    },
    "@aws-cdk/aws-stepfunctions-tasks.MessageAttribute": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const topic = new sns.Topic(this, 'Topic');\n\n// Use a field from the execution data as message.\nconst task1 = new tasks.SnsPublish(this, 'Publish1', {\n  topic,\n  integrationPattern: sfn.IntegrationPattern.REQUEST_RESPONSE,\n  message: sfn.TaskInput.fromDataAt('$.state.message'),\n  messageAttributes: {\n    place: {\n      value: sfn.JsonPath.stringAt('$.place'),\n    },\n    pic: {\n      // BINARY must be explicitly set\n      dataType: tasks.MessageAttributeDataType.BINARY,\n      value: sfn.JsonPath.stringAt('$.pic'),\n    },\n    people: {\n      value: 4,\n    },\n    handles: {\n      value: ['@kslater', '@jjf', null, '@mfanning'],\n    },\n  },\n});\n\n// Combine a field from the execution data with\n// a literal object.\nconst task2 = new tasks.SnsPublish(this, 'Publish2', {\n  topic,\n  message: sfn.TaskInput.fromObject({\n    field1: 'somedata',\n    field2: sfn.JsonPath.stringAt('$.field2'),\n  }),\n});",
        "see": "https://docs.aws.amazon.com/sns/latest/dg/sns-message-attributes.html",
        "stability": "stable",
        "summary": "A message attribute to add to the SNS message."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.MessageAttribute",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sns/publish.ts",
        "line": 46
      },
      "name": "MessageAttribute",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The value of the attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sns/publish.ts",
            "line": 50
          },
          "name": "value",
          "type": {
            "primitive": "any"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "determined by type inspection if possible, fallback is String",
            "see": "https://docs.aws.amazon.com/sns/latest/dg/sns-message-attributes.html#SNSMessageAttributes.DataTypes",
            "stability": "stable",
            "summary": "The data type for the attribute."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sns/publish.ts",
            "line": 58
          },
          "name": "dataType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.MessageAttributeDataType"
          }
        }
      ],
      "symbolId": "lib/sns/publish:MessageAttribute"
    },
    "@aws-cdk/aws-stepfunctions-tasks.MessageAttributeDataType": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const topic = new sns.Topic(this, 'Topic');\n\n// Use a field from the execution data as message.\nconst task1 = new tasks.SnsPublish(this, 'Publish1', {\n  topic,\n  integrationPattern: sfn.IntegrationPattern.REQUEST_RESPONSE,\n  message: sfn.TaskInput.fromDataAt('$.state.message'),\n  messageAttributes: {\n    place: {\n      value: sfn.JsonPath.stringAt('$.place'),\n    },\n    pic: {\n      // BINARY must be explicitly set\n      dataType: tasks.MessageAttributeDataType.BINARY,\n      value: sfn.JsonPath.stringAt('$.pic'),\n    },\n    people: {\n      value: 4,\n    },\n    handles: {\n      value: ['@kslater', '@jjf', null, '@mfanning'],\n    },\n  },\n});\n\n// Combine a field from the execution data with\n// a literal object.\nconst task2 = new tasks.SnsPublish(this, 'Publish2', {\n  topic,\n  message: sfn.TaskInput.fromObject({\n    field1: 'somedata',\n    field2: sfn.JsonPath.stringAt('$.field2'),\n  }),\n});",
        "see": "https://docs.aws.amazon.com/sns/latest/dg/sns-message-attributes.html#SNSMessageAttributes.DataTypes",
        "stability": "stable",
        "summary": "The data type set for the SNS message attributes."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.MessageAttributeDataType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/sns/publish.ts",
        "line": 13
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Strings are Unicode with UTF-8 binary encoding."
          },
          "name": "STRING"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/sns/latest/dg/sns-message-attributes.html#SNSMessageAttributes.DataTypes",
            "stability": "stable",
            "summary": "An array, formatted as a string."
          },
          "name": "STRING_ARRAY"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/sns/latest/dg/sns-message-attributes.html#SNSMessageAttributes.DataTypes",
            "stability": "stable",
            "summary": "Numbers are positive or negative integers or floating-point numbers."
          },
          "name": "NUMBER"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/sns/latest/dg/sns-message-attributes.html#SNSMessageAttributes.DataTypes",
            "stability": "stable",
            "summary": "Binary type attributes can store any binary data."
          },
          "name": "BINARY"
        }
      ],
      "name": "MessageAttributeDataType",
      "symbolId": "lib/sns/publish:MessageAttributeDataType"
    },
    "@aws-cdk/aws-stepfunctions-tasks.MetricDefinition": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Specifies the metric name and regular expressions used to parse algorithm logs.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst metricDefinition: stepfunctions_tasks.MetricDefinition = {\n  name: 'name',\n  regex: 'regex',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.MetricDefinition",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 258
      },
      "name": "MetricDefinition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 263
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Regular expression that searches the output of a training job and gets the value of the metric."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 268
          },
          "name": "regex",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:MetricDefinition"
    },
    "@aws-cdk/aws-stepfunctions-tasks.Mode": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateModel(this, 'Sagemaker', {\n  modelName: 'MyModel',\n  primaryContainer: new tasks.ContainerDefinition({\n    image: tasks.DockerImage.fromJsonExpression(sfn.JsonPath.stringAt('$.Model.imageName')),\n    mode: tasks.Mode.SINGLE_MODEL,\n    modelS3Location: tasks.S3Location.fromJsonExpression('$.TrainingJob.ModelArtifacts.S3ModelArtifacts'),\n  }),\n});",
        "stability": "stable",
        "summary": "Specifies how many models the container hosts."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.Mode",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 734
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Container hosts a single model."
          },
          "name": "SINGLE_MODEL"
        },
        {
          "docs": {
            "see": "https://docs.aws.amazon.com/sagemaker/latest/dg/multi-model-endpoints.html",
            "stability": "stable",
            "summary": "Container hosts multiple models."
          },
          "name": "MULTI_MODEL"
        }
      ],
      "name": "Mode",
      "symbolId": "lib/sagemaker/base-types:Mode"
    },
    "@aws-cdk/aws-stepfunctions-tasks.ModelClientOptions": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTransformJob(this, 'Batch Inference', {\n  transformJobName: 'MyTransformJob',\n  modelName: 'MyModelName',\n  modelClientOptions: {\n    invocationsMaxRetries: 3,  // default is 0\n    invocationsTimeout: Duration.minutes(5),  // default is 60 seconds\n  },\n  transformInput: {\n    transformDataSource: {\n      s3DataSource: {\n        s3Uri: 's3://inputbucket/train',\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n      }\n    }\n  },\n  transformOutput: {\n    s3OutputPath: 's3://outputbucket/TransformJobOutputPath',\n  },\n  transformResources: {\n    instanceCount: 1,\n    instanceType: ec2.InstanceType.of(ec2.InstanceClass.M4, ec2.InstanceSize.XLARGE),\n  }\n});",
        "stability": "stable",
        "summary": "Configures the timeout and maximum number of retries for processing a transform job invocation."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.ModelClientOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 494
      },
      "name": "ModelClientOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "0",
            "stability": "stable",
            "summary": "The maximum number of retries when invocation requests are failing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 501
          },
          "name": "invocationsMaxRetries",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Duration.minutes(1)",
            "stability": "stable",
            "summary": "The timeout duration for an invocation request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 508
          },
          "name": "invocationsTimeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:ModelClientOptions"
    },
    "@aws-cdk/aws-stepfunctions-tasks.Monitoring": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrContainersStartJobRun(this, 'EMR Containers Start Job Run', {\n  virtualCluster: tasks.VirtualClusterInput.fromVirtualClusterId('de92jdei2910fwedz'),\n  releaseLabel: tasks.ReleaseLabel.EMR_6_2_0,\n  jobDriver: {\n    sparkSubmitJobDriver: {\n      entryPoint: sfn.TaskInput.fromText('local:///usr/lib/spark/examples/src/main/python/pi.py'),\n      sparkSubmitParameters: '--conf spark.executor.instances=2 --conf spark.executor.memory=2G --conf spark.executor.cores=2 --conf spark.driver.cores=1',\n    },\n  },\n  monitoring: {\n    logging: true,\n  },\n});",
        "stability": "stable",
        "summary": "Configuration setting for monitoring."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.Monitoring",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emrcontainers/start-job-run.ts",
        "line": 577
      },
      "name": "Monitoring",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- if `logging` is manually set to `true` and a `logBucket` is not provided, a `logBucket` will be automatically generated`.",
            "remarks": "You can configure your jobs to send log information to Amazon S3.",
            "stability": "stable",
            "summary": "Amazon S3 Bucket for monitoring log publishing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 611
          },
          "name": "logBucket",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.IBucket"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true - true if values are provided for `logGroup` or `logBucket`, false otherwise",
            "remarks": "If set to true, will automatically create a Cloudwatch Log Group and S3 bucket.\nThis will be set to `true` implicitly if values are provided for `logGroup` or `logBucket`.",
            "stability": "stable",
            "summary": "Enable logging for this job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 586
          },
          "name": "logging",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- if `logging` is manually set to `true` and a `logGroup` is not provided, a `logGroup` will be automatically generated`.",
            "remarks": "You can configure your jobs to send log information to CloudWatch Logs.",
            "stability": "stable",
            "summary": "A log group for CloudWatch monitoring."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 595
          },
          "name": "logGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-logs.ILogGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Log streams created in this log group have no default prefix",
            "stability": "stable",
            "summary": "A log stream name prefix for Cloudwatch monitoring."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 602
          },
          "name": "logStreamNamePrefix",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "true",
            "stability": "stable",
            "summary": "Monitoring configurations for the persistent application UI."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 618
          },
          "name": "persistentAppUI",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/emrcontainers/start-job-run:Monitoring"
    },
    "@aws-cdk/aws-stepfunctions-tasks.OutputDataConfig": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTrainingJob(this, 'TrainSagemaker', {\n  trainingJobName: sfn.JsonPath.stringAt('$.JobName'),\n  algorithmSpecification: {\n    algorithmName: 'BlazingText',\n    trainingInputMode: tasks.InputMode.FILE,\n  },\n  inputDataConfig: [{\n    channelName: 'train',\n    dataSource: {\n      s3DataSource: {\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n        s3Location: tasks.S3Location.fromJsonExpression('$.S3Bucket'),\n      },\n    },\n  }],\n  outputDataConfig: {\n    s3OutputLocation: tasks.S3Location.fromBucket(s3.Bucket.fromBucketName(this, 'Bucket', 'mybucket'), 'myoutputpath'),\n  },\n  resourceConfig: {\n    instanceCount: 1,\n    instanceType: new ec2.InstanceType(sfn.JsonPath.stringAt('$.InstanceType')),\n    volumeSize: Size.gibibytes(50),\n  }, // optional: default is 1 instance of EC2 `M4.XLarge` with `10GB` volume\n  stoppingCondition: {\n    maxRuntime: Duration.hours(2),\n  }, // optional: default is 1 hour\n});",
        "stability": "stable",
        "summary": "Configures the S3 bucket where SageMaker will save the result of model training."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.OutputDataConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 165
      },
      "name": "OutputDataConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Identifies the S3 path where you want Amazon SageMaker to store the model artifacts."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 176
          },
          "name": "s3OutputLocation",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.S3Location"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Amazon SageMaker uses the default KMS key for Amazon S3 for your role's account",
            "stability": "stable",
            "summary": "Optional KMS encryption key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 171
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:OutputDataConfig"
    },
    "@aws-cdk/aws-stepfunctions-tasks.ProductionVariant": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "see": "https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ProductionVariant.html",
        "stability": "stable",
        "summary": "Identifies a model that you want to host and the resources to deploy for hosting it.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const acceleratorType: stepfunctions_tasks.AcceleratorType;\ndeclare const instanceType: ec2.InstanceType;\nconst productionVariant: stepfunctions_tasks.ProductionVariant = {\n  instanceType: instanceType,\n  modelName: 'modelName',\n  variantName: 'variantName',\n\n  // the properties below are optional\n  acceleratorType: acceleratorType,\n  initialInstanceCount: 123,\n  initialVariantWeight: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.ProductionVariant",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 752
      },
      "name": "ProductionVariant",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The ML compute instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 774
          },
          "name": "instanceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "This is the name that you specified when creating the model.",
            "stability": "stable",
            "summary": "The name of the model that you want to host."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 782
          },
          "name": "modelName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the production variant."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 778
          },
          "name": "variantName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The size of the Elastic Inference (EI) instance to use for the production variant."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 758
          },
          "name": "acceleratorType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.AcceleratorType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 1",
            "stability": "stable",
            "summary": "Number of instances to launch initially."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 764
          },
          "name": "initialInstanceCount",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 1.0",
            "stability": "stable",
            "summary": "Determines initial traffic distribution among all of the models that you specify in the endpoint configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 770
          },
          "name": "initialVariantWeight",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:ProductionVariant"
    },
    "@aws-cdk/aws-stepfunctions-tasks.PublishToTopic": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "deprecated": "Use `SnsPublish`",
        "remarks": "A Function can be used directly as a Resource, but this class mirrors\nintegration with other AWS services via a specific class instance.",
        "stability": "deprecated",
        "summary": "A Step Functions Task to publish messages to SNS topic.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sns from '@aws-cdk/aws-sns';\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const taskInput: stepfunctions.TaskInput;\ndeclare const topic: sns.Topic;\nconst publishToTopic = new stepfunctions_tasks.PublishToTopic(topic, {\n  message: taskInput,\n\n  // the properties below are optional\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  messagePerSubscriptionType: false,\n  subject: 'subject',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.PublishToTopic",
      "initializer": {
        "docs": {
          "stability": "deprecated"
        },
        "locationInModule": {
          "filename": "lib/sns/publish-to-topic.ts",
          "line": 60
        },
        "parameters": [
          {
            "name": "topic",
            "type": {
              "fqn": "@aws-cdk/aws-sns.ITopic"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.PublishToTopicProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.IStepFunctionsTask"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/sns/publish-to-topic.ts",
        "line": 56
      },
      "methods": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Called when the task object is used in a workflow."
          },
          "locationInModule": {
            "filename": "lib/sns/publish-to-topic.ts",
            "line": 79
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-stepfunctions.IStepFunctionsTask",
          "parameters": [
            {
              "name": "_task",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions.Task"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions.StepFunctionsTaskConfig"
            }
          }
        }
      ],
      "name": "PublishToTopic",
      "symbolId": "lib/sns/publish-to-topic:PublishToTopic"
    },
    "@aws-cdk/aws-stepfunctions-tasks.PublishToTopicProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "deprecated": "Use `SnsPublish`",
        "stability": "deprecated",
        "summary": "Properties for PublishTask.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const taskInput: stepfunctions.TaskInput;\nconst publishToTopicProps: stepfunctions_tasks.PublishToTopicProps = {\n  message: taskInput,\n\n  // the properties below are optional\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  messagePerSubscriptionType: false,\n  subject: 'subject',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.PublishToTopicProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sns/publish-to-topic.ts",
        "line": 11
      },
      "name": "PublishToTopicProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The text message to send to the topic."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sns/publish-to-topic.ts",
            "line": 15
          },
          "name": "message",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "FIRE_AND_FORGET",
            "remarks": "The valid value is either FIRE_AND_FORGET or WAIT_FOR_TASK_TOKEN.",
            "stability": "deprecated",
            "summary": "The service integration pattern indicates different ways to call Publish to SNS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sns/publish-to-topic.ts",
            "line": 45
          },
          "name": "integrationPattern",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.ServiceIntegrationPattern"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "If this is set to true, message must be a JSON object with a\n\"default\" key and a key for every subscription type (such as \"sqs\",\n\"email\", etc.) The values are strings representing the messages\nbeing sent to every subscription type.",
            "see": "https://docs.aws.amazon.com/sns/latest/api/API_Publish.html#API_Publish_RequestParameters",
            "stability": "deprecated",
            "summary": "If true, send a different message to every subscription type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sns/publish-to-topic.ts",
            "line": 28
          },
          "name": "messagePerSubscriptionType",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No subject",
            "remarks": "Also included, if present, in the standard JSON messages delivered to other endpoints.",
            "stability": "deprecated",
            "summary": "Used as the \"Subject\" line when the message is delivered to email endpoints."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sns/publish-to-topic.ts",
            "line": 36
          },
          "name": "subject",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/sns/publish-to-topic:PublishToTopicProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.QueryExecutionContext": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const startQueryExecutionJob = new tasks.AthenaStartQueryExecution(this, 'Athena Start Query', {\n  queryString: sfn.JsonPath.format('select contacts where year={};', sfn.JsonPath.stringAt('$.year')),\n  queryExecutionContext: {\n    databaseName: 'interactions',\n  },\n  resultConfiguration: {\n    encryptionConfiguration: {\n      encryptionOption: tasks.EncryptionOption.S3_MANAGED,\n    },\n    outputLocation: {\n      bucketName: 'mybucket',\n      objectKey: 'myprefix',\n    },\n  },\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n});",
        "see": "https://docs.aws.amazon.com/athena/latest/APIReference/API_QueryExecutionContext.html",
        "stability": "stable",
        "summary": "Database and data catalog context in which the query execution occurs."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.QueryExecutionContext",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/athena/start-query-execution.ts",
        "line": 284
      },
      "name": "QueryExecutionContext",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No catalog",
            "stability": "stable",
            "summary": "Name of catalog used in query execution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/start-query-execution.ts",
            "line": 291
          },
          "name": "catalogName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No database",
            "stability": "stable",
            "summary": "Name of database used in query execution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/start-query-execution.ts",
            "line": 298
          },
          "name": "databaseName",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/athena/start-query-execution:QueryExecutionContext"
    },
    "@aws-cdk/aws-stepfunctions-tasks.RecordWrapperType": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "Define the format of the input data."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.RecordWrapperType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 442
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "None record wrapper type."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "RecordIO record wrapper type."
          },
          "name": "RECORD_IO"
        }
      ],
      "name": "RecordWrapperType",
      "symbolId": "lib/sagemaker/base-types:RecordWrapperType"
    },
    "@aws-cdk/aws-stepfunctions-tasks.ReleaseLabel": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrContainersStartJobRun(this, 'EMR Containers Start Job Run', {\n  virtualCluster: tasks.VirtualClusterInput.fromVirtualClusterId('de92jdei2910fwedz'),\n  releaseLabel: tasks.ReleaseLabel.EMR_6_2_0,\n  jobName: 'EMR-Containers-Job',\n  jobDriver: {\n    sparkSubmitJobDriver: {\n      entryPoint: sfn.TaskInput.fromText('local:///usr/lib/spark/examples/src/main/python/pi.py'),\n    },\n  },\n  applicationConfig: [{\n    classification: tasks.Classification.SPARK_DEFAULTS,\n    properties: {\n      'spark.executor.instances': '1',\n      'spark.executor.memory': '512M',\n    },\n  }],\n});",
        "remarks": "Can be extended to include new EMR releases\n\nFor example, `new ReleaseLabel('emr-x.xx.x-latest');`",
        "stability": "stable",
        "summary": "The Amazon EMR release version to use for the job run."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.ReleaseLabel",
      "initializer": {
        "docs": {
          "stability": "stable",
          "summary": "Initializes the label string."
        },
        "locationInModule": {
          "filename": "lib/emrcontainers/start-job-run.ts",
          "line": 654
        },
        "parameters": [
          {
            "docs": {
              "remarks": "'emr-x.x.x-latest'",
              "summary": "A literal string that contains the release-version ex."
            },
            "name": "label",
            "type": {
              "primitive": "string"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emrcontainers/start-job-run.ts",
        "line": 628
      },
      "name": "ReleaseLabel",
      "properties": [
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "EMR Release version 5.32.0."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 632
          },
          "name": "EMR_5_32_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.ReleaseLabel"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "EMR Release version 5.33.0."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 637
          },
          "name": "EMR_5_33_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.ReleaseLabel"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "EMR Release version 6.2.0."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 642
          },
          "name": "EMR_6_2_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.ReleaseLabel"
          }
        },
        {
          "const": true,
          "docs": {
            "stability": "stable",
            "summary": "EMR Release version 6.3.0."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 647
          },
          "name": "EMR_6_3_0",
          "static": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.ReleaseLabel"
          }
        },
        {
          "docs": {
            "remarks": "'emr-x.x.x-latest'",
            "stability": "stable",
            "summary": "A literal string that contains the release-version ex."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 654
          },
          "name": "label",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emrcontainers/start-job-run:ReleaseLabel"
    },
    "@aws-cdk/aws-stepfunctions-tasks.ResourceConfig": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTrainingJob(this, 'TrainSagemaker', {\n  trainingJobName: sfn.JsonPath.stringAt('$.JobName'),\n  algorithmSpecification: {\n    algorithmName: 'BlazingText',\n    trainingInputMode: tasks.InputMode.FILE,\n  },\n  inputDataConfig: [{\n    channelName: 'train',\n    dataSource: {\n      s3DataSource: {\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n        s3Location: tasks.S3Location.fromJsonExpression('$.S3Bucket'),\n      },\n    },\n  }],\n  outputDataConfig: {\n    s3OutputLocation: tasks.S3Location.fromBucket(s3.Bucket.fromBucketName(this, 'Bucket', 'mybucket'), 'myoutputpath'),\n  },\n  resourceConfig: {\n    instanceCount: 1,\n    instanceType: new ec2.InstanceType(sfn.JsonPath.stringAt('$.InstanceType')),\n    volumeSize: Size.gibibytes(50),\n  }, // optional: default is 1 instance of EC2 `M4.XLarge` with `10GB` volume\n  stoppingCondition: {\n    maxRuntime: Duration.hours(2),\n  }, // optional: default is 1 hour\n});",
        "stability": "stable",
        "summary": "Specifies the resources, ML compute instances, and ML storage volumes to deploy for model training."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.ResourceConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 197
      },
      "name": "ResourceConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "1 instance.",
            "stability": "stable",
            "summary": "The number of ML compute instances to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 204
          },
          "name": "instanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "ec2.InstanceType(ec2.InstanceClass.M4, ec2.InstanceType.XLARGE)",
            "remarks": "To provide an instance type from the task input, supply an instance type in the following way\nwhere the value in the task input is an EC2 instance type prepended with \"ml.\":\n\n```ts\nnew ec2.InstanceType(sfn.JsonPath.stringAt('$.path.to.instanceType'));\n```",
            "see": "https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_ResourceConfig.html#sagemaker-Type-ResourceConfig-InstanceType",
            "stability": "stable",
            "summary": "ML compute instance type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 219
          },
          "name": "instanceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "10 GB EBS volume.",
            "stability": "stable",
            "summary": "Size of the ML storage volume that you want to provision."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 233
          },
          "name": "volumeSize",
          "type": {
            "fqn": "@aws-cdk/core.Size"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Amazon SageMaker uses the default KMS key for Amazon S3 for your role's account",
            "stability": "stable",
            "summary": "KMS key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s) that run the training job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 226
          },
          "name": "volumeEncryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:ResourceConfig"
    },
    "@aws-cdk/aws-stepfunctions-tasks.ResultConfiguration": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const startQueryExecutionJob = new tasks.AthenaStartQueryExecution(this, 'Athena Start Query', {\n  queryString: sfn.JsonPath.format('select contacts where year={};', sfn.JsonPath.stringAt('$.year')),\n  queryExecutionContext: {\n    databaseName: 'interactions',\n  },\n  resultConfiguration: {\n    encryptionConfiguration: {\n      encryptionOption: tasks.EncryptionOption.S3_MANAGED,\n    },\n    outputLocation: {\n      bucketName: 'mybucket',\n      objectKey: 'myprefix',\n    },\n  },\n  integrationPattern: sfn.IntegrationPattern.RUN_JOB,\n});",
        "see": "https://docs.aws.amazon.com/athena/latest/APIReference/API_ResultConfiguration.html",
        "stability": "stable",
        "summary": "Location of query result along with S3 bucket configuration."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.ResultConfiguration",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/athena/start-query-execution.ts",
        "line": 210
      },
      "name": "ResultConfiguration",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- SSE_S3 encrpytion is enabled with default encryption key",
            "stability": "stable",
            "summary": "Encryption option used if enabled in S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/start-query-execution.ts",
            "line": 226
          },
          "name": "encryptionConfiguration",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.EncryptionConfiguration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Query Result Location set in Athena settings for this workgroup",
            "remarks": "Example value: `s3://query-results-bucket/folder/`",
            "stability": "stable",
            "summary": "S3 path of query results."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/athena/start-query-execution.ts",
            "line": 219
          },
          "name": "outputLocation",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-s3.Location"
          }
        }
      ],
      "symbolId": "lib/athena/start-query-execution:ResultConfiguration"
    },
    "@aws-cdk/aws-stepfunctions-tasks.RunBatchJob": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "deprecated": "use `BatchSubmitJob`",
        "stability": "deprecated",
        "summary": "A Step Functions Task to run AWS Batch.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const instanceType: ec2.InstanceType;\ndeclare const payload: any;\nconst runBatchJob = new stepfunctions_tasks.RunBatchJob({\n  jobDefinitionArn: 'jobDefinitionArn',\n  jobName: 'jobName',\n  jobQueueArn: 'jobQueueArn',\n\n  // the properties below are optional\n  arraySize: 123,\n  attempts: 123,\n  containerOverrides: {\n    command: ['command'],\n    environment: {\n      environmentKey: 'environment',\n    },\n    gpuCount: 123,\n    instanceType: instanceType,\n    memory: 123,\n    vcpus: 123,\n  },\n  dependsOn: [{\n    jobId: 'jobId',\n    type: 'type',\n  }],\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  payload: {\n    payloadKey: payload,\n  },\n  timeout: cdk.Duration.minutes(30),\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.RunBatchJob",
      "initializer": {
        "docs": {
          "stability": "deprecated"
        },
        "locationInModule": {
          "filename": "lib/batch/run-batch-job.ts",
          "line": 180
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.RunBatchJobProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.IStepFunctionsTask"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/batch/run-batch-job.ts",
        "line": 177
      },
      "methods": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Called when the task object is used in a workflow."
          },
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 235
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-stepfunctions.IStepFunctionsTask",
          "parameters": [
            {
              "name": "_task",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions.Task"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions.StepFunctionsTaskConfig"
            }
          }
        }
      ],
      "name": "RunBatchJob",
      "symbolId": "lib/batch/run-batch-job:RunBatchJob"
    },
    "@aws-cdk/aws-stepfunctions-tasks.RunBatchJobProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "deprecated": "use `BatchSubmitJob`",
        "stability": "deprecated",
        "summary": "Properties for RunBatchJob.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const instanceType: ec2.InstanceType;\ndeclare const payload: any;\nconst runBatchJobProps: stepfunctions_tasks.RunBatchJobProps = {\n  jobDefinitionArn: 'jobDefinitionArn',\n  jobName: 'jobName',\n  jobQueueArn: 'jobQueueArn',\n\n  // the properties below are optional\n  arraySize: 123,\n  attempts: 123,\n  containerOverrides: {\n    command: ['command'],\n    environment: {\n      environmentKey: 'environment',\n    },\n    gpuCount: 123,\n    instanceType: instanceType,\n    memory: 123,\n    vcpus: 123,\n  },\n  dependsOn: [{\n    jobId: 'jobId',\n    type: 'type',\n  }],\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  payload: {\n    payloadKey: payload,\n  },\n  timeout: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.RunBatchJobProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/batch/run-batch-job.ts",
        "line": 88
      },
      "name": "RunBatchJobProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The arn of the job definition used by this job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 92
          },
          "name": "jobDefinitionArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The first character must be alphanumeric, and up to 128 letters (uppercase and lowercase),\nnumbers, hyphens, and underscores are allowed.",
            "stability": "deprecated",
            "summary": "The name of the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 99
          },
          "name": "jobName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The arn of the job queue into which the job is submitted."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 104
          },
          "name": "jobQueueArn",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No array size",
            "remarks": "If you specify array properties for a job, it becomes an array job.\nFor more information, see Array Jobs in the AWS Batch User Guide.",
            "stability": "deprecated",
            "summary": "The array size can be between 2 and 10,000."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 113
          },
          "name": "arraySize",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 1",
            "remarks": "You may specify between 1 and 10 attempts.\nIf the value of attempts is greater than one,\nthe job is retried on failure the same number of attempts as the value.",
            "stability": "deprecated",
            "summary": "The number of times to move a job to the RUNNABLE status."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 150
          },
          "name": "attempts",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No container overrides",
            "see": "https://docs.aws.amazon.com/batch/latest/APIReference/API_SubmitJob.html#Batch-SubmitJob-request-containerOverrides",
            "stability": "deprecated",
            "summary": "A list of container overrides in JSON format that specify the name of a container in the specified job definition and the overrides it should receive."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 123
          },
          "name": "containerOverrides",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.ContainerOverrides"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No dependencies",
            "remarks": "A job can depend upon a maximum of 20 jobs.",
            "see": "https://docs.aws.amazon.com/batch/latest/APIReference/API_SubmitJob.html#Batch-SubmitJob-request-dependsOn",
            "stability": "deprecated",
            "summary": "A list of dependencies for the job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 133
          },
          "name": "dependsOn",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.JobDependency"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "SYNC",
            "remarks": "The valid value is either FIRE_AND_FORGET or SYNC.",
            "stability": "deprecated",
            "summary": "The service integration pattern indicates different ways to call TerminateCluster."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 169
          },
          "name": "integrationPattern",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.ServiceIntegrationPattern"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No parameters are passed",
            "stability": "deprecated",
            "summary": "The payload to be passed as parametrs to the batch job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 140
          },
          "name": "payload",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No timeout",
            "remarks": "The minimum value for the timeout is 60 seconds.",
            "see": "https://docs.aws.amazon.com/batch/latest/APIReference/API_SubmitJob.html#Batch-SubmitJob-request-timeout",
            "stability": "deprecated",
            "summary": "The timeout configuration for this SubmitJob operation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/batch/run-batch-job.ts",
            "line": 160
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/batch/run-batch-job:RunBatchJobProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.RunEcsEc2Task": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions-tasks.EcsRunTaskBase",
      "docs": {
        "deprecated": "- replaced by `EcsRunTask`",
        "stability": "deprecated",
        "summary": "Run an ECS/EC2 Task in a StepFunctions workflow.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const cluster: ecs.Cluster;\ndeclare const containerDefinition: ecs.ContainerDefinition;\ndeclare const placementConstraint: ecs.PlacementConstraint;\ndeclare const placementStrategy: ecs.PlacementStrategy;\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const taskDefinition: ecs.TaskDefinition;\nconst runEcsEc2Task = new stepfunctions_tasks.RunEcsEc2Task({\n  cluster: cluster,\n  taskDefinition: taskDefinition,\n\n  // the properties below are optional\n  containerOverrides: [{\n    containerDefinition: containerDefinition,\n\n    // the properties below are optional\n    command: ['command'],\n    cpu: 123,\n    environment: [{\n      name: 'name',\n      value: 'value',\n    }],\n    memoryLimit: 123,\n    memoryReservation: 123,\n  }],\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  placementConstraints: [placementConstraint],\n  placementStrategies: [placementStrategy],\n  securityGroup: securityGroup,\n  subnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.RunEcsEc2Task",
      "initializer": {
        "docs": {
          "stability": "deprecated"
        },
        "locationInModule": {
          "filename": "lib/ecs/run-ecs-ec2-task.ts",
          "line": 49
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.RunEcsEc2TaskProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs/run-ecs-ec2-task.ts",
        "line": 48
      },
      "name": "RunEcsEc2Task",
      "symbolId": "lib/ecs/run-ecs-ec2-task:RunEcsEc2Task"
    },
    "@aws-cdk/aws-stepfunctions-tasks.RunEcsEc2TaskProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "deprecated": "use `EcsRunTask` and `EcsRunTaskProps`",
        "stability": "deprecated",
        "summary": "Properties to run an ECS task on EC2 in StepFunctionsan ECS.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const cluster: ecs.Cluster;\ndeclare const containerDefinition: ecs.ContainerDefinition;\ndeclare const placementConstraint: ecs.PlacementConstraint;\ndeclare const placementStrategy: ecs.PlacementStrategy;\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const taskDefinition: ecs.TaskDefinition;\nconst runEcsEc2TaskProps: stepfunctions_tasks.RunEcsEc2TaskProps = {\n  cluster: cluster,\n  taskDefinition: taskDefinition,\n\n  // the properties below are optional\n  containerOverrides: [{\n    containerDefinition: containerDefinition,\n\n    // the properties below are optional\n    command: ['command'],\n    cpu: 123,\n    environment: [{\n      name: 'name',\n      value: 'value',\n    }],\n    memoryLimit: 123,\n    memoryReservation: 123,\n  }],\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  placementConstraints: [placementConstraint],\n  placementStrategies: [placementStrategy],\n  securityGroup: securityGroup,\n  subnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.RunEcsEc2TaskProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions-tasks.CommonEcsRunTaskProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/run-ecs-ec2-task.ts",
        "line": 9
      },
      "name": "RunEcsEc2TaskProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "No constraints",
            "stability": "deprecated",
            "summary": "Placement constraints."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-ec2-task.ts",
            "line": 33
          },
          "name": "placementConstraints",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.PlacementConstraint"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No strategies",
            "stability": "deprecated",
            "summary": "Placement strategies."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-ec2-task.ts",
            "line": 40
          },
          "name": "placementStrategies",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-ecs.PlacementStrategy"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "A new security group is created",
            "remarks": "(Only applicable in case the TaskDefinition is configured for AwsVpc networking)",
            "stability": "deprecated",
            "summary": "Existing security group to use for the task's ENIs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-ec2-task.ts",
            "line": 26
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Private subnets",
            "remarks": "(Only applicable in case the TaskDefinition is configured for AwsVpc networking)",
            "stability": "deprecated",
            "summary": "In what subnets to place the task's ENIs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-ec2-task.ts",
            "line": 17
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/ecs/run-ecs-ec2-task:RunEcsEc2TaskProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.RunEcsFargateTask": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions-tasks.EcsRunTaskBase",
      "docs": {
        "deprecated": "replaced by `EcsRunTask`",
        "stability": "deprecated",
        "summary": "Start a service on an ECS cluster.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const cluster: ecs.Cluster;\ndeclare const containerDefinition: ecs.ContainerDefinition;\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const taskDefinition: ecs.TaskDefinition;\nconst runEcsFargateTask = new stepfunctions_tasks.RunEcsFargateTask({\n  cluster: cluster,\n  taskDefinition: taskDefinition,\n\n  // the properties below are optional\n  assignPublicIp: false,\n  containerOverrides: [{\n    containerDefinition: containerDefinition,\n\n    // the properties below are optional\n    command: ['command'],\n    cpu: 123,\n    environment: [{\n      name: 'name',\n      value: 'value',\n    }],\n    memoryLimit: 123,\n    memoryReservation: 123,\n  }],\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  platformVersion: ecs.FargatePlatformVersion.LATEST,\n  securityGroup: securityGroup,\n  subnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.RunEcsFargateTask",
      "initializer": {
        "docs": {
          "stability": "deprecated"
        },
        "locationInModule": {
          "filename": "lib/ecs/run-ecs-fargate-task.ts",
          "line": 48
        },
        "parameters": [
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.RunEcsFargateTaskProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/ecs/run-ecs-fargate-task.ts",
        "line": 47
      },
      "name": "RunEcsFargateTask",
      "symbolId": "lib/ecs/run-ecs-fargate-task:RunEcsFargateTask"
    },
    "@aws-cdk/aws-stepfunctions-tasks.RunEcsFargateTaskProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "deprecated": "replaced by `EcsRunTask` and `EcsRunTaskProps`",
        "stability": "deprecated",
        "summary": "Properties to define an ECS service.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as ecs from '@aws-cdk/aws-ecs';\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const cluster: ecs.Cluster;\ndeclare const containerDefinition: ecs.ContainerDefinition;\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const taskDefinition: ecs.TaskDefinition;\nconst runEcsFargateTaskProps: stepfunctions_tasks.RunEcsFargateTaskProps = {\n  cluster: cluster,\n  taskDefinition: taskDefinition,\n\n  // the properties below are optional\n  assignPublicIp: false,\n  containerOverrides: [{\n    containerDefinition: containerDefinition,\n\n    // the properties below are optional\n    command: ['command'],\n    cpu: 123,\n    environment: [{\n      name: 'name',\n      value: 'value',\n    }],\n    memoryLimit: 123,\n    memoryReservation: 123,\n  }],\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  platformVersion: ecs.FargatePlatformVersion.LATEST,\n  securityGroup: securityGroup,\n  subnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.RunEcsFargateTaskProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions-tasks.CommonEcsRunTaskProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/run-ecs-fargate-task.ts",
        "line": 9
      },
      "name": "RunEcsFargateTaskProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "deprecated",
            "summary": "Assign public IP addresses to each task."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-fargate-task.ts",
            "line": 15
          },
          "name": "assignPublicIp",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Latest",
            "remarks": "Unless you have specific compatibility requirements, you don't need to\nspecify this.",
            "stability": "deprecated",
            "summary": "Fargate platform version to run this service on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-fargate-task.ts",
            "line": 39
          },
          "name": "platformVersion",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ecs.FargatePlatformVersion"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "A new security group is created",
            "stability": "deprecated",
            "summary": "Existing security group to use for the tasks."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-fargate-task.ts",
            "line": 29
          },
          "name": "securityGroup",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Private subnet if assignPublicIp, public subnets otherwise",
            "stability": "deprecated",
            "summary": "In what subnets to place the task's ENIs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-fargate-task.ts",
            "line": 22
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/ecs/run-ecs-fargate-task:RunEcsFargateTaskProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.RunGlueJobTask": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "deprecated": "use `GlueStartJobRun`",
        "remarks": "OUTPUT: the output of this task is a JobRun structure, for details consult\nhttps://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-jobs-runs.html#aws-glue-api-jobs-runs-JobRun",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-glue.html",
        "stability": "deprecated",
        "summary": "Invoke a Glue job as a Task.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\nconst runGlueJobTask = new stepfunctions_tasks.RunGlueJobTask('glueJobName', /* all optional props */ {\n  arguments: {\n    argumentsKey: 'arguments',\n  },\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  notifyDelayAfter: cdk.Duration.minutes(30),\n  securityConfiguration: 'securityConfiguration',\n  timeout: cdk.Duration.minutes(30),\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.RunGlueJobTask",
      "initializer": {
        "docs": {
          "stability": "deprecated"
        },
        "locationInModule": {
          "filename": "lib/glue/run-glue-job-task.ts",
          "line": 74
        },
        "parameters": [
          {
            "name": "glueJobName",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.RunGlueJobTaskProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.IStepFunctionsTask"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/glue/run-glue-job-task.ts",
        "line": 71
      },
      "methods": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Called when the task object is used in a workflow."
          },
          "locationInModule": {
            "filename": "lib/glue/run-glue-job-task.ts",
            "line": 87
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-stepfunctions.IStepFunctionsTask",
          "parameters": [
            {
              "name": "task",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions.Task"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions.StepFunctionsTaskConfig"
            }
          }
        }
      ],
      "name": "RunGlueJobTask",
      "symbolId": "lib/glue/run-glue-job-task:RunGlueJobTask"
    },
    "@aws-cdk/aws-stepfunctions-tasks.RunGlueJobTaskProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "deprecated": "use `GlueStartJobRun`",
        "stability": "deprecated",
        "summary": "Properties for RunGlueJobTask.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\nconst runGlueJobTaskProps: stepfunctions_tasks.RunGlueJobTaskProps = {\n  arguments: {\n    argumentsKey: 'arguments',\n  },\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  notifyDelayAfter: cdk.Duration.minutes(30),\n  securityConfiguration: 'securityConfiguration',\n  timeout: cdk.Duration.minutes(30),\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.RunGlueJobTaskProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/glue/run-glue-job-task.ts",
        "line": 11
      },
      "name": "RunGlueJobTaskProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- Default arguments set in the job definition",
            "remarks": "For this job run, they replace the default arguments set in the job definition itself.",
            "stability": "deprecated",
            "summary": "The job arguments specifically for this run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/glue/run-glue-job-task.ts",
            "line": 29
          },
          "name": "arguments",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "FIRE_AND_FORGET",
            "remarks": "The valid value for Glue is either FIRE_AND_FORGET or SYNC.",
            "stability": "deprecated",
            "summary": "The service integration pattern indicates different ways to start the Glue job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/glue/run-glue-job-task.ts",
            "line": 20
          },
          "name": "integrationPattern",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.ServiceIntegrationPattern"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Default delay set in the job definition",
            "remarks": "Must be at least 1 minute.",
            "stability": "deprecated",
            "summary": "After a job run starts, the number of minutes to wait before sending a job run delay notification."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/glue/run-glue-job-task.ts",
            "line": 58
          },
          "name": "notifyDelayAfter",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Default configuration set in the job definition",
            "remarks": "This must match the Glue API\n[single-line string pattern](https://docs.aws.amazon.com/glue/latest/dg/aws-glue-api-common.html#aws-glue-api-regex-oneLine).",
            "stability": "deprecated",
            "summary": "The name of the SecurityConfiguration structure to be used with this job run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/glue/run-glue-job-task.ts",
            "line": 49
          },
          "name": "securityConfiguration",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Default timeout set in the job definition",
            "remarks": "This is the maximum time that a job run can consume resources before it is terminated and enters TIMEOUT status.\nMust be at least 1 minute.",
            "stability": "deprecated",
            "summary": "The job run timeout."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/glue/run-glue-job-task.ts",
            "line": 39
          },
          "name": "timeout",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/glue/run-glue-job-task:RunGlueJobTaskProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.RunLambdaTask": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "deprecated": "Use `LambdaInvoke`",
        "remarks": "OUTPUT: the output of this task is either the return value of Lambda's\nInvoke call, or whatever the Lambda Function posted back using\n`SendTaskSuccess/SendTaskFailure` in `waitForTaskToken` mode.",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-lambda.html",
        "stability": "deprecated",
        "summary": "Invoke a Lambda function as a Task.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as lambda from '@aws-cdk/aws-lambda';\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const function_: lambda.Function;\ndeclare const taskInput: stepfunctions.TaskInput;\nconst runLambdaTask = new stepfunctions_tasks.RunLambdaTask(function_, /* all optional props */ {\n  clientContext: 'clientContext',\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  invocationType: stepfunctions_tasks.InvocationType.REQUEST_RESPONSE,\n  payload: taskInput,\n  qualifier: 'qualifier',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.RunLambdaTask",
      "initializer": {
        "docs": {
          "stability": "deprecated"
        },
        "locationInModule": {
          "filename": "lib/lambda/run-lambda-task.ts",
          "line": 69
        },
        "parameters": [
          {
            "name": "lambdaFunction",
            "type": {
              "fqn": "@aws-cdk/aws-lambda.IFunction"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.RunLambdaTaskProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.IStepFunctionsTask"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/lambda/run-lambda-task.ts",
        "line": 66
      },
      "methods": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Called when the task object is used in a workflow."
          },
          "locationInModule": {
            "filename": "lib/lambda/run-lambda-task.ts",
            "line": 87
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-stepfunctions.IStepFunctionsTask",
          "parameters": [
            {
              "name": "_task",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions.Task"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions.StepFunctionsTaskConfig"
            }
          }
        }
      ],
      "name": "RunLambdaTask",
      "symbolId": "lib/lambda/run-lambda-task:RunLambdaTask"
    },
    "@aws-cdk/aws-stepfunctions-tasks.RunLambdaTaskProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "deprecated": "Use `LambdaInvoke`",
        "stability": "deprecated",
        "summary": "Properties for RunLambdaTask.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const taskInput: stepfunctions.TaskInput;\nconst runLambdaTaskProps: stepfunctions_tasks.RunLambdaTaskProps = {\n  clientContext: 'clientContext',\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  invocationType: stepfunctions_tasks.InvocationType.REQUEST_RESPONSE,\n  payload: taskInput,\n  qualifier: 'qualifier',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.RunLambdaTaskProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/lambda/run-lambda-task.ts",
        "line": 11
      },
      "name": "RunLambdaTaskProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No context",
            "stability": "deprecated",
            "summary": "Client context to pass to the function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/run-lambda-task.ts",
            "line": 45
          },
          "name": "clientContext",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "FIRE_AND_FORGET",
            "remarks": "The valid value for Lambda is either FIRE_AND_FORGET or WAIT_FOR_TASK_TOKEN,\nit determines whether to pause the workflow until a task token is returned.\n\nIf this is set to WAIT_FOR_TASK_TOKEN, the JsonPath.taskToken value must be included\nsomewhere in the payload and the Lambda must call\n`SendTaskSuccess/SendTaskFailure` using that token.",
            "stability": "deprecated",
            "summary": "The service integration pattern indicates different ways to invoke Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/run-lambda-task.ts",
            "line": 31
          },
          "name": "integrationPattern",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.ServiceIntegrationPattern"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "RequestResponse",
            "stability": "deprecated",
            "summary": "Invocation type of the Lambda function."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/run-lambda-task.ts",
            "line": 38
          },
          "name": "invocationType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.InvocationType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The state input (JSON path '$')",
            "stability": "deprecated",
            "summary": "The JSON that you want to provide to your Lambda function as input."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/run-lambda-task.ts",
            "line": 17
          },
          "name": "payload",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No qualifier",
            "deprecated": "pass a Version or Alias object as lambdaFunction instead",
            "stability": "deprecated",
            "summary": "Version or alias of the function to be invoked."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/lambda/run-lambda-task.ts",
            "line": 53
          },
          "name": "qualifier",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/lambda/run-lambda-task:RunLambdaTaskProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.S3DataDistributionType": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "S3 Data Distribution Type."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.S3DataDistributionType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 426
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Fully replicated S3 Data Distribution Type."
          },
          "name": "FULLY_REPLICATED"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Sharded By S3 Key Data Distribution Type."
          },
          "name": "SHARDED_BY_S3_KEY"
        }
      ],
      "name": "S3DataDistributionType",
      "symbolId": "lib/sagemaker/base-types:S3DataDistributionType"
    },
    "@aws-cdk/aws-stepfunctions-tasks.S3DataSource": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTrainingJob(this, 'TrainSagemaker', {\n  trainingJobName: sfn.JsonPath.stringAt('$.JobName'),\n  algorithmSpecification: {\n    algorithmName: 'BlazingText',\n    trainingInputMode: tasks.InputMode.FILE,\n  },\n  inputDataConfig: [{\n    channelName: 'train',\n    dataSource: {\n      s3DataSource: {\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n        s3Location: tasks.S3Location.fromJsonExpression('$.S3Bucket'),\n      },\n    },\n  }],\n  outputDataConfig: {\n    s3OutputLocation: tasks.S3Location.fromBucket(s3.Bucket.fromBucketName(this, 'Bucket', 'mybucket'), 'myoutputpath'),\n  },\n  resourceConfig: {\n    instanceCount: 1,\n    instanceType: new ec2.InstanceType(sfn.JsonPath.stringAt('$.InstanceType')),\n    volumeSize: Size.gibibytes(50),\n  }, // optional: default is 1 instance of EC2 `M4.XLarge` with `10GB` volume\n  stoppingCondition: {\n    maxRuntime: Duration.hours(2),\n  }, // optional: default is 1 hour\n});",
        "see": "https://docs.aws.amazon.com/sagemaker/latest/APIReference/API_S3DataSource.html",
        "stability": "stable",
        "summary": "S3 location of the channel data."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.S3DataSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 134
      },
      "name": "S3DataSource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "S3 Uri."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 159
          },
          "name": "s3Location",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.S3Location"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No attribute names",
            "stability": "stable",
            "summary": "List of one or more attribute names to use that are found in a specified augmented manifest file."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 140
          },
          "name": "attributeNames",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "S3 Data Distribution Type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 147
          },
          "name": "s3DataDistributionType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.S3DataDistributionType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "S3_PREFIX",
            "stability": "stable",
            "summary": "S3 Data Type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 154
          },
          "name": "s3DataType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.S3DataType"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:S3DataSource"
    },
    "@aws-cdk/aws-stepfunctions-tasks.S3DataType": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTrainingJob(this, 'TrainSagemaker', {\n  trainingJobName: sfn.JsonPath.stringAt('$.JobName'),\n  algorithmSpecification: {\n    algorithmName: 'BlazingText',\n    trainingInputMode: tasks.InputMode.FILE,\n  },\n  inputDataConfig: [{\n    channelName: 'train',\n    dataSource: {\n      s3DataSource: {\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n        s3Location: tasks.S3Location.fromJsonExpression('$.S3Bucket'),\n      },\n    },\n  }],\n  outputDataConfig: {\n    s3OutputLocation: tasks.S3Location.fromBucket(s3.Bucket.fromBucketName(this, 'Bucket', 'mybucket'), 'myoutputpath'),\n  },\n  resourceConfig: {\n    instanceCount: 1,\n    instanceType: new ec2.InstanceType(sfn.JsonPath.stringAt('$.InstanceType')),\n    volumeSize: Size.gibibytes(50),\n  }, // optional: default is 1 instance of EC2 `M4.XLarge` with `10GB` volume\n  stoppingCondition: {\n    maxRuntime: Duration.hours(2),\n  }, // optional: default is 1 hour\n});",
        "stability": "stable",
        "summary": "S3 Data Type."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.S3DataType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 405
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Manifest File Data Type."
          },
          "name": "MANIFEST_FILE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "S3 Prefix Data Type."
          },
          "name": "S3_PREFIX"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Augmented Manifest File Data Type."
          },
          "name": "AUGMENTED_MANIFEST_FILE"
        }
      ],
      "name": "S3DataType",
      "symbolId": "lib/sagemaker/base-types:S3DataType"
    },
    "@aws-cdk/aws-stepfunctions-tasks.S3Location": {
      "abstract": true,
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTrainingJob(this, 'TrainSagemaker', {\n  trainingJobName: sfn.JsonPath.stringAt('$.JobName'),\n  algorithmSpecification: {\n    algorithmName: 'BlazingText',\n    trainingInputMode: tasks.InputMode.FILE,\n  },\n  inputDataConfig: [{\n    channelName: 'train',\n    dataSource: {\n      s3DataSource: {\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n        s3Location: tasks.S3Location.fromJsonExpression('$.S3Bucket'),\n      },\n    },\n  }],\n  outputDataConfig: {\n    s3OutputLocation: tasks.S3Location.fromBucket(s3.Bucket.fromBucketName(this, 'Bucket', 'mybucket'), 'myoutputpath'),\n  },\n  resourceConfig: {\n    instanceCount: 1,\n    instanceType: new ec2.InstanceType(sfn.JsonPath.stringAt('$.InstanceType')),\n    volumeSize: Size.gibibytes(50),\n  }, // optional: default is 1 instance of EC2 `M4.XLarge` with `10GB` volume\n  stoppingCondition: {\n    maxRuntime: Duration.hours(2),\n  }, // optional: default is 1 hour\n});",
        "stability": "stable",
        "summary": "Constructs `IS3Location` objects."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.S3Location",
      "initializer": {
        "docs": {
          "stability": "stable"
        }
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 287
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "An `IS3Location` built with a determined bucket and key prefix."
          },
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 294
          },
          "name": "fromBucket",
          "parameters": [
            {
              "docs": {
                "summary": "is the bucket where the objects are to be stored."
              },
              "name": "bucket",
              "type": {
                "fqn": "@aws-cdk/aws-s3.IBucket"
              }
            },
            {
              "docs": {
                "summary": "is the key prefix used by the location."
              },
              "name": "keyPrefix",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.S3Location"
            }
          },
          "static": true
        },
        {
          "docs": {
            "remarks": "Due to the dynamic nature of those locations, the IAM grants that will be set by `grantRead` and `grantWrite`\napply to the `*` resource.",
            "stability": "stable",
            "summary": "An `IS3Location` determined fully by a JSON Path from the task input."
          },
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 306
          },
          "name": "fromJsonExpression",
          "parameters": [
            {
              "docs": {
                "summary": "the JSON expression resolving to an S3 location URI."
              },
              "name": "expression",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.S3Location"
            }
          },
          "static": true
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Called when the S3Location is bound to a StepFunctions task."
          },
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 313
          },
          "name": "bind",
          "parameters": [
            {
              "name": "task",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.ISageMakerTask"
              }
            },
            {
              "name": "opts",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.S3LocationBindOptions"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.S3LocationConfig"
            }
          }
        }
      ],
      "name": "S3Location",
      "symbolId": "lib/sagemaker/base-types:S3Location"
    },
    "@aws-cdk/aws-stepfunctions-tasks.S3LocationBindOptions": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Options for binding an S3 Location.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst s3LocationBindOptions: stepfunctions_tasks.S3LocationBindOptions = {\n  forReading: false,\n  forWriting: false,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.S3LocationBindOptions",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 320
      },
      "name": "S3LocationBindOptions",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Allow reading from the S3 Location."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 326
          },
          "name": "forReading",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "stability": "stable",
            "summary": "Allow writing to the S3 Location."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 333
          },
          "name": "forWriting",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:S3LocationBindOptions"
    },
    "@aws-cdk/aws-stepfunctions-tasks.S3LocationConfig": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Stores information about the location of an object in Amazon S3.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst s3LocationConfig: stepfunctions_tasks.S3LocationConfig = {\n  uri: 'uri',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.S3LocationConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 275
      },
      "name": "S3LocationConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Uniquely identifies the resource in Amazon S3."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 280
          },
          "name": "uri",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:S3LocationConfig"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateEndpoint": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateEndpoint(this, 'SagemakerEndpoint', {\n  endpointName: sfn.JsonPath.stringAt('$.EndpointName'),\n  endpointConfigName: sfn.JsonPath.stringAt('$.EndpointConfigName'),\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-sagemaker.html",
        "stability": "stable",
        "summary": "A Step Functions Task to create a SageMaker endpoint."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateEndpoint",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/sagemaker/create-endpoint.ts",
          "line": 42
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateEndpointProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/sagemaker/create-endpoint.ts",
        "line": 34
      },
      "name": "SageMakerCreateEndpoint",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-endpoint.ts",
            "line": 38
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-endpoint.ts",
            "line": 39
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/sagemaker/create-endpoint:SageMakerCreateEndpoint"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateEndpointConfig": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateEndpointConfig(this, 'SagemakerEndpointConfig', {\n  endpointConfigName: 'MyEndpointConfig',\n  productionVariants: [{\n  initialInstanceCount: 2,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.M5, ec2.InstanceSize.XLARGE),\n    modelName: 'MyModel',\n    variantName: 'awesome-variant',\n  }],\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-sagemaker.html",
        "stability": "stable",
        "summary": "A Step Functions Task to create a SageMaker endpoint configuration."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateEndpointConfig",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/sagemaker/create-endpoint-config.ts",
          "line": 55
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateEndpointConfigProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/sagemaker/create-endpoint-config.ts",
        "line": 47
      },
      "name": "SageMakerCreateEndpointConfig",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-endpoint-config.ts",
            "line": 51
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-endpoint-config.ts",
            "line": 52
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/sagemaker/create-endpoint-config:SageMakerCreateEndpointConfig"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateEndpointConfigProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateEndpointConfig(this, 'SagemakerEndpointConfig', {\n  endpointConfigName: 'MyEndpointConfig',\n  productionVariants: [{\n  initialInstanceCount: 2,\n  instanceType: ec2.InstanceType.of(ec2.InstanceClass.M5, ec2.InstanceSize.XLARGE),\n    modelName: 'MyModel',\n    variantName: 'awesome-variant',\n  }],\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-sagemaker.html",
        "stability": "stable",
        "summary": "Properties for creating an Amazon SageMaker endpoint configuration."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateEndpointConfigProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/create-endpoint-config.ts",
        "line": 14
      },
      "name": "SageMakerCreateEndpointConfigProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the endpoint configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-endpoint-config.ts",
            "line": 18
          },
          "name": "endpointConfigName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Identifies a model that you want to host and the resources to deploy for hosting it.\nIf you are deploying multiple models, tell Amazon SageMaker how to distribute traffic among the models by specifying variant weights.",
            "stability": "stable",
            "summary": "An list of ProductionVariant objects, one for each model that you want to host at this endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-endpoint-config.ts",
            "line": 32
          },
          "name": "productionVariants",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.ProductionVariant"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "AWS Key Management Service key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance that hosts the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-endpoint-config.ts",
            "line": 25
          },
          "name": "kmsKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No tags",
            "stability": "stable",
            "summary": "Tags to be applied to the endpoint configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-endpoint-config.ts",
            "line": 39
          },
          "name": "tags",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        }
      ],
      "symbolId": "lib/sagemaker/create-endpoint-config:SageMakerCreateEndpointConfigProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateEndpointProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateEndpoint(this, 'SagemakerEndpoint', {\n  endpointName: sfn.JsonPath.stringAt('$.EndpointName'),\n  endpointConfigName: sfn.JsonPath.stringAt('$.EndpointConfigName'),\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-sagemaker.html",
        "stability": "stable",
        "summary": "Properties for creating an Amazon SageMaker endpoint."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateEndpointProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/create-endpoint.ts",
        "line": 12
      },
      "name": "SageMakerCreateEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of an endpoint configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-endpoint.ts",
            "line": 16
          },
          "name": "endpointConfigName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "The name must be unique within an AWS Region in your AWS account.",
            "stability": "stable",
            "summary": "The name of the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-endpoint.ts",
            "line": 20
          },
          "name": "endpointName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No tags",
            "stability": "stable",
            "summary": "Tags to be applied to the endpoint."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-endpoint.ts",
            "line": 26
          },
          "name": "tags",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        }
      ],
      "symbolId": "lib/sagemaker/create-endpoint:SageMakerCreateEndpointProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateModel": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateModel(this, 'Sagemaker', {\n  modelName: 'MyModel',\n  primaryContainer: new tasks.ContainerDefinition({\n    image: tasks.DockerImage.fromJsonExpression(sfn.JsonPath.stringAt('$.Model.imageName')),\n    mode: tasks.Mode.SINGLE_MODEL,\n    modelS3Location: tasks.S3Location.fromJsonExpression('$.TrainingJob.ModelArtifacts.S3ModelArtifacts'),\n  }),\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-sagemaker.html",
        "stability": "stable",
        "summary": "A Step Functions Task to create a SageMaker model."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateModel",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/sagemaker/create-model.ts",
          "line": 93
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateModelProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/sagemaker/create-model.ts",
        "line": 72
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add the security group to all instances via the launch configuration security groups array."
          },
          "locationInModule": {
            "filename": "lib/sagemaker/create-model.ts",
            "line": 115
          },
          "name": "addSecurityGroup",
          "parameters": [
            {
              "docs": {
                "summary": ": The security group to add."
              },
              "name": "securityGroup",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              }
            }
          ]
        }
      ],
      "name": "SageMakerCreateModel",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Allows specify security group connections for instances of this fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-model.ts",
            "line": 79
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-model.ts",
            "line": 84
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The execution role for the Sagemaker Create Model API."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-model.ts",
            "line": 83
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-model.ts",
            "line": 85
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-model.ts",
            "line": 86
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/sagemaker/create-model:SageMakerCreateModel"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateModelProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateModel(this, 'Sagemaker', {\n  modelName: 'MyModel',\n  primaryContainer: new tasks.ContainerDefinition({\n    image: tasks.DockerImage.fromJsonExpression(sfn.JsonPath.stringAt('$.Model.imageName')),\n    mode: tasks.Mode.SINGLE_MODEL,\n    modelS3Location: tasks.S3Location.fromJsonExpression('$.TrainingJob.ModelArtifacts.S3ModelArtifacts'),\n  }),\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-sagemaker.html",
        "stability": "stable",
        "summary": "Properties for creating an Amazon SageMaker model."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateModelProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/create-model.ts",
        "line": 14
      },
      "name": "SageMakerCreateModelProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the new model."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-model.ts",
            "line": 24
          },
          "name": "modelName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The definition of the primary docker image containing inference code, associated artifacts, and custom environment map that the inference code uses when the model is deployed for predictions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-model.ts",
            "line": 29
          },
          "name": "primaryContainer",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.IContainerDefinition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "Specifies the containers in the inference pipeline."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-model.ts",
            "line": 35
          },
          "name": "containers",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.IContainerDefinition"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "No inbound or outbound network calls can be made to or from the model container.",
            "stability": "stable",
            "summary": "Isolates the model container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-model.ts",
            "line": 42
          },
          "name": "enableNetworkIsolation",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a role will be created.",
            "stability": "stable",
            "summary": "An execution role that you can pass in a CreateModel API request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-model.ts",
            "line": 20
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Private Subnets are selected",
            "stability": "stable",
            "summary": "The subnets of the VPC to which the hosted model is connected (Note this parameter is only used when VPC is provided)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-model.ts",
            "line": 57
          },
          "name": "subnetSelection",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No tags",
            "stability": "stable",
            "summary": "Tags to be applied to the model."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-model.ts",
            "line": 64
          },
          "name": "tags",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "The VPC that is accessible by the hosted model."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-model.ts",
            "line": 49
          },
          "name": "vpc",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        }
      ],
      "symbolId": "lib/sagemaker/create-model:SageMakerCreateModelProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateTrainingJob": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTrainingJob(this, 'TrainSagemaker', {\n  trainingJobName: sfn.JsonPath.stringAt('$.JobName'),\n  algorithmSpecification: {\n    algorithmName: 'BlazingText',\n    trainingInputMode: tasks.InputMode.FILE,\n  },\n  inputDataConfig: [{\n    channelName: 'train',\n    dataSource: {\n      s3DataSource: {\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n        s3Location: tasks.S3Location.fromJsonExpression('$.S3Bucket'),\n      },\n    },\n  }],\n  outputDataConfig: {\n    s3OutputLocation: tasks.S3Location.fromBucket(s3.Bucket.fromBucketName(this, 'Bucket', 'mybucket'), 'myoutputpath'),\n  },\n  resourceConfig: {\n    instanceCount: 1,\n    instanceType: new ec2.InstanceType(sfn.JsonPath.stringAt('$.InstanceType')),\n    volumeSize: Size.gibibytes(50),\n  }, // optional: default is 1 instance of EC2 `M4.XLarge` with `10GB` volume\n  stoppingCondition: {\n    maxRuntime: Duration.hours(2),\n  }, // optional: default is 1 hour\n});",
        "stability": "stable",
        "summary": "Class representing the SageMaker Create Training Job task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateTrainingJob",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/sagemaker/create-training-job.ts",
          "line": 143
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateTrainingJobProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-iam.IGrantable",
        "@aws-cdk/aws-ec2.IConnectable"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/sagemaker/create-training-job.ts",
        "line": 101
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Add the security group to all instances via the launch configuration security groups array."
          },
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 217
          },
          "name": "addSecurityGroup",
          "parameters": [
            {
              "docs": {
                "summary": ": The security group to add."
              },
              "name": "securityGroup",
              "type": {
                "fqn": "@aws-cdk/aws-ec2.ISecurityGroup"
              }
            }
          ]
        }
      ],
      "name": "SageMakerCreateTrainingJob",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Allows specify security group connections for instances of this fleet."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 110
          },
          "name": "connections",
          "overrides": "@aws-cdk/aws-ec2.IConnectable",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.Connections"
          }
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "The principal to grant permissions to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 204
          },
          "name": "grantPrincipal",
          "overrides": "@aws-cdk/aws-iam.IGrantable",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IPrincipal"
          }
        },
        {
          "docs": {
            "remarks": "Only available after task has been added to a state machine.",
            "stability": "stable",
            "summary": "The execution role for the Sagemaker training job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 197
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 113
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 112
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/sagemaker/create-training-job:SageMakerCreateTrainingJob"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateTrainingJobProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTrainingJob(this, 'TrainSagemaker', {\n  trainingJobName: sfn.JsonPath.stringAt('$.JobName'),\n  algorithmSpecification: {\n    algorithmName: 'BlazingText',\n    trainingInputMode: tasks.InputMode.FILE,\n  },\n  inputDataConfig: [{\n    channelName: 'train',\n    dataSource: {\n      s3DataSource: {\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n        s3Location: tasks.S3Location.fromJsonExpression('$.S3Bucket'),\n      },\n    },\n  }],\n  outputDataConfig: {\n    s3OutputLocation: tasks.S3Location.fromBucket(s3.Bucket.fromBucketName(this, 'Bucket', 'mybucket'), 'myoutputpath'),\n  },\n  resourceConfig: {\n    instanceCount: 1,\n    instanceType: new ec2.InstanceType(sfn.JsonPath.stringAt('$.InstanceType')),\n    volumeSize: Size.gibibytes(50),\n  }, // optional: default is 1 instance of EC2 `M4.XLarge` with `10GB` volume\n  stoppingCondition: {\n    maxRuntime: Duration.hours(2),\n  }, // optional: default is 1 hour\n});",
        "stability": "stable",
        "summary": "Properties for creating an Amazon SageMaker training job."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateTrainingJobProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/create-training-job.ts",
        "line": 14
      },
      "name": "SageMakerCreateTrainingJobProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Identifies the training algorithm to use."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 33
          },
          "name": "algorithmSpecification",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.AlgorithmSpecification"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Describes the various datasets (e.g. train, validation, test) and the Amazon S3 location where stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 54
          },
          "name": "inputDataConfig",
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.Channel"
              },
              "kind": "array"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Identifies the Amazon S3 location where you want Amazon SageMaker to save the results of model training."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 66
          },
          "name": "outputDataConfig",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.OutputDataConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Training Job Name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 18
          },
          "name": "trainingJobName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "No inbound or outbound network calls can be made to or from the training container.",
            "stability": "stable",
            "summary": "Isolates the training container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 40
          },
          "name": "enableNetworkIsolation",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No environment variables",
            "stability": "stable",
            "summary": "Environment variables to set in the Docker container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 94
          },
          "name": "environment",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No hyperparameters",
            "remarks": "Set hyperparameters before you start the learning process.\nFor a list of hyperparameters provided by Amazon SageMaker",
            "see": "https://docs.aws.amazon.com/sagemaker/latest/dg/algos.html",
            "stability": "stable",
            "summary": "Algorithm-specific parameters that influence the quality of the model."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 49
          },
          "name": "hyperparameters",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 1 instance of EC2 `M4.XLarge` with `10GB` volume",
            "stability": "stable",
            "summary": "Specifies the resources, ML compute instances, and ML storage volumes to deploy for model training."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 73
          },
          "name": "resourceConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.ResourceConfig"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- a role will be created.",
            "remarks": "The role must be granted all necessary permissions for the SageMaker training job to\nbe able to operate.\n\nSee https://docs.aws.amazon.com/fr_fr/sagemaker/latest/dg/sagemaker-roles.html#sagemaker-roles-createtrainingjob-perms",
            "stability": "stable",
            "summary": "Role for the Training Job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 28
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- max runtime of 1 hour",
            "stability": "stable",
            "summary": "Sets a time limit for training."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 80
          },
          "name": "stoppingCondition",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.StoppingCondition"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No tags",
            "stability": "stable",
            "summary": "Tags to be applied to the train job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 61
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No VPC",
            "stability": "stable",
            "summary": "Specifies the VPC that you want your training job to connect to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-training-job.ts",
            "line": 87
          },
          "name": "vpcConfig",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.VpcConfig"
          }
        }
      ],
      "symbolId": "lib/sagemaker/create-training-job:SageMakerCreateTrainingJobProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateTransformJob": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTransformJob(this, 'Batch Inference', {\n  transformJobName: 'MyTransformJob',\n  modelName: 'MyModelName',\n  modelClientOptions: {\n    invocationsMaxRetries: 3,  // default is 0\n    invocationsTimeout: Duration.minutes(5),  // default is 60 seconds\n  },\n  transformInput: {\n    transformDataSource: {\n      s3DataSource: {\n        s3Uri: 's3://inputbucket/train',\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n      }\n    }\n  },\n  transformOutput: {\n    s3OutputPath: 's3://outputbucket/TransformJobOutputPath',\n  },\n  transformResources: {\n    instanceCount: 1,\n    instanceType: ec2.InstanceType.of(ec2.InstanceClass.M4, ec2.InstanceSize.XLARGE),\n  }\n});",
        "stability": "stable",
        "summary": "Class representing the SageMaker Create Transform Job task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateTransformJob",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/sagemaker/create-transform-job.ts",
          "line": 118
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateTransformJobProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/sagemaker/create-transform-job.ts",
        "line": 97
      },
      "name": "SageMakerCreateTransformJob",
      "properties": [
        {
          "docs": {
            "remarks": "Only available after task has been added to a state machine.",
            "stability": "stable",
            "summary": "The execution role for the Sagemaker transform job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-transform-job.ts",
            "line": 159
          },
          "name": "role",
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-transform-job.ts",
            "line": 104
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-transform-job.ts",
            "line": 103
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/sagemaker/create-transform-job:SageMakerCreateTransformJob"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateTransformJobProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTransformJob(this, 'Batch Inference', {\n  transformJobName: 'MyTransformJob',\n  modelName: 'MyModelName',\n  modelClientOptions: {\n    invocationsMaxRetries: 3,  // default is 0\n    invocationsTimeout: Duration.minutes(5),  // default is 60 seconds\n  },\n  transformInput: {\n    transformDataSource: {\n      s3DataSource: {\n        s3Uri: 's3://inputbucket/train',\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n      }\n    }\n  },\n  transformOutput: {\n    s3OutputPath: 's3://outputbucket/TransformJobOutputPath',\n  },\n  transformResources: {\n    instanceCount: 1,\n    instanceType: ec2.InstanceType.of(ec2.InstanceClass.M4, ec2.InstanceSize.XLARGE),\n  }\n});",
        "stability": "stable",
        "summary": "Properties for creating an Amazon SageMaker transform job task."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerCreateTransformJobProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/create-transform-job.ts",
        "line": 14
      },
      "name": "SageMakerCreateTransformJobProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Name of the model that you want to use for the transform job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-transform-job.ts",
            "line": 59
          },
          "name": "modelName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Dataset to be transformed and the Amazon S3 location where it is stored."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-transform-job.ts",
            "line": 78
          },
          "name": "transformInput",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.TransformInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Transform Job Name."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-transform-job.ts",
            "line": 18
          },
          "name": "transformJobName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "S3 location where you want Amazon SageMaker to save the results from the transform job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-transform-job.ts",
            "line": 83
          },
          "name": "transformOutput",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.TransformOutput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No batch strategy",
            "stability": "stable",
            "summary": "Number of records to include in a mini-batch for an HTTP inference request."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-transform-job.ts",
            "line": 32
          },
          "name": "batchStrategy",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.BatchStrategy"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No environment variables",
            "stability": "stable",
            "summary": "Environment variables to set in the Docker container."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-transform-job.ts",
            "line": 39
          },
          "name": "environment",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Amazon SageMaker checks the optional execution-parameters to determine the settings for your chosen algorithm.\nIf the execution-parameters endpoint is not enabled, the default value is 1.",
            "stability": "stable",
            "summary": "Maximum number of parallel requests that can be sent to each instance in a transform job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-transform-job.ts",
            "line": 47
          },
          "name": "maxConcurrentTransforms",
          "optional": true,
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "6",
            "stability": "stable",
            "summary": "Maximum allowed size of the payload, in MB."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-transform-job.ts",
            "line": 54
          },
          "name": "maxPayload",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Size"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 0 retries and 60 seconds of timeout",
            "stability": "stable",
            "summary": "Configures the timeout and maximum number of retries for processing a transform job invocation."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-transform-job.ts",
            "line": 66
          },
          "name": "modelClientOptions",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.ModelClientOptions"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- A role is created with `AmazonSageMakerFullAccess` managed policy",
            "stability": "stable",
            "summary": "Role for the Transform Job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-transform-job.ts",
            "line": 25
          },
          "name": "role",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-iam.IRole"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No tags",
            "stability": "stable",
            "summary": "Tags to be applied to the train job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-transform-job.ts",
            "line": 73
          },
          "name": "tags",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "string"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- 1 instance of type M4.XLarge",
            "stability": "stable",
            "summary": "ML compute instances for the transform job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/create-transform-job.ts",
            "line": 90
          },
          "name": "transformResources",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.TransformResources"
          }
        }
      ],
      "symbolId": "lib/sagemaker/create-transform-job:SageMakerCreateTransformJobProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SageMakerUpdateEndpoint": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerUpdateEndpoint(this, 'SagemakerEndpoint', {\n  endpointName: sfn.JsonPath.stringAt('$.Endpoint.Name'),\n  endpointConfigName: sfn.JsonPath.stringAt('$.Endpoint.EndpointConfig'),\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-sagemaker.html",
        "stability": "stable",
        "summary": "A Step Functions Task to update a SageMaker endpoint."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerUpdateEndpoint",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/sagemaker/update-endpoint.ts",
          "line": 36
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerUpdateEndpointProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/sagemaker/update-endpoint.ts",
        "line": 28
      },
      "name": "SageMakerUpdateEndpoint",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/update-endpoint.ts",
            "line": 32
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/update-endpoint.ts",
            "line": 33
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/sagemaker/update-endpoint:SageMakerUpdateEndpoint"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SageMakerUpdateEndpointProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerUpdateEndpoint(this, 'SagemakerEndpoint', {\n  endpointName: sfn.JsonPath.stringAt('$.Endpoint.Name'),\n  endpointConfigName: sfn.JsonPath.stringAt('$.Endpoint.EndpointConfig'),\n});",
        "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-sagemaker.html",
        "stability": "stable",
        "summary": "Properties for updating Amazon SageMaker endpoint."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SageMakerUpdateEndpointProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/update-endpoint.ts",
        "line": 12
      },
      "name": "SageMakerUpdateEndpointProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the new endpoint configuration."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/update-endpoint.ts",
            "line": 16
          },
          "name": "endpointConfigName",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The name of the endpoint whose configuration you want to update."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/update-endpoint.ts",
            "line": 20
          },
          "name": "endpointName",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/sagemaker/update-endpoint:SageMakerUpdateEndpointProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SendToQueue": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "deprecated": "Use `SqsSendMessage`",
        "remarks": "A Function can be used directly as a Resource, but this class mirrors\nintegration with other AWS services via a specific class instance.",
        "stability": "deprecated",
        "summary": "A StepFunctions Task to send messages to SQS queue.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as sqs from '@aws-cdk/aws-sqs';\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const queue: sqs.Queue;\ndeclare const taskInput: stepfunctions.TaskInput;\nconst sendToQueue = new stepfunctions_tasks.SendToQueue(queue, {\n  messageBody: taskInput,\n\n  // the properties below are optional\n  delay: cdk.Duration.minutes(30),\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  messageDeduplicationId: 'messageDeduplicationId',\n  messageGroupId: 'messageGroupId',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SendToQueue",
      "initializer": {
        "docs": {
          "stability": "deprecated"
        },
        "locationInModule": {
          "filename": "lib/sqs/send-to-queue.ts",
          "line": 66
        },
        "parameters": [
          {
            "name": "queue",
            "type": {
              "fqn": "@aws-cdk/aws-sqs.IQueue"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.SendToQueueProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.IStepFunctionsTask"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/sqs/send-to-queue.ts",
        "line": 62
      },
      "methods": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Called when the task object is used in a workflow."
          },
          "locationInModule": {
            "filename": "lib/sqs/send-to-queue.ts",
            "line": 85
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-stepfunctions.IStepFunctionsTask",
          "parameters": [
            {
              "name": "_task",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions.Task"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions.StepFunctionsTaskConfig"
            }
          }
        }
      ],
      "name": "SendToQueue",
      "symbolId": "lib/sqs/send-to-queue:SendToQueue"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SendToQueueProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "deprecated": "Use `SqsSendMessage`",
        "stability": "deprecated",
        "summary": "Properties for SendMessageTask.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const taskInput: stepfunctions.TaskInput;\nconst sendToQueueProps: stepfunctions_tasks.SendToQueueProps = {\n  messageBody: taskInput,\n\n  // the properties below are optional\n  delay: cdk.Duration.minutes(30),\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  messageDeduplicationId: 'messageDeduplicationId',\n  messageGroupId: 'messageGroupId',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SendToQueueProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sqs/send-to-queue.ts",
        "line": 12
      },
      "name": "SendToQueueProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "deprecated",
            "summary": "The text message to send to the queue."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sqs/send-to-queue.ts",
            "line": 16
          },
          "name": "messageBody",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Default value of the queue is used",
            "remarks": "Valid values are 0-900 seconds.",
            "stability": "deprecated",
            "summary": "The length of time, in seconds, for which to delay a specific message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sqs/send-to-queue.ts",
            "line": 25
          },
          "name": "delay",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "FIRE_AND_FORGET",
            "remarks": "The valid value is either FIRE_AND_FORGET or WAIT_FOR_TASK_TOKEN.",
            "stability": "deprecated",
            "summary": "The service integration pattern indicates different ways to call SendMessage to SQS."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sqs/send-to-queue.ts",
            "line": 51
          },
          "name": "integrationPattern",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.ServiceIntegrationPattern"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "Use content-based deduplication",
            "stability": "deprecated",
            "summary": "The token used for deduplication of sent messages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sqs/send-to-queue.ts",
            "line": 32
          },
          "name": "messageDeduplicationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "No group ID",
            "remarks": "Required for FIFO queues. FIFO ordering applies to messages in the same message\ngroup.",
            "stability": "deprecated",
            "summary": "The tag that specifies that a message belongs to a specific message group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sqs/send-to-queue.ts",
            "line": 42
          },
          "name": "messageGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/sqs/send-to-queue:SendToQueueProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.ShuffleConfig": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Configuration for a shuffle option for input data in a channel.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst shuffleConfig: stepfunctions_tasks.ShuffleConfig = {\n  seed: 123,\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.ShuffleConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 110
      },
      "name": "ShuffleConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Determines the shuffling order."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 114
          },
          "name": "seed",
          "type": {
            "primitive": "number"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:ShuffleConfig"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SnsPublish": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const convertToSeconds = new tasks.EvaluateExpression(this, 'Convert to seconds', {\n  expression: '$.waitMilliseconds / 1000',\n  resultPath: '$.waitSeconds',\n});\n\nconst createMessage = new tasks.EvaluateExpression(this, 'Create message', {\n  // Note: this is a string inside a string.\n  expression: '`Now waiting ${$.waitSeconds} seconds...`',\n  runtime: lambda.Runtime.NODEJS_14_X,\n  resultPath: '$.message',\n});\n\nconst publishMessage = new tasks.SnsPublish(this, 'Publish message', {\n  topic: new sns.Topic(this, 'cool-topic'),\n  message: sfn.TaskInput.fromJsonPathAt('$.message'),\n  resultPath: '$.sns',\n});\n\nconst wait = new sfn.Wait(this, 'Wait', {\n  time: sfn.WaitTime.secondsPath('$.waitSeconds'),\n});\n\nnew sfn.StateMachine(this, 'StateMachine', {\n  definition: convertToSeconds\n    .next(createMessage)\n    .next(publishMessage)\n    .next(wait),\n});",
        "stability": "stable",
        "summary": "A Step Functions Task to publish messages to SNS topic."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SnsPublish",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/sns/publish.ts",
          "line": 133
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.SnsPublishProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/sns/publish.ts",
        "line": 121
      },
      "name": "SnsPublish",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sns/publish.ts",
            "line": 128
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sns/publish.ts",
            "line": 129
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/sns/publish:SnsPublish"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SnsPublishProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const convertToSeconds = new tasks.EvaluateExpression(this, 'Convert to seconds', {\n  expression: '$.waitMilliseconds / 1000',\n  resultPath: '$.waitSeconds',\n});\n\nconst createMessage = new tasks.EvaluateExpression(this, 'Create message', {\n  // Note: this is a string inside a string.\n  expression: '`Now waiting ${$.waitSeconds} seconds...`',\n  runtime: lambda.Runtime.NODEJS_14_X,\n  resultPath: '$.message',\n});\n\nconst publishMessage = new tasks.SnsPublish(this, 'Publish message', {\n  topic: new sns.Topic(this, 'cool-topic'),\n  message: sfn.TaskInput.fromJsonPathAt('$.message'),\n  resultPath: '$.sns',\n});\n\nconst wait = new sfn.Wait(this, 'Wait', {\n  time: sfn.WaitTime.secondsPath('$.waitSeconds'),\n});\n\nnew sfn.StateMachine(this, 'StateMachine', {\n  definition: convertToSeconds\n    .next(createMessage)\n    .next(publishMessage)\n    .next(wait),\n});",
        "stability": "stable",
        "summary": "Properties for publishing a message to an SNS topic."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SnsPublishProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sns/publish.ts",
        "line": 64
      },
      "name": "SnsPublishProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "With the exception of SMS, messages must be UTF-8 encoded strings and\nat most 256 KB in size.\nFor SMS, each message can contain up to 140 characters.",
            "stability": "stable",
            "summary": "The message you want to send."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sns/publish.ts",
            "line": 78
          },
          "name": "message",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The SNS topic that the task will publish to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sns/publish.ts",
            "line": 69
          },
          "name": "topic",
          "type": {
            "fqn": "@aws-cdk/aws-sns.ITopic"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "{}",
            "remarks": "These attributes carry additional metadata about the message and may be used\nfor subscription filters.",
            "see": "https://docs.aws.amazon.com/sns/latest/dg/sns-message-attributes.html",
            "stability": "stable",
            "summary": "Add message attributes when publishing."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sns/publish.ts",
            "line": 89
          },
          "name": "messageAttributes",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-stepfunctions-tasks.MessageAttribute"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "false",
            "remarks": "For example, you might want to send a shorter message to SMS subscribers\nand a more verbose message to email and SQS subscribers.\n\nYour message must be a JSON object with a top-level JSON key of\n\"default\" with a value that is a string\nYou can define other top-level keys that define the message you want to\nsend to a specific transport protocol (i.e. \"sqs\", \"email\", \"http\", etc)",
            "see": "https://docs.aws.amazon.com/sns/latest/api/API_Publish.html#API_Publish_RequestParameters",
            "stability": "stable",
            "summary": "Send different messages for each transport protocol."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sns/publish.ts",
            "line": 105
          },
          "name": "messagePerSubscriptionType",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No subject",
            "remarks": "This field will also be included, if present, in the standard JSON messages\ndelivered to other endpoints.",
            "stability": "stable",
            "summary": "Used as the \"Subject\" line when the message is delivered to email endpoints."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sns/publish.ts",
            "line": 114
          },
          "name": "subject",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/sns/publish:SnsPublishProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SparkSubmitJobDriver": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrContainersStartJobRun(this, 'EMR Containers Start Job Run', {\n  virtualCluster: tasks.VirtualClusterInput.fromVirtualClusterId('de92jdei2910fwedz'),\n  releaseLabel: tasks.ReleaseLabel.EMR_6_2_0,\n  jobName: 'EMR-Containers-Job',\n  jobDriver: {\n    sparkSubmitJobDriver: {\n      entryPoint: sfn.TaskInput.fromText('local:///usr/lib/spark/examples/src/main/python/pi.py'),\n    },\n  },\n  applicationConfig: [{\n    classification: tasks.Classification.SPARK_DEFAULTS,\n    properties: {\n      'spark.executor.instances': '1',\n      'spark.executor.memory': '512M',\n    },\n  }],\n});",
        "stability": "stable",
        "summary": "The information about job driver for Spark submit."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SparkSubmitJobDriver",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/emrcontainers/start-job-run.ts",
        "line": 436
      },
      "name": "SparkSubmitJobDriver",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Length Constraints: Minimum length of 1. Maximum length of 256.",
            "stability": "stable",
            "summary": "The entry point of job application."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 442
          },
          "name": "entryPoint",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "custom": {
              "type": "sfn.TaskInput which expects payload as an array of strings"
            },
            "default": "- No arguments defined",
            "remarks": "Length Constraints: Minimum length of 1. Maximum length of 10280.",
            "stability": "stable",
            "summary": "The arguments for a job application in a task input object containing an array of strings."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 452
          },
          "name": "entryPointArguments",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- No spark submit parameters",
            "remarks": "Length Constraints: Minimum length of 1. Maximum length of 102400.",
            "stability": "stable",
            "summary": "The Spark submit parameters that are used for job runs."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 461
          },
          "name": "sparkSubmitParameters",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emrcontainers/start-job-run:SparkSubmitJobDriver"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SplitType": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "stability": "stable",
        "summary": "Method to use to split the transform job's data files into smaller batches."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SplitType",
      "kind": "enum",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 858
      },
      "members": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Input data files are not split,."
          },
          "name": "NONE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Split records on a newline character boundary."
          },
          "name": "LINE"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Split using MXNet RecordIO format."
          },
          "name": "RECORD_IO"
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Split using TensorFlow TFRecord format."
          },
          "name": "TF_RECORD"
        }
      ],
      "name": "SplitType",
      "symbolId": "lib/sagemaker/base-types:SplitType"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SqsSendMessage": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const queue = new sqs.Queue(this, 'Queue');\n\n// Use a field from the execution data as message.\nconst task1 = new tasks.SqsSendMessage(this, 'Send1', {\n  queue,\n  messageBody: sfn.TaskInput.fromJsonPathAt('$.message'),\n});\n\n// Combine a field from the execution data with\n// a literal object.\nconst task2 = new tasks.SqsSendMessage(this, 'Send2', {\n  queue,\n  messageBody: sfn.TaskInput.fromObject({\n    field1: 'somedata',\n    field2: sfn.JsonPath.stringAt('$.field2'),\n  }),\n});",
        "stability": "stable",
        "summary": "A StepFunctions Task to send messages to SQS queue."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SqsSendMessage",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/sqs/send-message.ts",
          "line": 69
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.SqsSendMessageProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/sqs/send-message.ts",
        "line": 57
      },
      "name": "SqsSendMessage",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sqs/send-message.ts",
            "line": 64
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sqs/send-message.ts",
            "line": 65
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/sqs/send-message:SqsSendMessage"
    },
    "@aws-cdk/aws-stepfunctions-tasks.SqsSendMessageProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const queue = new sqs.Queue(this, 'Queue');\n\n// Use a field from the execution data as message.\nconst task1 = new tasks.SqsSendMessage(this, 'Send1', {\n  queue,\n  messageBody: sfn.TaskInput.fromJsonPathAt('$.message'),\n});\n\n// Combine a field from the execution data with\n// a literal object.\nconst task2 = new tasks.SqsSendMessage(this, 'Send2', {\n  queue,\n  messageBody: sfn.TaskInput.fromObject({\n    field1: 'somedata',\n    field2: sfn.JsonPath.stringAt('$.field2'),\n  }),\n});",
        "stability": "stable",
        "summary": "Properties for sending a message to an SQS queue."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.SqsSendMessageProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sqs/send-message.ts",
        "line": 11
      },
      "name": "SqsSendMessageProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The text message to send to the queue."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sqs/send-message.ts",
            "line": 21
          },
          "name": "messageBody",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The SQS queue that messages will be sent to."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sqs/send-message.ts",
            "line": 16
          },
          "name": "queue",
          "type": {
            "fqn": "@aws-cdk/aws-sqs.IQueue"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- delay set on the queue. If a delay is not set on the queue,\nmessages are sent immediately (0 seconds).",
            "remarks": "Messages that you send to the queue remain invisible to consumers for the duration\nof the delay period. The maximum allowed delay is 15 minutes.",
            "stability": "stable",
            "summary": "The length of time, for which to delay a message."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sqs/send-message.ts",
            "line": 31
          },
          "name": "delay",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "remarks": "Any messages sent with the same deduplication ID are accepted successfully,\nbut aren't delivered during the 5-minute deduplication interval.",
            "stability": "stable",
            "summary": "The token used for deduplication of sent messages."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sqs/send-message.ts",
            "line": 40
          },
          "name": "messageDeduplicationId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "remarks": "Messages that belong to the same message group are processed in a FIFO manner.\nMessages in different message groups might be processed out of order.",
            "stability": "stable",
            "summary": "The tag that specifies that a message belongs to a specific message group."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sqs/send-message.ts",
            "line": 50
          },
          "name": "messageGroupId",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/sqs/send-message:SqsSendMessageProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.StartExecution": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "deprecated": "- use 'StepFunctionsStartExecution'",
        "remarks": "It supports three service integration patterns: FIRE_AND_FORGET, SYNC and WAIT_FOR_TASK_TOKEN.",
        "stability": "deprecated",
        "summary": "A Step Functions Task to call StartExecution on another state machine.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const input: any;\ndeclare const stateMachine: stepfunctions.StateMachine;\nconst startExecution = new stepfunctions_tasks.StartExecution(stateMachine, /* all optional props */ {\n  input: {\n    inputKey: input,\n  },\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  name: 'name',\n});",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.StartExecution",
      "initializer": {
        "docs": {
          "stability": "deprecated"
        },
        "locationInModule": {
          "filename": "lib/start-execution.ts",
          "line": 50
        },
        "parameters": [
          {
            "name": "stateMachine",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions.IStateMachine"
            }
          },
          {
            "name": "props",
            "optional": true,
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.StartExecutionProps"
            }
          }
        ]
      },
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.IStepFunctionsTask"
      ],
      "kind": "class",
      "locationInModule": {
        "filename": "lib/start-execution.ts",
        "line": 47
      },
      "methods": [
        {
          "docs": {
            "stability": "deprecated",
            "summary": "Called when the task object is used in a workflow."
          },
          "locationInModule": {
            "filename": "lib/start-execution.ts",
            "line": 69
          },
          "name": "bind",
          "overrides": "@aws-cdk/aws-stepfunctions.IStepFunctionsTask",
          "parameters": [
            {
              "name": "task",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions.Task"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions.StepFunctionsTaskConfig"
            }
          }
        }
      ],
      "name": "StartExecution",
      "symbolId": "lib/start-execution:StartExecution"
    },
    "@aws-cdk/aws-stepfunctions-tasks.StartExecutionProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "deprecated": "- use 'StepFunctionsStartExecution'",
        "stability": "deprecated",
        "summary": "Properties for StartExecution.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions from '@aws-cdk/aws-stepfunctions';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const input: any;\nconst startExecutionProps: stepfunctions_tasks.StartExecutionProps = {\n  input: {\n    inputKey: input,\n  },\n  integrationPattern: stepfunctions.ServiceIntegrationPattern.FIRE_AND_FORGET,\n  name: 'name',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.StartExecutionProps",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/start-execution.ts",
        "line": 11
      },
      "name": "StartExecutionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- No input",
            "see": "https://docs.aws.amazon.com/step-functions/latest/apireference/API_StartExecution.html",
            "stability": "deprecated",
            "summary": "The JSON input for the execution, same as that of StartExecution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/start-execution.ts",
            "line": 19
          },
          "name": "input",
          "optional": true,
          "type": {
            "collection": {
              "elementtype": {
                "primitive": "any"
              },
              "kind": "map"
            }
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "FIRE_AND_FORGET",
            "see": "https://docs.aws.amazon.com/step-functions/latest/dg/connect-to-resource.html",
            "stability": "deprecated",
            "summary": "The service integration pattern indicates different ways to call StartExecution to Step Functions."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/start-execution.ts",
            "line": 37
          },
          "name": "integrationPattern",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.ServiceIntegrationPattern"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "see": "https://docs.aws.amazon.com/step-functions/latest/apireference/API_StartExecution.html",
            "stability": "deprecated",
            "summary": "The name of the execution, same as that of StartExecution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/start-execution.ts",
            "line": 28
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/start-execution:StartExecutionProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.StepFunctionsInvokeActivity": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const submitJobActivity = new sfn.Activity(this, 'SubmitJob');\n\nnew tasks.StepFunctionsInvokeActivity(this, 'Submit Job', {\n  activity: submitJobActivity,\n});",
        "remarks": "An Activity can be used directly as a Resource.",
        "stability": "stable",
        "summary": "A Step Functions Task to invoke an Activity worker."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.StepFunctionsInvokeActivity",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/stepfunctions/invoke-activity.ts",
          "line": 26
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.StepFunctionsInvokeActivityProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/stepfunctions/invoke-activity.ts",
        "line": 21
      },
      "name": "StepFunctionsInvokeActivity",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stepfunctions/invoke-activity.ts",
            "line": 22
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stepfunctions/invoke-activity.ts",
            "line": 24
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/stepfunctions/invoke-activity:StepFunctionsInvokeActivity"
    },
    "@aws-cdk/aws-stepfunctions-tasks.StepFunctionsInvokeActivityProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "const submitJobActivity = new sfn.Activity(this, 'SubmitJob');\n\nnew tasks.StepFunctionsInvokeActivity(this, 'Submit Job', {\n  activity: submitJobActivity,\n});",
        "stability": "stable",
        "summary": "Properties for invoking an Activity worker."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.StepFunctionsInvokeActivityProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stepfunctions/invoke-activity.ts",
        "line": 8
      },
      "name": "StepFunctionsInvokeActivityProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Step Functions Activity to invoke."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stepfunctions/invoke-activity.ts",
            "line": 13
          },
          "name": "activity",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.IActivity"
          }
        }
      ],
      "symbolId": "lib/stepfunctions/invoke-activity:StepFunctionsInvokeActivityProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.StepFunctionsStartExecution": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "base": "@aws-cdk/aws-stepfunctions.TaskStateBase",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "// Define a state machine with one Pass state\nconst child = new sfn.StateMachine(this, 'ChildStateMachine', {\n  definition: sfn.Chain.start(new sfn.Pass(this, 'PassState')),\n});\n\n// Include the state machine in a Task state with callback pattern\nconst task = new tasks.StepFunctionsStartExecution(this, 'ChildTask', {\n  stateMachine: child,\n  integrationPattern: sfn.IntegrationPattern.WAIT_FOR_TASK_TOKEN,\n  input: sfn.TaskInput.fromObject({\n    token: sfn.JsonPath.taskToken,\n    foo: 'bar',\n  }),\n  name: 'MyExecutionName',\n});\n\n// Define a second state machine with the Task state above\nnew sfn.StateMachine(this, 'ParentStateMachine', {\n  definition: task,\n});",
        "remarks": "It supports three service integration patterns: REQUEST_RESPONSE, RUN_JOB, and WAIT_FOR_TASK_TOKEN.",
        "stability": "stable",
        "summary": "A Step Functions Task to call StartExecution on another state machine."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.StepFunctionsStartExecution",
      "initializer": {
        "docs": {
          "stability": "stable"
        },
        "locationInModule": {
          "filename": "lib/stepfunctions/start-execution.ts",
          "line": 64
        },
        "parameters": [
          {
            "name": "scope",
            "type": {
              "fqn": "constructs.Construct"
            }
          },
          {
            "name": "id",
            "type": {
              "primitive": "string"
            }
          },
          {
            "name": "props",
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.StepFunctionsStartExecutionProps"
            }
          }
        ]
      },
      "kind": "class",
      "locationInModule": {
        "filename": "lib/stepfunctions/start-execution.ts",
        "line": 52
      },
      "name": "StepFunctionsStartExecution",
      "properties": [
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stepfunctions/start-execution.ts",
            "line": 59
          },
          "name": "taskMetrics",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskMetricsConfig"
          }
        },
        {
          "docs": {
            "stability": "stable"
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stepfunctions/start-execution.ts",
            "line": 60
          },
          "name": "taskPolicies",
          "optional": true,
          "overrides": "@aws-cdk/aws-stepfunctions.TaskStateBase",
          "protected": true,
          "type": {
            "collection": {
              "elementtype": {
                "fqn": "@aws-cdk/aws-iam.PolicyStatement"
              },
              "kind": "array"
            }
          }
        }
      ],
      "symbolId": "lib/stepfunctions/start-execution:StepFunctionsStartExecution"
    },
    "@aws-cdk/aws-stepfunctions-tasks.StepFunctionsStartExecutionProps": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "// Define a state machine with one Pass state\nconst child = new sfn.StateMachine(this, 'ChildStateMachine', {\n  definition: sfn.Chain.start(new sfn.Pass(this, 'PassState')),\n});\n\n// Include the state machine in a Task state with callback pattern\nconst task = new tasks.StepFunctionsStartExecution(this, 'ChildTask', {\n  stateMachine: child,\n  integrationPattern: sfn.IntegrationPattern.WAIT_FOR_TASK_TOKEN,\n  input: sfn.TaskInput.fromObject({\n    token: sfn.JsonPath.taskToken,\n    foo: 'bar',\n  }),\n  name: 'MyExecutionName',\n});\n\n// Define a second state machine with the Task state above\nnew sfn.StateMachine(this, 'ParentStateMachine', {\n  definition: task,\n});",
        "stability": "stable",
        "summary": "Properties for StartExecution."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.StepFunctionsStartExecutionProps",
      "interfaces": [
        "@aws-cdk/aws-stepfunctions.TaskStateBaseProps"
      ],
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/stepfunctions/start-execution.ts",
        "line": 10
      },
      "name": "StepFunctionsStartExecutionProps",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "The Step Functions state machine to start the execution on."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stepfunctions/start-execution.ts",
            "line": 14
          },
          "name": "stateMachine",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.IStateMachine"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- false",
            "remarks": "This allows the Step Functions UI to link child executions from parent executions, making it easier to trace execution flow across state machines.\n\nIf you set this property to `true`, the `input` property must be an object (provided by `sfn.TaskInput.fromObject`) or omitted entirely.",
            "see": "https://docs.aws.amazon.com/step-functions/latest/dg/concepts-nested-workflows.html#nested-execution-startid",
            "stability": "stable",
            "summary": "Pass the execution ID from the context object to the execution input."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stepfunctions/start-execution.ts",
            "line": 44
          },
          "name": "associateWithParent",
          "optional": true,
          "type": {
            "primitive": "boolean"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- The state input (JSON path '$')",
            "see": "https://docs.aws.amazon.com/step-functions/latest/apireference/API_StartExecution.html",
            "stability": "stable",
            "summary": "The JSON input for the execution, same as that of StartExecution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stepfunctions/start-execution.ts",
            "line": 23
          },
          "name": "input",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "see": "https://docs.aws.amazon.com/step-functions/latest/apireference/API_StartExecution.html",
            "stability": "stable",
            "summary": "The name of the execution, same as that of StartExecution."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/stepfunctions/start-execution.ts",
            "line": 32
          },
          "name": "name",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/stepfunctions/start-execution:StepFunctionsStartExecutionProps"
    },
    "@aws-cdk/aws-stepfunctions-tasks.StoppingCondition": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTrainingJob(this, 'TrainSagemaker', {\n  trainingJobName: sfn.JsonPath.stringAt('$.JobName'),\n  algorithmSpecification: {\n    algorithmName: 'BlazingText',\n    trainingInputMode: tasks.InputMode.FILE,\n  },\n  inputDataConfig: [{\n    channelName: 'train',\n    dataSource: {\n      s3DataSource: {\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n        s3Location: tasks.S3Location.fromJsonExpression('$.S3Bucket'),\n      },\n    },\n  }],\n  outputDataConfig: {\n    s3OutputLocation: tasks.S3Location.fromBucket(s3.Bucket.fromBucketName(this, 'Bucket', 'mybucket'), 'myoutputpath'),\n  },\n  resourceConfig: {\n    instanceCount: 1,\n    instanceType: new ec2.InstanceType(sfn.JsonPath.stringAt('$.InstanceType')),\n    volumeSize: Size.gibibytes(50),\n  }, // optional: default is 1 instance of EC2 `M4.XLarge` with `10GB` volume\n  stoppingCondition: {\n    maxRuntime: Duration.hours(2),\n  }, // optional: default is 1 hour\n});",
        "remarks": "When the job reaches the time limit, Amazon SageMaker ends the training job.",
        "stability": "stable",
        "summary": "Specifies a limit to how long a model training job can run."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.StoppingCondition",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 184
      },
      "name": "StoppingCondition",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "default": "- 1 hour",
            "stability": "stable",
            "summary": "The maximum length of time, in seconds, that the training or compilation job can run."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 190
          },
          "name": "maxRuntime",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/core.Duration"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:StoppingCondition"
    },
    "@aws-cdk/aws-stepfunctions-tasks.TaskEnvironmentVariable": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "An environment variable to be set in the container run as a task.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\nconst taskEnvironmentVariable: stepfunctions_tasks.TaskEnvironmentVariable = {\n  name: 'name',\n  value: 'value',\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.TaskEnvironmentVariable",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/ecs/run-ecs-task-base-types.ts",
        "line": 55
      },
      "name": "TaskEnvironmentVariable",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "remarks": "Use `JsonPath` class's static methods to specify name from a JSON path.",
            "stability": "stable",
            "summary": "Name for the environment variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-task-base-types.ts",
            "line": 61
          },
          "name": "name",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "remarks": "Use `JsonPath` class's static methods to specify value from a JSON path.",
            "stability": "stable",
            "summary": "Value of the environment variable."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/ecs/run-ecs-task-base-types.ts",
            "line": 68
          },
          "name": "value",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/ecs/run-ecs-task-base-types:TaskEnvironmentVariable"
    },
    "@aws-cdk/aws-stepfunctions-tasks.TransformDataSource": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTransformJob(this, 'Batch Inference', {\n  transformJobName: 'MyTransformJob',\n  modelName: 'MyModelName',\n  modelClientOptions: {\n    invocationsMaxRetries: 3,  // default is 0\n    invocationsTimeout: Duration.minutes(5),  // default is 60 seconds\n  },\n  transformInput: {\n    transformDataSource: {\n      s3DataSource: {\n        s3Uri: 's3://inputbucket/train',\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n      }\n    }\n  },\n  transformOutput: {\n    s3OutputPath: 's3://outputbucket/TransformJobOutputPath',\n  },\n  transformResources: {\n    instanceCount: 1,\n    instanceType: ec2.InstanceType.of(ec2.InstanceClass.M4, ec2.InstanceSize.XLARGE),\n  }\n});",
        "stability": "stable",
        "summary": "S3 location of the input data that the model can consume."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.TransformDataSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 548
      },
      "name": "TransformDataSource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "S3 location of the input data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 553
          },
          "name": "s3DataSource",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.TransformS3DataSource"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:TransformDataSource"
    },
    "@aws-cdk/aws-stepfunctions-tasks.TransformInput": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTransformJob(this, 'Batch Inference', {\n  transformJobName: 'MyTransformJob',\n  modelName: 'MyModelName',\n  modelClientOptions: {\n    invocationsMaxRetries: 3,  // default is 0\n    invocationsTimeout: Duration.minutes(5),  // default is 60 seconds\n  },\n  transformInput: {\n    transformDataSource: {\n      s3DataSource: {\n        s3Uri: 's3://inputbucket/train',\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n      }\n    }\n  },\n  transformOutput: {\n    s3OutputPath: 's3://outputbucket/TransformJobOutputPath',\n  },\n  transformResources: {\n    instanceCount: 1,\n    instanceType: ec2.InstanceType.of(ec2.InstanceClass.M4, ec2.InstanceSize.XLARGE),\n  }\n});",
        "stability": "stable",
        "summary": "Dataset to be transformed and the Amazon S3 location where it is stored."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.TransformInput",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 515
      },
      "name": "TransformInput",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "S3 location of the channel data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 534
          },
          "name": "transformDataSource",
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.TransformDataSource"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "NONE",
            "stability": "stable",
            "summary": "The compression type of the transform data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 522
          },
          "name": "compressionType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.CompressionType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "Multipurpose internet mail extension (MIME) type of the data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 529
          },
          "name": "contentType",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "NONE",
            "stability": "stable",
            "summary": "Method to use to split the transform job's data files into smaller batches."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 541
          },
          "name": "splitType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.SplitType"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:TransformInput"
    },
    "@aws-cdk/aws-stepfunctions-tasks.TransformOutput": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTransformJob(this, 'Batch Inference', {\n  transformJobName: 'MyTransformJob',\n  modelName: 'MyModelName',\n  modelClientOptions: {\n    invocationsMaxRetries: 3,  // default is 0\n    invocationsTimeout: Duration.minutes(5),  // default is 60 seconds\n  },\n  transformInput: {\n    transformDataSource: {\n      s3DataSource: {\n        s3Uri: 's3://inputbucket/train',\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n      }\n    }\n  },\n  transformOutput: {\n    s3OutputPath: 's3://outputbucket/TransformJobOutputPath',\n  },\n  transformResources: {\n    instanceCount: 1,\n    instanceType: ec2.InstanceType.of(ec2.InstanceClass.M4, ec2.InstanceSize.XLARGE),\n  }\n});",
        "stability": "stable",
        "summary": "S3 location where you want Amazon SageMaker to save the results from the transform job."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.TransformOutput",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 579
      },
      "name": "TransformOutput",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "S3 path where you want Amazon SageMaker to store the results of the transform job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 605
          },
          "name": "s3OutputPath",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "MIME type used to specify the output data."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 586
          },
          "name": "accept",
          "optional": true,
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "Defines how to assemble the results of the transform job as a single S3 object."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 593
          },
          "name": "assembleWith",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.AssembleWith"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- default KMS key for Amazon S3 for your role's account.",
            "stability": "stable",
            "summary": "AWS KMS key that Amazon SageMaker uses to encrypt the model artifacts at rest using Amazon S3 server-side encryption."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 600
          },
          "name": "encryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:TransformOutput"
    },
    "@aws-cdk/aws-stepfunctions-tasks.TransformResources": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTransformJob(this, 'Batch Inference', {\n  transformJobName: 'MyTransformJob',\n  modelName: 'MyModelName',\n  modelClientOptions: {\n    invocationsMaxRetries: 3,  // default is 0\n    invocationsTimeout: Duration.minutes(5),  // default is 60 seconds\n  },\n  transformInput: {\n    transformDataSource: {\n      s3DataSource: {\n        s3Uri: 's3://inputbucket/train',\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n      }\n    }\n  },\n  transformOutput: {\n    s3OutputPath: 's3://outputbucket/TransformJobOutputPath',\n  },\n  transformResources: {\n    instanceCount: 1,\n    instanceType: ec2.InstanceType.of(ec2.InstanceClass.M4, ec2.InstanceSize.XLARGE),\n  }\n});",
        "stability": "stable",
        "summary": "ML compute instances for the transform job."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.TransformResources",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 612
      },
      "name": "TransformResources",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Number of ML compute instances to use in the transform job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 617
          },
          "name": "instanceCount",
          "type": {
            "primitive": "number"
          }
        },
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "ML compute instance type for the transform job."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 622
          },
          "name": "instanceType",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.InstanceType"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- None",
            "stability": "stable",
            "summary": "AWS KMS key that Amazon SageMaker uses to encrypt data on the storage volume attached to the ML compute instance(s)."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 629
          },
          "name": "volumeEncryptionKey",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-kms.IKey"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:TransformResources"
    },
    "@aws-cdk/aws-stepfunctions-tasks.TransformS3DataSource": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.SageMakerCreateTransformJob(this, 'Batch Inference', {\n  transformJobName: 'MyTransformJob',\n  modelName: 'MyModelName',\n  modelClientOptions: {\n    invocationsMaxRetries: 3,  // default is 0\n    invocationsTimeout: Duration.minutes(5),  // default is 60 seconds\n  },\n  transformInput: {\n    transformDataSource: {\n      s3DataSource: {\n        s3Uri: 's3://inputbucket/train',\n        s3DataType: tasks.S3DataType.S3_PREFIX,\n      }\n    }\n  },\n  transformOutput: {\n    s3OutputPath: 's3://outputbucket/TransformJobOutputPath',\n  },\n  transformResources: {\n    instanceCount: 1,\n    instanceType: ec2.InstanceType.of(ec2.InstanceClass.M4, ec2.InstanceSize.XLARGE),\n  }\n});",
        "stability": "stable",
        "summary": "Location of the channel data."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.TransformS3DataSource",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 560
      },
      "name": "TransformS3DataSource",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "Identifies either a key name prefix or a manifest."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 572
          },
          "name": "s3Uri",
          "type": {
            "primitive": "string"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "'S3Prefix'",
            "stability": "stable",
            "summary": "S3 Data Type."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 567
          },
          "name": "s3DataType",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-stepfunctions-tasks.S3DataType"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:TransformS3DataSource"
    },
    "@aws-cdk/aws-stepfunctions-tasks.VirtualClusterInput": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "docs": {
        "custom": {
          "exampleMetadata": "infused"
        },
        "example": "new tasks.EmrContainersStartJobRun(this, 'EMR Containers Start Job Run', {\n  virtualCluster: tasks.VirtualClusterInput.fromVirtualClusterId('de92jdei2910fwedz'),\n  releaseLabel: tasks.ReleaseLabel.EMR_6_2_0,\n  jobName: 'EMR-Containers-Job',\n  jobDriver: {\n    sparkSubmitJobDriver: {\n      entryPoint: sfn.TaskInput.fromText('local:///usr/lib/spark/examples/src/main/python/pi.py'),\n    },\n  },\n  applicationConfig: [{\n    classification: tasks.Classification.SPARK_DEFAULTS,\n    properties: {\n      'spark.executor.instances': '1',\n      'spark.executor.memory': '512M',\n    },\n  }],\n});",
        "stability": "stable",
        "summary": "Class that returns a virtual cluster's id depending on input type."
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.VirtualClusterInput",
      "kind": "class",
      "locationInModule": {
        "filename": "lib/emrcontainers/start-job-run.ts",
        "line": 660
      },
      "methods": [
        {
          "docs": {
            "stability": "stable",
            "summary": "Input for a virtualClusterId from a Task Input."
          },
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 664
          },
          "name": "fromTaskInput",
          "parameters": [
            {
              "name": "taskInput",
              "type": {
                "fqn": "@aws-cdk/aws-stepfunctions.TaskInput"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.VirtualClusterInput"
            }
          },
          "static": true
        },
        {
          "docs": {
            "stability": "stable",
            "summary": "Input for virtualClusterId from a literal string."
          },
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 671
          },
          "name": "fromVirtualClusterId",
          "parameters": [
            {
              "name": "virtualClusterId",
              "type": {
                "primitive": "string"
              }
            }
          ],
          "returns": {
            "type": {
              "fqn": "@aws-cdk/aws-stepfunctions-tasks.VirtualClusterInput"
            }
          },
          "static": true
        }
      ],
      "name": "VirtualClusterInput",
      "properties": [
        {
          "docs": {
            "stability": "stable",
            "summary": "The VirtualCluster Id."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/emrcontainers/start-job-run.ts",
            "line": 680
          },
          "name": "id",
          "type": {
            "primitive": "string"
          }
        }
      ],
      "symbolId": "lib/emrcontainers/start-job-run:VirtualClusterInput"
    },
    "@aws-cdk/aws-stepfunctions-tasks.VpcConfig": {
      "assembly": "@aws-cdk/aws-stepfunctions-tasks",
      "datatype": true,
      "docs": {
        "stability": "stable",
        "summary": "Specifies the VPC that you want your Amazon SageMaker training job to connect to.",
        "example": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as stepfunctions_tasks from '@aws-cdk/aws-stepfunctions-tasks';\n\ndeclare const subnet: ec2.Subnet;\ndeclare const subnetFilter: ec2.SubnetFilter;\ndeclare const vpc: ec2.Vpc;\nconst vpcConfig: stepfunctions_tasks.VpcConfig = {\n  vpc: vpc,\n\n  // the properties below are optional\n  subnets: {\n    availabilityZones: ['availabilityZones'],\n    onePerAz: false,\n    subnetFilters: [subnetFilter],\n    subnetGroupName: 'subnetGroupName',\n    subnetName: 'subnetName',\n    subnets: [subnet],\n    subnetType: ec2.SubnetType.ISOLATED,\n  },\n};",
        "custom": {
          "exampleMetadata": "fixture=_generated"
        }
      },
      "fqn": "@aws-cdk/aws-stepfunctions-tasks.VpcConfig",
      "kind": "interface",
      "locationInModule": {
        "filename": "lib/sagemaker/base-types.ts",
        "line": 240
      },
      "name": "VpcConfig",
      "properties": [
        {
          "abstract": true,
          "docs": {
            "stability": "stable",
            "summary": "VPC."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 244
          },
          "name": "vpc",
          "type": {
            "fqn": "@aws-cdk/aws-ec2.IVpc"
          }
        },
        {
          "abstract": true,
          "docs": {
            "default": "- Private Subnets are selected",
            "stability": "stable",
            "summary": "VPC subnets."
          },
          "immutable": true,
          "locationInModule": {
            "filename": "lib/sagemaker/base-types.ts",
            "line": 251
          },
          "name": "subnets",
          "optional": true,
          "type": {
            "fqn": "@aws-cdk/aws-ec2.SubnetSelection"
          }
        }
      ],
      "symbolId": "lib/sagemaker/base-types:VpcConfig"
    }
  },
  "version": "1.152.0",
  "fingerprint": "**********"
}
