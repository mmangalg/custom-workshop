"use strict";
var _a;
Object.defineProperty(exports, "__esModule", { value: true });
exports.BitBucketSourceAction = void 0;
const jsiiDeprecationWarnings = require("../../.warnings.jsii.js");
const JSII_RTTI_SYMBOL_1 = Symbol.for("jsii.rtti");
const source_action_1 = require("../codestar-connections/source-action");
/**
 * A CodePipeline source action for BitBucket.
 *
 * @deprecated use CodeStarConnectionsSourceAction instead
 */
class BitBucketSourceAction {
    constructor(props) {
        try {
            jsiiDeprecationWarnings.print("@aws-cdk/aws-codepipeline-actions.BitBucketSourceAction", "use CodeStarConnectionsSourceAction instead");
            jsiiDeprecationWarnings._aws_cdk_aws_codepipeline_actions_BitBucketSourceActionProps(props);
        }
        catch (error) {
            if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
                Error.captureStackTrace(error, this.constructor);
            }
            throw error;
        }
        this.codeStarConnectionsSourceAction = new source_action_1.CodeStarConnectionsSourceAction(props);
    }
    get actionProperties() {
        try {
            jsiiDeprecationWarnings.print("@aws-cdk/aws-codepipeline-actions.BitBucketSourceAction#actionProperties", "use CodeStarConnectionsSourceAction instead");
        }
        catch (error) {
            if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
                Error.captureStackTrace(error, jsiiDeprecationWarnings.getPropertyDescriptor(this, "actionProperties").get);
            }
            throw error;
        }
        return this.codeStarConnectionsSourceAction.actionProperties;
    }
    bind(scope, stage, options) {
        try {
            jsiiDeprecationWarnings.print("@aws-cdk/aws-codepipeline-actions.BitBucketSourceAction#bind", "use CodeStarConnectionsSourceAction instead");
        }
        catch (error) {
            if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
                Error.captureStackTrace(error, this.bind);
            }
            throw error;
        }
        return this.codeStarConnectionsSourceAction.bind(scope, stage, options);
    }
    onStateChange(name, target, options) {
        try {
            jsiiDeprecationWarnings.print("@aws-cdk/aws-codepipeline-actions.BitBucketSourceAction#onStateChange", "use CodeStarConnectionsSourceAction instead");
        }
        catch (error) {
            if (process.env.JSII_DEBUG !== "1" && error.name === "DeprecationError") {
                Error.captureStackTrace(error, this.onStateChange);
            }
            throw error;
        }
        return this.codeStarConnectionsSourceAction.onStateChange(name, target, options);
    }
}
exports.BitBucketSourceAction = BitBucketSourceAction;
_a = JSII_RTTI_SYMBOL_1;
BitBucketSourceAction[_a] = { fqn: "@aws-cdk/aws-codepipeline-actions.BitBucketSourceAction", version: "1.153.1" };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic291cmNlLWFjdGlvbi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInNvdXJjZS1hY3Rpb24udHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBRUEseUVBQThIO0FBYzlIOzs7O0dBSUc7QUFDSCxNQUFhLHFCQUFxQjtJQUdoQyxZQUFZLEtBQWlDOzs7Ozs7Ozs7OztRQUMzQyxJQUFJLENBQUMsK0JBQStCLEdBQUcsSUFBSSwrQ0FBK0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztLQUNuRjtJQUVELElBQVcsZ0JBQWdCOzs7Ozs7Ozs7O1FBQ3pCLE9BQU8sSUFBSSxDQUFDLCtCQUErQixDQUFDLGdCQUFnQixDQUFDO0tBQzlEO0lBRU0sSUFBSSxDQUFDLEtBQWdCLEVBQUUsS0FBMEIsRUFBRSxPQUF1Qzs7Ozs7Ozs7OztRQUMvRixPQUFPLElBQUksQ0FBQywrQkFBK0IsQ0FBQyxJQUFJLENBQUMsS0FBSyxFQUFFLEtBQUssRUFBRSxPQUFPLENBQUMsQ0FBQztLQUN6RTtJQUVNLGFBQWEsQ0FBQyxJQUFZLEVBQUUsTUFBMkIsRUFBRSxPQUEwQjs7Ozs7Ozs7OztRQUN4RixPQUFPLElBQUksQ0FBQywrQkFBK0IsQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLE1BQU0sRUFBRSxPQUFPLENBQUMsQ0FBQztLQUNsRjs7QUFqQkgsc0RBa0JDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgY29kZXBpcGVsaW5lIGZyb20gJ0Bhd3MtY2RrL2F3cy1jb2RlcGlwZWxpbmUnO1xuaW1wb3J0ICogYXMgZXZlbnRzIGZyb20gJ0Bhd3MtY2RrL2F3cy1ldmVudHMnO1xuaW1wb3J0IHsgQ29kZVN0YXJDb25uZWN0aW9uc1NvdXJjZUFjdGlvbiwgQ29kZVN0YXJDb25uZWN0aW9uc1NvdXJjZUFjdGlvblByb3BzIH0gZnJvbSAnLi4vY29kZXN0YXItY29ubmVjdGlvbnMvc291cmNlLWFjdGlvbic7XG5cbi8vIGtlZXAgdGhpcyBpbXBvcnQgc2VwYXJhdGUgZnJvbSBvdGhlciBpbXBvcnRzIHRvIHJlZHVjZSBjaGFuY2UgZm9yIG1lcmdlIGNvbmZsaWN0cyB3aXRoIHYyLW1haW5cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1kdXBsaWNhdGUtaW1wb3J0cywgaW1wb3J0L29yZGVyXG5pbXBvcnQgeyBDb25zdHJ1Y3QgfSBmcm9tICdAYXdzLWNkay9jb3JlJztcblxuLyoqXG4gKiBDb25zdHJ1Y3Rpb24gcHJvcGVydGllcyBmb3Ige0BsaW5rIEJpdEJ1Y2tldFNvdXJjZUFjdGlvbn0uXG4gKlxuICogQGRlcHJlY2F0ZWQgdXNlIENvZGVTdGFyQ29ubmVjdGlvbnNTb3VyY2VBY3Rpb25Qcm9wcyBpbnN0ZWFkXG4gKi9cbmV4cG9ydCBpbnRlcmZhY2UgQml0QnVja2V0U291cmNlQWN0aW9uUHJvcHMgZXh0ZW5kcyBDb2RlU3RhckNvbm5lY3Rpb25zU291cmNlQWN0aW9uUHJvcHMge1xufVxuXG4vKipcbiAqIEEgQ29kZVBpcGVsaW5lIHNvdXJjZSBhY3Rpb24gZm9yIEJpdEJ1Y2tldC5cbiAqXG4gKiBAZGVwcmVjYXRlZCB1c2UgQ29kZVN0YXJDb25uZWN0aW9uc1NvdXJjZUFjdGlvbiBpbnN0ZWFkXG4gKi9cbmV4cG9ydCBjbGFzcyBCaXRCdWNrZXRTb3VyY2VBY3Rpb24gaW1wbGVtZW50cyBjb2RlcGlwZWxpbmUuSUFjdGlvbiB7XG4gIHByaXZhdGUgcmVhZG9ubHkgY29kZVN0YXJDb25uZWN0aW9uc1NvdXJjZUFjdGlvbjogQ29kZVN0YXJDb25uZWN0aW9uc1NvdXJjZUFjdGlvbjtcblxuICBjb25zdHJ1Y3Rvcihwcm9wczogQml0QnVja2V0U291cmNlQWN0aW9uUHJvcHMpIHtcbiAgICB0aGlzLmNvZGVTdGFyQ29ubmVjdGlvbnNTb3VyY2VBY3Rpb24gPSBuZXcgQ29kZVN0YXJDb25uZWN0aW9uc1NvdXJjZUFjdGlvbihwcm9wcyk7XG4gIH1cblxuICBwdWJsaWMgZ2V0IGFjdGlvblByb3BlcnRpZXMoKTogY29kZXBpcGVsaW5lLkFjdGlvblByb3BlcnRpZXMge1xuICAgIHJldHVybiB0aGlzLmNvZGVTdGFyQ29ubmVjdGlvbnNTb3VyY2VBY3Rpb24uYWN0aW9uUHJvcGVydGllcztcbiAgfVxuXG4gIHB1YmxpYyBiaW5kKHNjb3BlOiBDb25zdHJ1Y3QsIHN0YWdlOiBjb2RlcGlwZWxpbmUuSVN0YWdlLCBvcHRpb25zOiBjb2RlcGlwZWxpbmUuQWN0aW9uQmluZE9wdGlvbnMpOiBjb2RlcGlwZWxpbmUuQWN0aW9uQ29uZmlnIHtcbiAgICByZXR1cm4gdGhpcy5jb2RlU3RhckNvbm5lY3Rpb25zU291cmNlQWN0aW9uLmJpbmQoc2NvcGUsIHN0YWdlLCBvcHRpb25zKTtcbiAgfVxuXG4gIHB1YmxpYyBvblN0YXRlQ2hhbmdlKG5hbWU6IHN0cmluZywgdGFyZ2V0PzogZXZlbnRzLklSdWxlVGFyZ2V0LCBvcHRpb25zPzogZXZlbnRzLlJ1bGVQcm9wcyk6IGV2ZW50cy5SdWxlIHtcbiAgICByZXR1cm4gdGhpcy5jb2RlU3RhckNvbm5lY3Rpb25zU291cmNlQWN0aW9uLm9uU3RhdGVDaGFuZ2UobmFtZSwgdGFyZ2V0LCBvcHRpb25zKTtcbiAgfVxufVxuIl19