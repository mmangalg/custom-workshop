{
  "version": "2",
  "toolVersion": "1.55.1",
  "snippets": {
    "eb9510abd9bec1e2139ee2263403695f9c09f8b87c66a2f1f967eccddc714f0b": {
      "translations": {
        "python": {
          "source": "# bucket: s3.Bucket\n\nglue.Job(self, \"ScalaSparkEtlJob\",\n    executable=glue.JobExecutable.scala_etl(\n        glue_version=glue.GlueVersion.V2_0,\n        script=glue.Code.from_bucket(bucket, \"src/com/example/HelloWorld.scala\"),\n        class_name=\"com.example.HelloWorld\",\n        extra_jars=[glue.Code.from_bucket(bucket, \"jars/HelloWorld.jar\")]\n    ),\n    description=\"an example Scala ETL job\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket;\n\nnew Job(this, \"ScalaSparkEtlJob\", new JobProps {\n    Executable = JobExecutable.ScalaEtl(new ScalaJobExecutableProps {\n        GlueVersion = GlueVersion.V2_0,\n        Script = Code.FromBucket(bucket, \"src/com/example/HelloWorld.scala\"),\n        ClassName = \"com.example.HelloWorld\",\n        ExtraJars = new [] { Code.FromBucket(bucket, \"jars/HelloWorld.jar\") }\n    }),\n    Description = \"an example Scala ETL job\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket;\n\nJob.Builder.create(this, \"ScalaSparkEtlJob\")\n        .executable(JobExecutable.scalaEtl(ScalaJobExecutableProps.builder()\n                .glueVersion(GlueVersion.V2_0)\n                .script(Code.fromBucket(bucket, \"src/com/example/HelloWorld.scala\"))\n                .className(\"com.example.HelloWorld\")\n                .extraJars(List.of(Code.fromBucket(bucket, \"jars/HelloWorld.jar\")))\n                .build()))\n        .description(\"an example Scala ETL job\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var bucket bucket\nglue.NewJob(this, jsii.String(\"ScalaSparkEtlJob\"), &jobProps{\n\texecutable: glue.jobExecutable.scalaEtl(&scalaJobExecutableProps{\n\t\tglueVersion: glue.glueVersion_V2_0(),\n\t\tscript: glue.code.fromBucket(bucket, jsii.String(\"src/com/example/HelloWorld.scala\")),\n\t\tclassName: jsii.String(\"com.example.HelloWorld\"),\n\t\textraJars: []*code{\n\t\t\tglue.*code.fromBucket(bucket, jsii.String(\"jars/HelloWorld.jar\")),\n\t\t},\n\t}),\n\tdescription: jsii.String(\"an example Scala ETL job\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const bucket: s3.Bucket;\nnew glue.Job(this, 'ScalaSparkEtlJob', {\n  executable: glue.JobExecutable.scalaEtl({\n    glueVersion: glue.GlueVersion.V2_0,\n    script: glue.Code.fromBucket(bucket, 'src/com/example/HelloWorld.scala'),\n    className: 'com.example.HelloWorld',\n    extraJars: [glue.Code.fromBucket(bucket, 'jars/HelloWorld.jar')],\n  }),\n  description: 'an example Scala ETL job',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-glue"
        },
        "field": {
          "field": "markdown",
          "line": 44
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.Code",
        "@aws-cdk/aws-glue.Code#fromBucket",
        "@aws-cdk/aws-glue.GlueVersion",
        "@aws-cdk/aws-glue.GlueVersion#V2_0",
        "@aws-cdk/aws-glue.Job",
        "@aws-cdk/aws-glue.JobExecutable",
        "@aws-cdk/aws-glue.JobExecutable#scalaEtl",
        "@aws-cdk/aws-glue.JobProps",
        "@aws-cdk/aws-glue.ScalaJobExecutableProps",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Job(this, 'ScalaSparkEtlJob', {\n  executable: glue.JobExecutable.scalaEtl({\n    glueVersion: glue.GlueVersion.V2_0,\n    script: glue.Code.fromBucket(bucket, 'src/com/example/HelloWorld.scala'),\n    className: 'com.example.HelloWorld',\n    extraJars: [glue.Code.fromBucket(bucket, 'jars/HelloWorld.jar')],\n  }),\n  description: 'an example Scala ETL job',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 25,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "194": 9,
        "196": 3,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "10674e350ddfee05411c24d2bb6d70bde0157ed986671f2dbe72c6677586c640"
    },
    "001c20f2702acda64ecde36cedfa3c6f6b59199ec19faea71f92178d922fb11b": {
      "translations": {
        "python": {
          "source": "glue.Job(self, \"PythonSparkStreamingJob\",\n    executable=glue.JobExecutable.python_streaming(\n        glue_version=glue.GlueVersion.V2_0,\n        python_version=glue.PythonVersion.THREE,\n        script=glue.Code.from_asset(path.join(__dirname, \"job-script/hello_world.py\"))\n    ),\n    description=\"an example Python Streaming job\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Job(this, \"PythonSparkStreamingJob\", new JobProps {\n    Executable = JobExecutable.PythonStreaming(new PythonSparkJobExecutableProps {\n        GlueVersion = GlueVersion.V2_0,\n        PythonVersion = PythonVersion.THREE,\n        Script = Code.FromAsset(Join(__dirname, \"job-script/hello_world.py\"))\n    }),\n    Description = \"an example Python Streaming job\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Job.Builder.create(this, \"PythonSparkStreamingJob\")\n        .executable(JobExecutable.pythonStreaming(PythonSparkJobExecutableProps.builder()\n                .glueVersion(GlueVersion.V2_0)\n                .pythonVersion(PythonVersion.THREE)\n                .script(Code.fromAsset(join(__dirname, \"job-script/hello_world.py\")))\n                .build()))\n        .description(\"an example Python Streaming job\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "glue.NewJob(this, jsii.String(\"PythonSparkStreamingJob\"), &jobProps{\n\texecutable: glue.jobExecutable.pythonStreaming(&pythonSparkJobExecutableProps{\n\t\tglueVersion: glue.glueVersion_V2_0(),\n\t\tpythonVersion: glue.pythonVersion_THREE,\n\t\tscript: glue.code.fromAsset(path.join(__dirname, jsii.String(\"job-script/hello_world.py\"))),\n\t}),\n\tdescription: jsii.String(\"an example Python Streaming job\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "new glue.Job(this, 'PythonSparkStreamingJob', {\n  executable: glue.JobExecutable.pythonStreaming({\n    glueVersion: glue.GlueVersion.V2_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromAsset(path.join(__dirname, 'job-script/hello_world.py')),\n  }),\n  description: 'an example Python Streaming job',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-glue"
        },
        "field": {
          "field": "markdown",
          "line": 61
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.Code",
        "@aws-cdk/aws-glue.Code#fromAsset",
        "@aws-cdk/aws-glue.GlueVersion",
        "@aws-cdk/aws-glue.GlueVersion#V2_0",
        "@aws-cdk/aws-glue.Job",
        "@aws-cdk/aws-glue.JobExecutable",
        "@aws-cdk/aws-glue.JobExecutable#pythonStreaming",
        "@aws-cdk/aws-glue.JobProps",
        "@aws-cdk/aws-glue.PythonSparkJobExecutableProps",
        "@aws-cdk/aws-glue.PythonVersion",
        "@aws-cdk/aws-glue.PythonVersion#THREE",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew glue.Job(this, 'PythonSparkStreamingJob', {\n  executable: glue.JobExecutable.pythonStreaming({\n    glueVersion: glue.GlueVersion.V2_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromAsset(path.join(__dirname, 'job-script/hello_world.py')),\n  }),\n  description: 'an example Python Streaming job',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 22,
        "104": 1,
        "193": 2,
        "194": 10,
        "196": 3,
        "197": 1,
        "226": 1,
        "281": 5
      },
      "fqnsFingerprint": "32a34c352e022f107a767dbbd6c1ecc8541050cf498e5386a51366b5ca072838"
    },
    "793d0e3000484ae3786ce235299ea876e86b763fc828d843d3ea52b8abc3920b": {
      "translations": {
        "python": {
          "source": "# bucket: s3.Bucket\n\nglue.Job(self, \"PythonShellJob\",\n    executable=glue.JobExecutable.python_shell(\n        glue_version=glue.GlueVersion.V1_0,\n        python_version=glue.PythonVersion.THREE,\n        script=glue.Code.from_bucket(bucket, \"script.py\")\n    ),\n    description=\"an example Python Shell job\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket;\n\nnew Job(this, \"PythonShellJob\", new JobProps {\n    Executable = JobExecutable.PythonShell(new PythonShellExecutableProps {\n        GlueVersion = GlueVersion.V1_0,\n        PythonVersion = PythonVersion.THREE,\n        Script = Code.FromBucket(bucket, \"script.py\")\n    }),\n    Description = \"an example Python Shell job\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket;\n\nJob.Builder.create(this, \"PythonShellJob\")\n        .executable(JobExecutable.pythonShell(PythonShellExecutableProps.builder()\n                .glueVersion(GlueVersion.V1_0)\n                .pythonVersion(PythonVersion.THREE)\n                .script(Code.fromBucket(bucket, \"script.py\"))\n                .build()))\n        .description(\"an example Python Shell job\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var bucket bucket\nglue.NewJob(this, jsii.String(\"PythonShellJob\"), &jobProps{\n\texecutable: glue.jobExecutable.pythonShell(&pythonShellExecutableProps{\n\t\tglueVersion: glue.glueVersion_V1_0(),\n\t\tpythonVersion: glue.pythonVersion_THREE,\n\t\tscript: glue.code.fromBucket(bucket, jsii.String(\"script.py\")),\n\t}),\n\tdescription: jsii.String(\"an example Python Shell job\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const bucket: s3.Bucket;\nnew glue.Job(this, 'PythonShellJob', {\n  executable: glue.JobExecutable.pythonShell({\n    glueVersion: glue.GlueVersion.V1_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromBucket(bucket, 'script.py'),\n  }),\n  description: 'an example Python Shell job',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-glue"
        },
        "field": {
          "field": "markdown",
          "line": 77
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.Code",
        "@aws-cdk/aws-glue.Code#fromBucket",
        "@aws-cdk/aws-glue.GlueVersion",
        "@aws-cdk/aws-glue.GlueVersion#V1_0",
        "@aws-cdk/aws-glue.Job",
        "@aws-cdk/aws-glue.JobExecutable",
        "@aws-cdk/aws-glue.JobExecutable#pythonShell",
        "@aws-cdk/aws-glue.JobProps",
        "@aws-cdk/aws-glue.PythonShellExecutableProps",
        "@aws-cdk/aws-glue.PythonVersion",
        "@aws-cdk/aws-glue.PythonVersion#THREE",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Job(this, 'PythonShellJob', {\n  executable: glue.JobExecutable.pythonShell({\n    glueVersion: glue.GlueVersion.V1_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromBucket(bucket, 'script.py'),\n  }),\n  description: 'an example Python Shell job',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 23,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 9,
        "196": 2,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "f4db3ad70afb1a025f6eb2c778539d099a36c20790a03b2badd556eb57fd15d4"
    },
    "51bf8a3f0ef84741b8482f647b472f027610a71aeb5f41923a975cceff97004c": {
      "translations": {
        "python": {
          "source": "# security_group: ec2.SecurityGroup\n# subnet: ec2.Subnet\n\nglue.Connection(self, \"MyConnection\",\n    type=glue.ConnectionType.NETWORK,\n    # The security groups granting AWS Glue inbound access to the data source within the VPC\n    security_groups=[security_group],\n    # The VPC subnet which contains the data source\n    subnet=subnet\n)",
          "version": "2"
        },
        "csharp": {
          "source": "SecurityGroup securityGroup;\nSubnet subnet;\n\nnew Connection(this, \"MyConnection\", new ConnectionProps {\n    Type = ConnectionType.NETWORK,\n    // The security groups granting AWS Glue inbound access to the data source within the VPC\n    SecurityGroups = new [] { securityGroup },\n    // The VPC subnet which contains the data source\n    Subnet = subnet\n});",
          "version": "1"
        },
        "java": {
          "source": "SecurityGroup securityGroup;\nSubnet subnet;\n\nConnection.Builder.create(this, \"MyConnection\")\n        .type(ConnectionType.NETWORK)\n        // The security groups granting AWS Glue inbound access to the data source within the VPC\n        .securityGroups(List.of(securityGroup))\n        // The VPC subnet which contains the data source\n        .subnet(subnet)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var securityGroup securityGroup\nvar subnet subnet\nglue.NewConnection(this, jsii.String(\"MyConnection\"), &connectionProps{\n\ttype: glue.connectionType_NETWORK(),\n\t// The security groups granting AWS Glue inbound access to the data source within the VPC\n\tsecurityGroups: []iSecurityGroup{\n\t\tsecurityGroup,\n\t},\n\t// The VPC subnet which contains the data source\n\tsubnet: subnet,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\nnew glue.Connection(this, 'MyConnection', {\n  type: glue.ConnectionType.NETWORK,\n  // The security groups granting AWS Glue inbound access to the data source within the VPC\n  securityGroups: [securityGroup],\n  // The VPC subnet which contains the data source\n  subnet,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-glue"
        },
        "field": {
          "field": "markdown",
          "line": 95
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.ISubnet",
        "@aws-cdk/aws-glue.Connection",
        "@aws-cdk/aws-glue.ConnectionProps",
        "@aws-cdk/aws-glue.ConnectionType",
        "@aws-cdk/aws-glue.ConnectionType#NETWORK",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Connection(this, 'MyConnection', {\n  type: glue.ConnectionType.NETWORK,\n  // The security groups granting AWS Glue inbound access to the data source within the VPC\n  securityGroups: [securityGroup],\n  // The VPC subnet which contains the data source\n  subnet,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 15,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 2,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "20b4e280eb6c79bf6fd78afc9fd8d939fd41546b2ba7cf3a23a69be4dc5edabf"
    },
    "7ff123226da0a03c078d2fddc70c1f2f4f13a6ed8579a25a9abb6261ae251a90": {
      "translations": {
        "python": {
          "source": "glue.SecurityConfiguration(self, \"MySecurityConfiguration\",\n    security_configuration_name=\"name\",\n    cloud_watch_encryption=glue.CloudWatchEncryption(\n        mode=glue.CloudWatchEncryptionMode.KMS\n    ),\n    job_bookmarks_encryption=glue.JobBookmarksEncryption(\n        mode=glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    ),\n    s3_encryption=glue.S3Encryption(\n        mode=glue.S3EncryptionMode.KMS\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new SecurityConfiguration(this, \"MySecurityConfiguration\", new SecurityConfigurationProps {\n    SecurityConfigurationName = \"name\",\n    CloudWatchEncryption = new CloudWatchEncryption {\n        Mode = CloudWatchEncryptionMode.KMS\n    },\n    JobBookmarksEncryption = new JobBookmarksEncryption {\n        Mode = JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    },\n    S3Encryption = new S3Encryption {\n        Mode = S3EncryptionMode.KMS\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "SecurityConfiguration.Builder.create(this, \"MySecurityConfiguration\")\n        .securityConfigurationName(\"name\")\n        .cloudWatchEncryption(CloudWatchEncryption.builder()\n                .mode(CloudWatchEncryptionMode.KMS)\n                .build())\n        .jobBookmarksEncryption(JobBookmarksEncryption.builder()\n                .mode(JobBookmarksEncryptionMode.CLIENT_SIDE_KMS)\n                .build())\n        .s3Encryption(S3Encryption.builder()\n                .mode(S3EncryptionMode.KMS)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "glue.NewSecurityConfiguration(this, jsii.String(\"MySecurityConfiguration\"), &securityConfigurationProps{\n\tsecurityConfigurationName: jsii.String(\"name\"),\n\tcloudWatchEncryption: &cloudWatchEncryption{\n\t\tmode: glue.cloudWatchEncryptionMode_KMS,\n\t},\n\tjobBookmarksEncryption: &jobBookmarksEncryption{\n\t\tmode: glue.jobBookmarksEncryptionMode_CLIENT_SIDE_KMS,\n\t},\n\ts3Encryption: &s3Encryption{\n\t\tmode: glue.s3EncryptionMode_KMS,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "new glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-glue"
        },
        "field": {
          "field": "markdown",
          "line": 115
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CloudWatchEncryption",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode#KMS",
        "@aws-cdk/aws-glue.JobBookmarksEncryption",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode#CLIENT_SIDE_KMS",
        "@aws-cdk/aws-glue.S3Encryption",
        "@aws-cdk/aws-glue.S3EncryptionMode",
        "@aws-cdk/aws-glue.S3EncryptionMode#KMS",
        "@aws-cdk/aws-glue.SecurityConfiguration",
        "@aws-cdk/aws-glue.SecurityConfigurationProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 18,
        "104": 1,
        "193": 4,
        "194": 7,
        "197": 1,
        "226": 1,
        "281": 7
      },
      "fqnsFingerprint": "c7cd61f9ca64e3a86fc7eb84139957d1d9fe135142c6ea30a7793e9d4764635e"
    },
    "258ce155ce98dd9f2322273c82faf8dafbc5d48c1ec0929943923d3648b90de7": {
      "translations": {
        "python": {
          "source": "# key: kms.Key\n\nglue.SecurityConfiguration(self, \"MySecurityConfiguration\",\n    security_configuration_name=\"name\",\n    cloud_watch_encryption=glue.CloudWatchEncryption(\n        mode=glue.CloudWatchEncryptionMode.KMS,\n        kms_key=key\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Key key;\n\nnew SecurityConfiguration(this, \"MySecurityConfiguration\", new SecurityConfigurationProps {\n    SecurityConfigurationName = \"name\",\n    CloudWatchEncryption = new CloudWatchEncryption {\n        Mode = CloudWatchEncryptionMode.KMS,\n        KmsKey = key\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "Key key;\n\nSecurityConfiguration.Builder.create(this, \"MySecurityConfiguration\")\n        .securityConfigurationName(\"name\")\n        .cloudWatchEncryption(CloudWatchEncryption.builder()\n                .mode(CloudWatchEncryptionMode.KMS)\n                .kmsKey(key)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var key key\nglue.NewSecurityConfiguration(this, jsii.String(\"MySecurityConfiguration\"), &securityConfigurationProps{\n\tsecurityConfigurationName: jsii.String(\"name\"),\n\tcloudWatchEncryption: &cloudWatchEncryption{\n\t\tmode: glue.cloudWatchEncryptionMode_KMS,\n\t\tkmsKey: key,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const key: kms.Key;\nnew glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n    kmsKey: key,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-glue"
        },
        "field": {
          "field": "markdown",
          "line": 132
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CloudWatchEncryption",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode#KMS",
        "@aws-cdk/aws-glue.SecurityConfiguration",
        "@aws-cdk/aws-glue.SecurityConfigurationProps",
        "@aws-cdk/aws-kms.IKey",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const key: kms.Key;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n    kmsKey: key,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 13,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 3,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "a39439e85c5563ed2e8aff7dc01018a4e48aa3916f8facc28ea0cdae7ded4ec1"
    },
    "a8c358b2bc7237777a5835914ecfe85a9c25406a6a5c1283b79d940d9cd8fbfe": {
      "translations": {
        "python": {
          "source": "glue.Database(self, \"MyDatabase\",\n    database_name=\"my_database\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Database(this, \"MyDatabase\", new DatabaseProps {\n    DatabaseName = \"my_database\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Database.Builder.create(this, \"MyDatabase\")\n        .databaseName(\"my_database\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "glue.NewDatabase(this, jsii.String(\"MyDatabase\"), &databaseProps{\n\tdatabaseName: jsii.String(\"my_database\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "new glue.Database(this, 'MyDatabase', {\n  databaseName: 'my_database',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-glue"
        },
        "field": {
          "field": "markdown",
          "line": 149
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.Database",
        "@aws-cdk/aws-glue.DatabaseProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew glue.Database(this, 'MyDatabase', {\n  databaseName: 'my_database',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 3,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 1
      },
      "fqnsFingerprint": "128e978528713814c452f9d87b02dd6791940e8bb731863f1e11b26b40900d1d"
    },
    "94c36e2a0792612ca9a74244105da69c41e5e81e40a0b95e99331a9e6ad13789": {
      "translations": {
        "python": {
          "source": "# my_database: glue.Database\n\nglue.Table(self, \"MyTable\",\n    database=my_database,\n    table_name=\"my_table\",\n    columns=[glue.Column(\n        name=\"col1\",\n        type=glue.Schema.STRING\n    ), glue.Column(\n        name=\"col2\",\n        type=glue.Schema.array(glue.Schema.STRING),\n        comment=\"col2 is an array of strings\"\n    )],\n    data_format=glue.DataFormat.JSON\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Database myDatabase;\n\nnew Table(this, \"MyTable\", new TableProps {\n    Database = myDatabase,\n    TableName = \"my_table\",\n    Columns = new [] { new Column {\n        Name = \"col1\",\n        Type = Schema.STRING\n    }, new Column {\n        Name = \"col2\",\n        Type = Schema.Array(Schema.STRING),\n        Comment = \"col2 is an array of strings\"\n    } },\n    DataFormat = DataFormat.JSON\n});",
          "version": "1"
        },
        "java": {
          "source": "Database myDatabase;\n\nTable.Builder.create(this, \"MyTable\")\n        .database(myDatabase)\n        .tableName(\"my_table\")\n        .columns(List.of(Column.builder()\n                .name(\"col1\")\n                .type(Schema.STRING)\n                .build(), Column.builder()\n                .name(\"col2\")\n                .type(Schema.array(Schema.STRING))\n                .comment(\"col2 is an array of strings\")\n                .build()))\n        .dataFormat(DataFormat.JSON)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var myDatabase database\nglue.NewTable(this, jsii.String(\"MyTable\"), &tableProps{\n\tdatabase: myDatabase,\n\ttableName: jsii.String(\"my_table\"),\n\tcolumns: []column{\n\t\t&column{\n\t\t\tname: jsii.String(\"col1\"),\n\t\t\ttype: glue.schema_STRING(),\n\t\t},\n\t\t&column{\n\t\t\tname: jsii.String(\"col2\"),\n\t\t\ttype: glue.*schema.array(glue.*schema_STRING()),\n\t\t\tcomment: jsii.String(\"col2 is an array of strings\"),\n\t\t},\n\t},\n\tdataFormat: glue.dataFormat_JSON(),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myDatabase: glue.Database;\nnew glue.Table(this, 'MyTable', {\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }, {\n    name: 'col2',\n    type: glue.Schema.array(glue.Schema.STRING),\n    comment: 'col2 is an array of strings' // comment is optional\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-glue"
        },
        "field": {
          "field": "markdown",
          "line": 159
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.DataFormat",
        "@aws-cdk/aws-glue.DataFormat#JSON",
        "@aws-cdk/aws-glue.IDatabase",
        "@aws-cdk/aws-glue.Schema",
        "@aws-cdk/aws-glue.Schema#STRING",
        "@aws-cdk/aws-glue.Schema#array",
        "@aws-cdk/aws-glue.Table",
        "@aws-cdk/aws-glue.TableProps",
        "@aws-cdk/aws-glue.Type",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myDatabase: glue.Database;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Table(this, 'MyTable', {\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }, {\n    name: 'col2',\n    type: glue.Schema.array(glue.Schema.STRING),\n    comment: 'col2 is an array of strings' // comment is optional\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 27,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 3,
        "194": 9,
        "196": 1,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "e5f412ebf93a8eeeaaf337e4e9902c1d60335c3051844a72de20e402025570e4"
    },
    "2914855d3692b09bebd641cb64a943cdce8edd22d6fdcdb2012a19bb9208b50c": {
      "translations": {
        "python": {
          "source": "# my_bucket: s3.Bucket\n# my_database: glue.Database\n\nglue.Table(self, \"MyTable\",\n    bucket=my_bucket,\n    s3_prefix=\"my-table/\",\n    # ...\n    database=my_database,\n    table_name=\"my_table\",\n    columns=[glue.Column(\n        name=\"col1\",\n        type=glue.Schema.STRING\n    )],\n    data_format=glue.DataFormat.JSON\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket myBucket;\nDatabase myDatabase;\n\nnew Table(this, \"MyTable\", new TableProps {\n    Bucket = myBucket,\n    S3Prefix = \"my-table/\",\n    // ...\n    Database = myDatabase,\n    TableName = \"my_table\",\n    Columns = new [] { new Column {\n        Name = \"col1\",\n        Type = Schema.STRING\n    } },\n    DataFormat = DataFormat.JSON\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket myBucket;\nDatabase myDatabase;\n\nTable.Builder.create(this, \"MyTable\")\n        .bucket(myBucket)\n        .s3Prefix(\"my-table/\")\n        // ...\n        .database(myDatabase)\n        .tableName(\"my_table\")\n        .columns(List.of(Column.builder()\n                .name(\"col1\")\n                .type(Schema.STRING)\n                .build()))\n        .dataFormat(DataFormat.JSON)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var myBucket bucket\nvar myDatabase database\nglue.NewTable(this, jsii.String(\"MyTable\"), &tableProps{\n\tbucket: myBucket,\n\ts3Prefix: jsii.String(\"my-table/\"),\n\t// ...\n\tdatabase: myDatabase,\n\ttableName: jsii.String(\"my_table\"),\n\tcolumns: []column{\n\t\t&column{\n\t\t\tname: jsii.String(\"col1\"),\n\t\t\ttype: glue.schema_STRING(),\n\t\t},\n\t},\n\tdataFormat: glue.dataFormat_JSON(),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myBucket: s3.Bucket;\ndeclare const myDatabase: glue.Database;\nnew glue.Table(this, 'MyTable', {\n  bucket: myBucket,\n  s3Prefix: 'my-table/',\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-glue"
        },
        "field": {
          "field": "markdown",
          "line": 178
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.DataFormat",
        "@aws-cdk/aws-glue.DataFormat#JSON",
        "@aws-cdk/aws-glue.IDatabase",
        "@aws-cdk/aws-glue.Schema",
        "@aws-cdk/aws-glue.Schema#STRING",
        "@aws-cdk/aws-glue.Table",
        "@aws-cdk/aws-glue.TableProps",
        "@aws-cdk/aws-glue.Type",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myBucket: s3.Bucket;\ndeclare const myDatabase: glue.Database;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Table(this, 'MyTable', {\n  bucket: myBucket,\n  s3Prefix: 'my-table/',\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 4,
        "75": 24,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 2,
        "194": 5,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "2a1b8b43be5229f079f9860613cefb38c69edcc8f5b9d231d1faaf3bf6f5ba65"
    },
    "e440e3113512815573dee6fdf827e8f2dced907c0cd486538346e46b938d0e4b": {
      "translations": {
        "python": {
          "source": "# my_database: glue.Database\n\nglue.Table(self, \"MyTable\",\n    database=my_database,\n    table_name=\"my_table\",\n    columns=[glue.Column(\n        name=\"col1\",\n        type=glue.Schema.STRING\n    )],\n    partition_keys=[glue.Column(\n        name=\"year\",\n        type=glue.Schema.SMALL_INT\n    ), glue.Column(\n        name=\"month\",\n        type=glue.Schema.SMALL_INT\n    )],\n    data_format=glue.DataFormat.JSON\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Database myDatabase;\n\nnew Table(this, \"MyTable\", new TableProps {\n    Database = myDatabase,\n    TableName = \"my_table\",\n    Columns = new [] { new Column {\n        Name = \"col1\",\n        Type = Schema.STRING\n    } },\n    PartitionKeys = new [] { new Column {\n        Name = \"year\",\n        Type = Schema.SMALL_INT\n    }, new Column {\n        Name = \"month\",\n        Type = Schema.SMALL_INT\n    } },\n    DataFormat = DataFormat.JSON\n});",
          "version": "1"
        },
        "java": {
          "source": "Database myDatabase;\n\nTable.Builder.create(this, \"MyTable\")\n        .database(myDatabase)\n        .tableName(\"my_table\")\n        .columns(List.of(Column.builder()\n                .name(\"col1\")\n                .type(Schema.STRING)\n                .build()))\n        .partitionKeys(List.of(Column.builder()\n                .name(\"year\")\n                .type(Schema.SMALL_INT)\n                .build(), Column.builder()\n                .name(\"month\")\n                .type(Schema.SMALL_INT)\n                .build()))\n        .dataFormat(DataFormat.JSON)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var myDatabase database\nglue.NewTable(this, jsii.String(\"MyTable\"), &tableProps{\n\tdatabase: myDatabase,\n\ttableName: jsii.String(\"my_table\"),\n\tcolumns: []column{\n\t\t&column{\n\t\t\tname: jsii.String(\"col1\"),\n\t\t\ttype: glue.schema_STRING(),\n\t\t},\n\t},\n\tpartitionKeys: []*column{\n\t\t&column{\n\t\t\tname: jsii.String(\"year\"),\n\t\t\ttype: glue.*schema_SMALL_INT(),\n\t\t},\n\t\t&column{\n\t\t\tname: jsii.String(\"month\"),\n\t\t\ttype: glue.*schema_SMALL_INT(),\n\t\t},\n\t},\n\tdataFormat: glue.dataFormat_JSON(),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myDatabase: glue.Database;\nnew glue.Table(this, 'MyTable', {\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-glue"
        },
        "field": {
          "field": "markdown",
          "line": 201
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.DataFormat",
        "@aws-cdk/aws-glue.DataFormat#JSON",
        "@aws-cdk/aws-glue.IDatabase",
        "@aws-cdk/aws-glue.Schema",
        "@aws-cdk/aws-glue.Schema#SMALL_INT",
        "@aws-cdk/aws-glue.Schema#STRING",
        "@aws-cdk/aws-glue.Table",
        "@aws-cdk/aws-glue.TableProps",
        "@aws-cdk/aws-glue.Type",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myDatabase: glue.Database;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Table(this, 'MyTable', {\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 29,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 4,
        "194": 9,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "b95524d87731a58f5408c90f84d888c5d6b1c00b593b93f691483749430f37a4"
    },
    "18dd15c04cd1ffbd8875f8f6db027fe56f41e29da576da9d1f3c62011cf999e3": {
      "translations": {
        "python": {
          "source": "# my_database: glue.Database\n\nglue.Table(self, \"MyTable\",\n    database=my_database,\n    table_name=\"my_table\",\n    columns=[glue.Column(\n        name=\"col1\",\n        type=glue.Schema.STRING\n    )],\n    partition_keys=[glue.Column(\n        name=\"year\",\n        type=glue.Schema.SMALL_INT\n    ), glue.Column(\n        name=\"month\",\n        type=glue.Schema.SMALL_INT\n    )],\n    partition_indexes=[glue.PartitionIndex(\n        index_name=\"my-index\",  # optional\n        key_names=[\"year\"]\n    )],  # supply up to 3 indexes\n    data_format=glue.DataFormat.JSON\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Database myDatabase;\n\nnew Table(this, \"MyTable\", new TableProps {\n    Database = myDatabase,\n    TableName = \"my_table\",\n    Columns = new [] { new Column {\n        Name = \"col1\",\n        Type = Schema.STRING\n    } },\n    PartitionKeys = new [] { new Column {\n        Name = \"year\",\n        Type = Schema.SMALL_INT\n    }, new Column {\n        Name = \"month\",\n        Type = Schema.SMALL_INT\n    } },\n    PartitionIndexes = new [] { new PartitionIndex {\n        IndexName = \"my-index\",  // optional\n        KeyNames = new [] { \"year\" }\n    } },  // supply up to 3 indexes\n    DataFormat = DataFormat.JSON\n});",
          "version": "1"
        },
        "java": {
          "source": "Database myDatabase;\n\nTable.Builder.create(this, \"MyTable\")\n        .database(myDatabase)\n        .tableName(\"my_table\")\n        .columns(List.of(Column.builder()\n                .name(\"col1\")\n                .type(Schema.STRING)\n                .build()))\n        .partitionKeys(List.of(Column.builder()\n                .name(\"year\")\n                .type(Schema.SMALL_INT)\n                .build(), Column.builder()\n                .name(\"month\")\n                .type(Schema.SMALL_INT)\n                .build()))\n        .partitionIndexes(List.of(PartitionIndex.builder()\n                .indexName(\"my-index\") // optional\n                .keyNames(List.of(\"year\"))\n                .build())) // supply up to 3 indexes\n        .dataFormat(DataFormat.JSON)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var myDatabase database\nglue.NewTable(this, jsii.String(\"MyTable\"), &tableProps{\n\tdatabase: myDatabase,\n\ttableName: jsii.String(\"my_table\"),\n\tcolumns: []column{\n\t\t&column{\n\t\t\tname: jsii.String(\"col1\"),\n\t\t\ttype: glue.schema_STRING(),\n\t\t},\n\t},\n\tpartitionKeys: []*column{\n\t\t&column{\n\t\t\tname: jsii.String(\"year\"),\n\t\t\ttype: glue.*schema_SMALL_INT(),\n\t\t},\n\t\t&column{\n\t\t\tname: jsii.String(\"month\"),\n\t\t\ttype: glue.*schema_SMALL_INT(),\n\t\t},\n\t},\n\tpartitionIndexes: []partitionIndex{\n\t\t&partitionIndex{\n\t\t\tindexName: jsii.String(\"my-index\"),\n\t\t\t // optional\n\t\t\tkeyNames: []*string{\n\t\t\t\tjsii.String(\"year\"),\n\t\t\t},\n\t\t},\n\t},\n\t // supply up to 3 indexes\n\tdataFormat: glue.dataFormat_JSON(),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myDatabase: glue.Database;\nnew glue.Table(this, 'MyTable', {\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  partitionIndexes: [{\n    indexName: 'my-index', // optional\n    keyNames: ['year'],\n  }], // supply up to 3 indexes\n  dataFormat: glue.DataFormat.JSON,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-glue"
        },
        "field": {
          "field": "markdown",
          "line": 233
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.DataFormat",
        "@aws-cdk/aws-glue.DataFormat#JSON",
        "@aws-cdk/aws-glue.IDatabase",
        "@aws-cdk/aws-glue.Schema",
        "@aws-cdk/aws-glue.Schema#SMALL_INT",
        "@aws-cdk/aws-glue.Schema#STRING",
        "@aws-cdk/aws-glue.Table",
        "@aws-cdk/aws-glue.TableProps",
        "@aws-cdk/aws-glue.Type",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myDatabase: glue.Database;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Table(this, 'MyTable', {\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  partitionIndexes: [{\n    indexName: 'my-index', // optional\n    keyNames: ['year'],\n  }], // supply up to 3 indexes\n  dataFormat: glue.DataFormat.JSON,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 7,
        "75": 32,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 4,
        "193": 5,
        "194": 9,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 14,
        "290": 1
      },
      "fqnsFingerprint": "b95524d87731a58f5408c90f84d888c5d6b1c00b593b93f691483749430f37a4"
    },
    "860d5727e623e72edd20005b915bad836553be367e5e060904012663a8a64024": {
      "translations": {
        "python": {
          "source": "# my_table: glue.Table\n\nmy_table.add_partition_index(\n    index_name=\"my-index\",\n    key_names=[\"year\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Table myTable;\n\nmyTable.AddPartitionIndex(new PartitionIndex {\n    IndexName = \"my-index\",\n    KeyNames = new [] { \"year\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "Table myTable;\n\nmyTable.addPartitionIndex(PartitionIndex.builder()\n        .indexName(\"my-index\")\n        .keyNames(List.of(\"year\"))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var myTable table\nmyTable.addPartitionIndex(&partitionIndex{\n\tindexName: jsii.String(\"my-index\"),\n\tkeyNames: []*string{\n\t\tjsii.String(\"year\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myTable: glue.Table;\nmyTable.addPartitionIndex({\n  indexName: 'my-index',\n  keyNames: ['year'],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-glue"
        },
        "field": {
          "field": "markdown",
          "line": 259
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.PartitionIndex",
        "@aws-cdk/aws-glue.Table#addPartitionIndex"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myTable: glue.Table;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nmyTable.addPartitionIndex({\n  indexName: 'my-index',\n  keyNames: ['year'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 1,
        "196": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "fc877896dba4be418d6d6c2a3be154f04a8dea5ad0159f51440fed2798594dae"
    },
    "24f197159123cab98e4bf578492538c2378783aba00d51c11d0a6f4504b10a59": {
      "translations": {
        "python": {
          "source": "# my_database: glue.Database\n\nglue.Table(self, \"MyTable\",\n    encryption=glue.TableEncryption.S3_MANAGED,\n    # ...\n    database=my_database,\n    table_name=\"my_table\",\n    columns=[glue.Column(\n        name=\"col1\",\n        type=glue.Schema.STRING\n    )],\n    data_format=glue.DataFormat.JSON\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Database myDatabase;\n\nnew Table(this, \"MyTable\", new TableProps {\n    Encryption = TableEncryption.S3_MANAGED,\n    // ...\n    Database = myDatabase,\n    TableName = \"my_table\",\n    Columns = new [] { new Column {\n        Name = \"col1\",\n        Type = Schema.STRING\n    } },\n    DataFormat = DataFormat.JSON\n});",
          "version": "1"
        },
        "java": {
          "source": "Database myDatabase;\n\nTable.Builder.create(this, \"MyTable\")\n        .encryption(TableEncryption.S3_MANAGED)\n        // ...\n        .database(myDatabase)\n        .tableName(\"my_table\")\n        .columns(List.of(Column.builder()\n                .name(\"col1\")\n                .type(Schema.STRING)\n                .build()))\n        .dataFormat(DataFormat.JSON)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var myDatabase database\nglue.NewTable(this, jsii.String(\"MyTable\"), &tableProps{\n\tencryption: glue.tableEncryption_S3_MANAGED,\n\t// ...\n\tdatabase: myDatabase,\n\ttableName: jsii.String(\"my_table\"),\n\tcolumns: []column{\n\t\t&column{\n\t\t\tname: jsii.String(\"col1\"),\n\t\t\ttype: glue.schema_STRING(),\n\t\t},\n\t},\n\tdataFormat: glue.dataFormat_JSON(),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myDatabase: glue.Database;\nnew glue.Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.S3_MANAGED,\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-glue"
        },
        "field": {
          "field": "markdown",
          "line": 274
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.DataFormat",
        "@aws-cdk/aws-glue.DataFormat#JSON",
        "@aws-cdk/aws-glue.IDatabase",
        "@aws-cdk/aws-glue.Schema",
        "@aws-cdk/aws-glue.Schema#STRING",
        "@aws-cdk/aws-glue.Table",
        "@aws-cdk/aws-glue.TableEncryption",
        "@aws-cdk/aws-glue.TableEncryption#S3_MANAGED",
        "@aws-cdk/aws-glue.TableProps",
        "@aws-cdk/aws-glue.Type",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myDatabase: glue.Database;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.S3_MANAGED,\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 22,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "194": 7,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "ccae663b7d439e8d2c92953bfbf24b3dbb5600e9920780413528646950dafd27"
    },
    "73f57d22411ad07ac1b15fc3fa0ff869d297475fddebb6d7286e614b84804b59": {
      "translations": {
        "python": {
          "source": "# my_database: glue.Database\n\n# KMS key is created automatically\nglue.Table(self, \"MyTable\",\n    encryption=glue.TableEncryption.KMS,\n    # ...\n    database=my_database,\n    table_name=\"my_table\",\n    columns=[glue.Column(\n        name=\"col1\",\n        type=glue.Schema.STRING\n    )],\n    data_format=glue.DataFormat.JSON\n)\n\n# with an explicit KMS key\nglue.Table(self, \"MyTable\",\n    encryption=glue.TableEncryption.KMS,\n    encryption_key=kms.Key(self, \"MyKey\"),\n    # ...\n    database=my_database,\n    table_name=\"my_table\",\n    columns=[glue.Column(\n        name=\"col1\",\n        type=glue.Schema.STRING\n    )],\n    data_format=glue.DataFormat.JSON\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Database myDatabase;\n\n// KMS key is created automatically\n// KMS key is created automatically\nnew Table(this, \"MyTable\", new TableProps {\n    Encryption = TableEncryption.KMS,\n    // ...\n    Database = myDatabase,\n    TableName = \"my_table\",\n    Columns = new [] { new Column {\n        Name = \"col1\",\n        Type = Schema.STRING\n    } },\n    DataFormat = DataFormat.JSON\n});\n\n// with an explicit KMS key\n// with an explicit KMS key\nnew Table(this, \"MyTable\", new TableProps {\n    Encryption = TableEncryption.KMS,\n    EncryptionKey = new Key(this, \"MyKey\"),\n    // ...\n    Database = myDatabase,\n    TableName = \"my_table\",\n    Columns = new [] { new Column {\n        Name = \"col1\",\n        Type = Schema.STRING\n    } },\n    DataFormat = DataFormat.JSON\n});",
          "version": "1"
        },
        "java": {
          "source": "Database myDatabase;\n\n// KMS key is created automatically\n// KMS key is created automatically\nTable.Builder.create(this, \"MyTable\")\n        .encryption(TableEncryption.KMS)\n        // ...\n        .database(myDatabase)\n        .tableName(\"my_table\")\n        .columns(List.of(Column.builder()\n                .name(\"col1\")\n                .type(Schema.STRING)\n                .build()))\n        .dataFormat(DataFormat.JSON)\n        .build();\n\n// with an explicit KMS key\n// with an explicit KMS key\nTable.Builder.create(this, \"MyTable\")\n        .encryption(TableEncryption.KMS)\n        .encryptionKey(new Key(this, \"MyKey\"))\n        // ...\n        .database(myDatabase)\n        .tableName(\"my_table\")\n        .columns(List.of(Column.builder()\n                .name(\"col1\")\n                .type(Schema.STRING)\n                .build()))\n        .dataFormat(DataFormat.JSON)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var myDatabase database\n// KMS key is created automatically\n// KMS key is created automatically\nglue.NewTable(this, jsii.String(\"MyTable\"), &tableProps{\n\tencryption: glue.tableEncryption_KMS,\n\t// ...\n\tdatabase: myDatabase,\n\ttableName: jsii.String(\"my_table\"),\n\tcolumns: []column{\n\t\t&column{\n\t\t\tname: jsii.String(\"col1\"),\n\t\t\ttype: glue.schema_STRING(),\n\t\t},\n\t},\n\tdataFormat: glue.dataFormat_JSON(),\n})\n\n// with an explicit KMS key\n// with an explicit KMS key\nglue.NewTable(this, jsii.String(\"MyTable\"), &tableProps{\n\tencryption: glue.*tableEncryption_KMS,\n\tencryptionKey: kms.NewKey(this, jsii.String(\"MyKey\")),\n\t// ...\n\tdatabase: myDatabase,\n\ttableName: jsii.String(\"my_table\"),\n\tcolumns: []*column{\n\t\t&column{\n\t\t\tname: jsii.String(\"col1\"),\n\t\t\ttype: glue.*schema_STRING(),\n\t\t},\n\t},\n\tdataFormat: glue.*dataFormat_JSON(),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myDatabase: glue.Database;\n// KMS key is created automatically\nnew glue.Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.KMS,\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n\n// with an explicit KMS key\nnew glue.Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.KMS,\n  encryptionKey: new kms.Key(this, 'MyKey'),\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-glue"
        },
        "field": {
          "field": "markdown",
          "line": 291
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.DataFormat",
        "@aws-cdk/aws-glue.DataFormat#JSON",
        "@aws-cdk/aws-glue.IDatabase",
        "@aws-cdk/aws-glue.Schema",
        "@aws-cdk/aws-glue.Schema#STRING",
        "@aws-cdk/aws-glue.Table",
        "@aws-cdk/aws-glue.TableEncryption",
        "@aws-cdk/aws-glue.TableEncryption#KMS",
        "@aws-cdk/aws-glue.TableProps",
        "@aws-cdk/aws-glue.Type",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myDatabase: glue.Database;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n// KMS key is created automatically\nnew glue.Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.KMS,\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n\n// with an explicit KMS key\nnew glue.Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.KMS,\n  encryptionKey: new kms.Key(this, 'MyKey'),\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 7,
        "75": 44,
        "104": 3,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 4,
        "194": 15,
        "197": 3,
        "225": 1,
        "226": 2,
        "242": 1,
        "243": 1,
        "281": 15,
        "290": 1
      },
      "fqnsFingerprint": "1c089a332cbd5c0b0261246c0344ad7da1e619e18294b4b79af818919d2ad19a"
    },
    "18fc1aa4e800a4387b4c5617f50d555fef81c9ff57512791459da32767441062": {
      "translations": {
        "python": {
          "source": "# my_database: glue.Database\n\nglue.Table(self, \"MyTable\",\n    encryption=glue.TableEncryption.KMS_MANAGED,\n    # ...\n    database=my_database,\n    table_name=\"my_table\",\n    columns=[glue.Column(\n        name=\"col1\",\n        type=glue.Schema.STRING\n    )],\n    data_format=glue.DataFormat.JSON\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Database myDatabase;\n\nnew Table(this, \"MyTable\", new TableProps {\n    Encryption = TableEncryption.KMS_MANAGED,\n    // ...\n    Database = myDatabase,\n    TableName = \"my_table\",\n    Columns = new [] { new Column {\n        Name = \"col1\",\n        Type = Schema.STRING\n    } },\n    DataFormat = DataFormat.JSON\n});",
          "version": "1"
        },
        "java": {
          "source": "Database myDatabase;\n\nTable.Builder.create(this, \"MyTable\")\n        .encryption(TableEncryption.KMS_MANAGED)\n        // ...\n        .database(myDatabase)\n        .tableName(\"my_table\")\n        .columns(List.of(Column.builder()\n                .name(\"col1\")\n                .type(Schema.STRING)\n                .build()))\n        .dataFormat(DataFormat.JSON)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var myDatabase database\nglue.NewTable(this, jsii.String(\"MyTable\"), &tableProps{\n\tencryption: glue.tableEncryption_KMS_MANAGED,\n\t// ...\n\tdatabase: myDatabase,\n\ttableName: jsii.String(\"my_table\"),\n\tcolumns: []column{\n\t\t&column{\n\t\t\tname: jsii.String(\"col1\"),\n\t\t\ttype: glue.schema_STRING(),\n\t\t},\n\t},\n\tdataFormat: glue.dataFormat_JSON(),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myDatabase: glue.Database;\nnew glue.Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.KMS_MANAGED,\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-glue"
        },
        "field": {
          "field": "markdown",
          "line": 323
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.DataFormat",
        "@aws-cdk/aws-glue.DataFormat#JSON",
        "@aws-cdk/aws-glue.IDatabase",
        "@aws-cdk/aws-glue.Schema",
        "@aws-cdk/aws-glue.Schema#STRING",
        "@aws-cdk/aws-glue.Table",
        "@aws-cdk/aws-glue.TableEncryption",
        "@aws-cdk/aws-glue.TableEncryption#KMS_MANAGED",
        "@aws-cdk/aws-glue.TableProps",
        "@aws-cdk/aws-glue.Type",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myDatabase: glue.Database;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.KMS_MANAGED,\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 22,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "194": 7,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "1c299d01e24da01c155df2920069d9e0a9d8e2e3b5ff1d1dbcba8a17e3e16e26"
    },
    "5e07d66d1e466251989299e4a143b2f15c3b524ba3cc22899cfeb5807fee625a": {
      "translations": {
        "python": {
          "source": "# my_database: glue.Database\n\n# KMS key is created automatically\nglue.Table(self, \"MyTable\",\n    encryption=glue.TableEncryption.CLIENT_SIDE_KMS,\n    # ...\n    database=my_database,\n    table_name=\"my_table\",\n    columns=[glue.Column(\n        name=\"col1\",\n        type=glue.Schema.STRING\n    )],\n    data_format=glue.DataFormat.JSON\n)\n\n# with an explicit KMS key\nglue.Table(self, \"MyTable\",\n    encryption=glue.TableEncryption.CLIENT_SIDE_KMS,\n    encryption_key=kms.Key(self, \"MyKey\"),\n    # ...\n    database=my_database,\n    table_name=\"my_table\",\n    columns=[glue.Column(\n        name=\"col1\",\n        type=glue.Schema.STRING\n    )],\n    data_format=glue.DataFormat.JSON\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Database myDatabase;\n\n// KMS key is created automatically\n// KMS key is created automatically\nnew Table(this, \"MyTable\", new TableProps {\n    Encryption = TableEncryption.CLIENT_SIDE_KMS,\n    // ...\n    Database = myDatabase,\n    TableName = \"my_table\",\n    Columns = new [] { new Column {\n        Name = \"col1\",\n        Type = Schema.STRING\n    } },\n    DataFormat = DataFormat.JSON\n});\n\n// with an explicit KMS key\n// with an explicit KMS key\nnew Table(this, \"MyTable\", new TableProps {\n    Encryption = TableEncryption.CLIENT_SIDE_KMS,\n    EncryptionKey = new Key(this, \"MyKey\"),\n    // ...\n    Database = myDatabase,\n    TableName = \"my_table\",\n    Columns = new [] { new Column {\n        Name = \"col1\",\n        Type = Schema.STRING\n    } },\n    DataFormat = DataFormat.JSON\n});",
          "version": "1"
        },
        "java": {
          "source": "Database myDatabase;\n\n// KMS key is created automatically\n// KMS key is created automatically\nTable.Builder.create(this, \"MyTable\")\n        .encryption(TableEncryption.CLIENT_SIDE_KMS)\n        // ...\n        .database(myDatabase)\n        .tableName(\"my_table\")\n        .columns(List.of(Column.builder()\n                .name(\"col1\")\n                .type(Schema.STRING)\n                .build()))\n        .dataFormat(DataFormat.JSON)\n        .build();\n\n// with an explicit KMS key\n// with an explicit KMS key\nTable.Builder.create(this, \"MyTable\")\n        .encryption(TableEncryption.CLIENT_SIDE_KMS)\n        .encryptionKey(new Key(this, \"MyKey\"))\n        // ...\n        .database(myDatabase)\n        .tableName(\"my_table\")\n        .columns(List.of(Column.builder()\n                .name(\"col1\")\n                .type(Schema.STRING)\n                .build()))\n        .dataFormat(DataFormat.JSON)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var myDatabase database\n// KMS key is created automatically\n// KMS key is created automatically\nglue.NewTable(this, jsii.String(\"MyTable\"), &tableProps{\n\tencryption: glue.tableEncryption_CLIENT_SIDE_KMS,\n\t// ...\n\tdatabase: myDatabase,\n\ttableName: jsii.String(\"my_table\"),\n\tcolumns: []column{\n\t\t&column{\n\t\t\tname: jsii.String(\"col1\"),\n\t\t\ttype: glue.schema_STRING(),\n\t\t},\n\t},\n\tdataFormat: glue.dataFormat_JSON(),\n})\n\n// with an explicit KMS key\n// with an explicit KMS key\nglue.NewTable(this, jsii.String(\"MyTable\"), &tableProps{\n\tencryption: glue.*tableEncryption_CLIENT_SIDE_KMS,\n\tencryptionKey: kms.NewKey(this, jsii.String(\"MyKey\")),\n\t// ...\n\tdatabase: myDatabase,\n\ttableName: jsii.String(\"my_table\"),\n\tcolumns: []*column{\n\t\t&column{\n\t\t\tname: jsii.String(\"col1\"),\n\t\t\ttype: glue.*schema_STRING(),\n\t\t},\n\t},\n\tdataFormat: glue.*dataFormat_JSON(),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myDatabase: glue.Database;\n// KMS key is created automatically\nnew glue.Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.CLIENT_SIDE_KMS,\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n\n// with an explicit KMS key\nnew glue.Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.CLIENT_SIDE_KMS,\n  encryptionKey: new kms.Key(this, 'MyKey'),\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-glue"
        },
        "field": {
          "field": "markdown",
          "line": 340
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.DataFormat",
        "@aws-cdk/aws-glue.DataFormat#JSON",
        "@aws-cdk/aws-glue.IDatabase",
        "@aws-cdk/aws-glue.Schema",
        "@aws-cdk/aws-glue.Schema#STRING",
        "@aws-cdk/aws-glue.Table",
        "@aws-cdk/aws-glue.TableEncryption",
        "@aws-cdk/aws-glue.TableEncryption#CLIENT_SIDE_KMS",
        "@aws-cdk/aws-glue.TableProps",
        "@aws-cdk/aws-glue.Type",
        "@aws-cdk/aws-kms.IKey",
        "@aws-cdk/aws-kms.Key",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myDatabase: glue.Database;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\n// KMS key is created automatically\nnew glue.Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.CLIENT_SIDE_KMS,\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n\n// with an explicit KMS key\nnew glue.Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.CLIENT_SIDE_KMS,\n  encryptionKey: new kms.Key(this, 'MyKey'),\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 7,
        "75": 44,
        "104": 3,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 4,
        "194": 15,
        "197": 3,
        "225": 1,
        "226": 2,
        "242": 1,
        "243": 1,
        "281": 15,
        "290": 1
      },
      "fqnsFingerprint": "f147318bc1053c9145d1eeffd5cbecbd41b48a7ecc7da941368883376993c2fc"
    },
    "29a178d639ff512b19216e832127b85aa2794671eb9a918d0710507198c9edeb": {
      "translations": {
        "python": {
          "source": "# my_database: glue.Database\n\nglue.Table(self, \"MyTable\",\n    columns=[glue.Column(\n        name=\"primitive_column\",\n        type=glue.Schema.STRING\n    ), glue.Column(\n        name=\"array_column\",\n        type=glue.Schema.array(glue.Schema.INTEGER),\n        comment=\"array<integer>\"\n    ), glue.Column(\n        name=\"map_column\",\n        type=glue.Schema.map(glue.Schema.STRING, glue.Schema.TIMESTAMP),\n        comment=\"map<string,string>\"\n    ), glue.Column(\n        name=\"struct_column\",\n        type=glue.Schema.struct([\n            name=\"nested_column\",\n            type=glue.Schema.DATE,\n            comment=\"nested comment\"\n        ]),\n        comment=\"struct<nested_column:date COMMENT 'nested comment'>\"\n    )],\n    # ...\n    database=my_database,\n    table_name=\"my_table\",\n    data_format=glue.DataFormat.JSON\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Database myDatabase;\n\nnew Table(this, \"MyTable\", new TableProps {\n    Columns = new [] { new Column {\n        Name = \"primitive_column\",\n        Type = Schema.STRING\n    }, new Column {\n        Name = \"array_column\",\n        Type = Schema.Array(Schema.INTEGER),\n        Comment = \"array<integer>\"\n    }, new Column {\n        Name = \"map_column\",\n        Type = Schema.Map(Schema.STRING, Schema.TIMESTAMP),\n        Comment = \"map<string,string>\"\n    }, new Column {\n        Name = \"struct_column\",\n        Type = Schema.Struct(new [] { new Column {\n            Name = \"nested_column\",\n            Type = Schema.DATE,\n            Comment = \"nested comment\"\n        } }),\n        Comment = \"struct<nested_column:date COMMENT 'nested comment'>\"\n    } },\n    // ...\n    Database = myDatabase,\n    TableName = \"my_table\",\n    DataFormat = DataFormat.JSON\n});",
          "version": "1"
        },
        "java": {
          "source": "Database myDatabase;\n\nTable.Builder.create(this, \"MyTable\")\n        .columns(List.of(Column.builder()\n                .name(\"primitive_column\")\n                .type(Schema.STRING)\n                .build(), Column.builder()\n                .name(\"array_column\")\n                .type(Schema.array(Schema.INTEGER))\n                .comment(\"array<integer>\")\n                .build(), Column.builder()\n                .name(\"map_column\")\n                .type(Schema.map(Schema.STRING, Schema.TIMESTAMP))\n                .comment(\"map<string,string>\")\n                .build(), Column.builder()\n                .name(\"struct_column\")\n                .type(Schema.struct(List.of(Column.builder()\n                        .name(\"nested_column\")\n                        .type(Schema.DATE)\n                        .comment(\"nested comment\")\n                        .build())))\n                .comment(\"struct<nested_column:date COMMENT 'nested comment'>\")\n                .build()))\n        // ...\n        .database(myDatabase)\n        .tableName(\"my_table\")\n        .dataFormat(DataFormat.JSON)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var myDatabase database\nglue.NewTable(this, jsii.String(\"MyTable\"), &tableProps{\n\tcolumns: []column{\n\t\t&column{\n\t\t\tname: jsii.String(\"primitive_column\"),\n\t\t\ttype: glue.schema_STRING(),\n\t\t},\n\t\t&column{\n\t\t\tname: jsii.String(\"array_column\"),\n\t\t\ttype: glue.*schema.array(glue.*schema_INTEGER()),\n\t\t\tcomment: jsii.String(\"array<integer>\"),\n\t\t},\n\t\t&column{\n\t\t\tname: jsii.String(\"map_column\"),\n\t\t\ttype: glue.*schema.map(glue.*schema_STRING(), glue.*schema_TIMESTAMP()),\n\t\t\tcomment: jsii.String(\"map<string,string>\"),\n\t\t},\n\t\t&column{\n\t\t\tname: jsii.String(\"struct_column\"),\n\t\t\ttype: glue.*schema.struct_([]*column{\n\t\t\t\t&column{\n\t\t\t\t\tname: jsii.String(\"nested_column\"),\n\t\t\t\t\ttype: glue.*schema_DATE(),\n\t\t\t\t\tcomment: jsii.String(\"nested comment\"),\n\t\t\t\t},\n\t\t\t}),\n\t\t\tcomment: jsii.String(\"struct<nested_column:date COMMENT 'nested comment'>\"),\n\t\t},\n\t},\n\t// ...\n\tdatabase: myDatabase,\n\ttableName: jsii.String(\"my_table\"),\n\tdataFormat: glue.dataFormat_JSON(),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myDatabase: glue.Database;\nnew glue.Table(this, 'MyTable', {\n  columns: [{\n    name: 'primitive_column',\n    type: glue.Schema.STRING,\n  }, {\n    name: 'array_column',\n    type: glue.Schema.array(glue.Schema.INTEGER),\n    comment: 'array<integer>',\n  }, {\n    name: 'map_column',\n    type: glue.Schema.map(\n      glue.Schema.STRING,\n      glue.Schema.TIMESTAMP),\n    comment: 'map<string,string>',\n  }, {\n    name: 'struct_column',\n    type: glue.Schema.struct([{\n      name: 'nested_column',\n      type: glue.Schema.DATE,\n      comment: 'nested comment',\n    }]),\n    comment: \"struct<nested_column:date COMMENT 'nested comment'>\",\n  }],\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  dataFormat: glue.DataFormat.JSON,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "moduleReadme",
          "moduleFqn": "@aws-cdk/aws-glue"
        },
        "field": {
          "field": "markdown",
          "line": 376
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.DataFormat",
        "@aws-cdk/aws-glue.DataFormat#JSON",
        "@aws-cdk/aws-glue.IDatabase",
        "@aws-cdk/aws-glue.Schema",
        "@aws-cdk/aws-glue.Schema#DATE",
        "@aws-cdk/aws-glue.Schema#INTEGER",
        "@aws-cdk/aws-glue.Schema#STRING",
        "@aws-cdk/aws-glue.Schema#TIMESTAMP",
        "@aws-cdk/aws-glue.Schema#array",
        "@aws-cdk/aws-glue.Schema#map",
        "@aws-cdk/aws-glue.Schema#struct",
        "@aws-cdk/aws-glue.Table",
        "@aws-cdk/aws-glue.TableProps",
        "@aws-cdk/aws-glue.Type",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myDatabase: glue.Database;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Table(this, 'MyTable', {\n  columns: [{\n    name: 'primitive_column',\n    type: glue.Schema.STRING,\n  }, {\n    name: 'array_column',\n    type: glue.Schema.array(glue.Schema.INTEGER),\n    comment: 'array<integer>',\n  }, {\n    name: 'map_column',\n    type: glue.Schema.map(\n      glue.Schema.STRING,\n      glue.Schema.TIMESTAMP),\n    comment: 'map<string,string>',\n  }, {\n    name: 'struct_column',\n    type: glue.Schema.struct([{\n      name: 'nested_column',\n      type: glue.Schema.DATE,\n      comment: 'nested comment',\n    }]),\n    comment: \"struct<nested_column:date COMMENT 'nested comment'>\",\n  }],\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  dataFormat: glue.DataFormat.JSON,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 11,
        "75": 51,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 6,
        "194": 19,
        "196": 3,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 18,
        "290": 1
      },
      "fqnsFingerprint": "3552563fac674565f9c4f476ccd6ece4579056c957c5b62b9952a09b2a1aa39a"
    },
    "2b009751d058d19406c65fc3852a9af0ecf07f2267f1f28e4174d856be9d83ec": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.assets as assets\nimport aws_cdk.aws_glue as glue\nimport aws_cdk.aws_iam as iam\nimport aws_cdk.core as cdk\n\n# docker_image: cdk.DockerImage\n# grantable: iam.IGrantable\n# local_bundling: cdk.ILocalBundling\n\nasset_code = glue.AssetCode(\"path\",\n    asset_hash=\"assetHash\",\n    asset_hash_type=cdk.AssetHashType.SOURCE,\n    bundling=cdk.BundlingOptions(\n        image=docker_image,\n\n        # the properties below are optional\n        command=[\"command\"],\n        entrypoint=[\"entrypoint\"],\n        environment={\n            \"environment_key\": \"environment\"\n        },\n        local=local_bundling,\n        output_type=cdk.BundlingOutput.ARCHIVED,\n        security_opt=\"securityOpt\",\n        user=\"user\",\n        volumes=[cdk.DockerVolume(\n            container_path=\"containerPath\",\n            host_path=\"hostPath\",\n\n            # the properties below are optional\n            consistency=cdk.DockerVolumeConsistency.CONSISTENT\n        )],\n        working_directory=\"workingDirectory\"\n    ),\n    exclude=[\"exclude\"],\n    follow=assets.FollowMode.NEVER,\n    follow_symlinks=cdk.SymlinkFollowMode.NEVER,\n    ignore_mode=cdk.IgnoreMode.GLOB,\n    readers=[grantable],\n    source_hash=\"sourceHash\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.Assets;\nusing Amazon.CDK.AWS.Glue;\nusing Amazon.CDK.AWS.IAM;\nusing Amazon.CDK;\n\nDockerImage dockerImage;\nIGrantable grantable;\nILocalBundling localBundling;\nAssetCode assetCode = new AssetCode(\"path\", new AssetOptions {\n    AssetHash = \"assetHash\",\n    AssetHashType = AssetHashType.SOURCE,\n    Bundling = new BundlingOptions {\n        Image = dockerImage,\n\n        // the properties below are optional\n        Command = new [] { \"command\" },\n        Entrypoint = new [] { \"entrypoint\" },\n        Environment = new Dictionary<string, string> {\n            { \"environmentKey\", \"environment\" }\n        },\n        Local = localBundling,\n        OutputType = BundlingOutput.ARCHIVED,\n        SecurityOpt = \"securityOpt\",\n        User = \"user\",\n        Volumes = new [] { new DockerVolume {\n            ContainerPath = \"containerPath\",\n            HostPath = \"hostPath\",\n\n            // the properties below are optional\n            Consistency = DockerVolumeConsistency.CONSISTENT\n        } },\n        WorkingDirectory = \"workingDirectory\"\n    },\n    Exclude = new [] { \"exclude\" },\n    Follow = FollowMode.NEVER,\n    FollowSymlinks = SymlinkFollowMode.NEVER,\n    IgnoreMode = IgnoreMode.GLOB,\n    Readers = new [] { grantable },\n    SourceHash = \"sourceHash\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.assets.*;\nimport software.amazon.awscdk.services.glue.*;\nimport software.amazon.awscdk.services.iam.*;\nimport software.amazon.awscdk.core.*;\n\nDockerImage dockerImage;\nIGrantable grantable;\nILocalBundling localBundling;\n\nAssetCode assetCode = AssetCode.Builder.create(\"path\")\n        .assetHash(\"assetHash\")\n        .assetHashType(AssetHashType.SOURCE)\n        .bundling(BundlingOptions.builder()\n                .image(dockerImage)\n\n                // the properties below are optional\n                .command(List.of(\"command\"))\n                .entrypoint(List.of(\"entrypoint\"))\n                .environment(Map.of(\n                        \"environmentKey\", \"environment\"))\n                .local(localBundling)\n                .outputType(BundlingOutput.ARCHIVED)\n                .securityOpt(\"securityOpt\")\n                .user(\"user\")\n                .volumes(List.of(DockerVolume.builder()\n                        .containerPath(\"containerPath\")\n                        .hostPath(\"hostPath\")\n\n                        // the properties below are optional\n                        .consistency(DockerVolumeConsistency.CONSISTENT)\n                        .build()))\n                .workingDirectory(\"workingDirectory\")\n                .build())\n        .exclude(List.of(\"exclude\"))\n        .follow(FollowMode.NEVER)\n        .followSymlinks(SymlinkFollowMode.NEVER)\n        .ignoreMode(IgnoreMode.GLOB)\n        .readers(List.of(grantable))\n        .sourceHash(\"sourceHash\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import assets \"github.com/aws-samples/dummy/awscdkassets\"import glue \"github.com/aws-samples/dummy/awscdkawsglue\"import iam \"github.com/aws-samples/dummy/awscdkawsiam\"import cdk \"github.com/aws-samples/dummy/awscdkcore\"\n\nvar dockerImage dockerImage\nvar grantable iGrantable\nvar localBundling iLocalBundling\nassetCode := glue.NewAssetCode(jsii.String(\"path\"), &assetOptions{\n\tassetHash: jsii.String(\"assetHash\"),\n\tassetHashType: cdk.assetHashType_SOURCE,\n\tbundling: &bundlingOptions{\n\t\timage: dockerImage,\n\n\t\t// the properties below are optional\n\t\tcommand: []*string{\n\t\t\tjsii.String(\"command\"),\n\t\t},\n\t\tentrypoint: []*string{\n\t\t\tjsii.String(\"entrypoint\"),\n\t\t},\n\t\tenvironment: map[string]*string{\n\t\t\t\"environmentKey\": jsii.String(\"environment\"),\n\t\t},\n\t\tlocal: localBundling,\n\t\toutputType: cdk.bundlingOutput_ARCHIVED,\n\t\tsecurityOpt: jsii.String(\"securityOpt\"),\n\t\tuser: jsii.String(\"user\"),\n\t\tvolumes: []dockerVolume{\n\t\t\t&dockerVolume{\n\t\t\t\tcontainerPath: jsii.String(\"containerPath\"),\n\t\t\t\thostPath: jsii.String(\"hostPath\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tconsistency: cdk.dockerVolumeConsistency_CONSISTENT,\n\t\t\t},\n\t\t},\n\t\tworkingDirectory: jsii.String(\"workingDirectory\"),\n\t},\n\texclude: []*string{\n\t\tjsii.String(\"exclude\"),\n\t},\n\tfollow: assets.followMode_NEVER,\n\tfollowSymlinks: cdk.symlinkFollowMode_NEVER,\n\tignoreMode: cdk.ignoreMode_GLOB,\n\treaders: []*iGrantable{\n\t\tgrantable,\n\t},\n\tsourceHash: jsii.String(\"sourceHash\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as assets from '@aws-cdk/assets';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const dockerImage: cdk.DockerImage;\ndeclare const grantable: iam.IGrantable;\ndeclare const localBundling: cdk.ILocalBundling;\nconst assetCode = new glue.AssetCode('path', /* all optional props */ {\n  assetHash: 'assetHash',\n  assetHashType: cdk.AssetHashType.SOURCE,\n  bundling: {\n    image: dockerImage,\n\n    // the properties below are optional\n    command: ['command'],\n    entrypoint: ['entrypoint'],\n    environment: {\n      environmentKey: 'environment',\n    },\n    local: localBundling,\n    outputType: cdk.BundlingOutput.ARCHIVED,\n    securityOpt: 'securityOpt',\n    user: 'user',\n    volumes: [{\n      containerPath: 'containerPath',\n      hostPath: 'hostPath',\n\n      // the properties below are optional\n      consistency: cdk.DockerVolumeConsistency.CONSISTENT,\n    }],\n    workingDirectory: 'workingDirectory',\n  },\n  exclude: ['exclude'],\n  follow: assets.FollowMode.NEVER,\n  followSymlinks: cdk.SymlinkFollowMode.NEVER,\n  ignoreMode: cdk.IgnoreMode.GLOB,\n  readers: [grantable],\n  sourceHash: 'sourceHash',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.AssetCode"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/assets.FollowMode",
        "@aws-cdk/assets.FollowMode#NEVER",
        "@aws-cdk/aws-glue.AssetCode",
        "@aws-cdk/aws-s3-assets.AssetOptions",
        "@aws-cdk/core.AssetHashType",
        "@aws-cdk/core.AssetHashType#SOURCE",
        "@aws-cdk/core.BundlingOptions",
        "@aws-cdk/core.BundlingOutput",
        "@aws-cdk/core.BundlingOutput#ARCHIVED",
        "@aws-cdk/core.DockerImage",
        "@aws-cdk/core.DockerVolumeConsistency",
        "@aws-cdk/core.DockerVolumeConsistency#CONSISTENT",
        "@aws-cdk/core.ILocalBundling",
        "@aws-cdk/core.IgnoreMode",
        "@aws-cdk/core.IgnoreMode#GLOB",
        "@aws-cdk/core.SymlinkFollowMode",
        "@aws-cdk/core.SymlinkFollowMode#NEVER"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as assets from '@aws-cdk/assets';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as iam from '@aws-cdk/aws-iam';\nimport * as cdk from '@aws-cdk/core';\n\ndeclare const dockerImage: cdk.DockerImage;\ndeclare const grantable: iam.IGrantable;\ndeclare const localBundling: cdk.ILocalBundling;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst assetCode = new glue.AssetCode('path', /* all optional props */ {\n  assetHash: 'assetHash',\n  assetHashType: cdk.AssetHashType.SOURCE,\n  bundling: {\n    image: dockerImage,\n\n    // the properties below are optional\n    command: ['command'],\n    entrypoint: ['entrypoint'],\n    environment: {\n      environmentKey: 'environment',\n    },\n    local: localBundling,\n    outputType: cdk.BundlingOutput.ARCHIVED,\n    securityOpt: 'securityOpt',\n    user: 'user',\n    volumes: [{\n      containerPath: 'containerPath',\n      hostPath: 'hostPath',\n\n      // the properties below are optional\n      consistency: cdk.DockerVolumeConsistency.CONSISTENT,\n    }],\n    workingDirectory: 'workingDirectory',\n  },\n  exclude: ['exclude'],\n  follow: assets.FollowMode.NEVER,\n  followSymlinks: cdk.SymlinkFollowMode.NEVER,\n  ignoreMode: cdk.IgnoreMode.GLOB,\n  readers: [grantable],\n  sourceHash: 'sourceHash',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 16,
        "75": 60,
        "130": 3,
        "153": 3,
        "169": 3,
        "192": 5,
        "193": 4,
        "194": 13,
        "197": 1,
        "225": 4,
        "242": 4,
        "243": 4,
        "254": 4,
        "255": 4,
        "256": 4,
        "281": 23,
        "290": 1
      },
      "fqnsFingerprint": "ca8002ab5f9d1cc607fcc4dc3f6a267e2b1e5298052bf5488c5b2f6cb09a8639"
    },
    "0d428ae5070f589d92d65aece90c33d74dff223b63af05d3571321481fd772a4": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncfn_classifier = glue.CfnClassifier(self, \"MyCfnClassifier\",\n    csv_classifier=glue.CfnClassifier.CsvClassifierProperty(\n        allow_single_column=False,\n        contains_header=\"containsHeader\",\n        delimiter=\"delimiter\",\n        disable_value_trimming=False,\n        header=[\"header\"],\n        name=\"name\",\n        quote_symbol=\"quoteSymbol\"\n    ),\n    grok_classifier=glue.CfnClassifier.GrokClassifierProperty(\n        classification=\"classification\",\n        grok_pattern=\"grokPattern\",\n\n        # the properties below are optional\n        custom_patterns=\"customPatterns\",\n        name=\"name\"\n    ),\n    json_classifier=glue.CfnClassifier.JsonClassifierProperty(\n        json_path=\"jsonPath\",\n\n        # the properties below are optional\n        name=\"name\"\n    ),\n    xml_classifier=glue.CfnClassifier.XMLClassifierProperty(\n        classification=\"classification\",\n        row_tag=\"rowTag\",\n\n        # the properties below are optional\n        name=\"name\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCfnClassifier cfnClassifier = new CfnClassifier(this, \"MyCfnClassifier\", new CfnClassifierProps {\n    CsvClassifier = new CsvClassifierProperty {\n        AllowSingleColumn = false,\n        ContainsHeader = \"containsHeader\",\n        Delimiter = \"delimiter\",\n        DisableValueTrimming = false,\n        Header = new [] { \"header\" },\n        Name = \"name\",\n        QuoteSymbol = \"quoteSymbol\"\n    },\n    GrokClassifier = new GrokClassifierProperty {\n        Classification = \"classification\",\n        GrokPattern = \"grokPattern\",\n\n        // the properties below are optional\n        CustomPatterns = \"customPatterns\",\n        Name = \"name\"\n    },\n    JsonClassifier = new JsonClassifierProperty {\n        JsonPath = \"jsonPath\",\n\n        // the properties below are optional\n        Name = \"name\"\n    },\n    XmlClassifier = new XMLClassifierProperty {\n        Classification = \"classification\",\n        RowTag = \"rowTag\",\n\n        // the properties below are optional\n        Name = \"name\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCfnClassifier cfnClassifier = CfnClassifier.Builder.create(this, \"MyCfnClassifier\")\n        .csvClassifier(CsvClassifierProperty.builder()\n                .allowSingleColumn(false)\n                .containsHeader(\"containsHeader\")\n                .delimiter(\"delimiter\")\n                .disableValueTrimming(false)\n                .header(List.of(\"header\"))\n                .name(\"name\")\n                .quoteSymbol(\"quoteSymbol\")\n                .build())\n        .grokClassifier(GrokClassifierProperty.builder()\n                .classification(\"classification\")\n                .grokPattern(\"grokPattern\")\n\n                // the properties below are optional\n                .customPatterns(\"customPatterns\")\n                .name(\"name\")\n                .build())\n        .jsonClassifier(JsonClassifierProperty.builder()\n                .jsonPath(\"jsonPath\")\n\n                // the properties below are optional\n                .name(\"name\")\n                .build())\n        .xmlClassifier(XMLClassifierProperty.builder()\n                .classification(\"classification\")\n                .rowTag(\"rowTag\")\n\n                // the properties below are optional\n                .name(\"name\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncfnClassifier := glue.NewCfnClassifier(this, jsii.String(\"MyCfnClassifier\"), &cfnClassifierProps{\n\tcsvClassifier: &csvClassifierProperty{\n\t\tallowSingleColumn: jsii.Boolean(false),\n\t\tcontainsHeader: jsii.String(\"containsHeader\"),\n\t\tdelimiter: jsii.String(\"delimiter\"),\n\t\tdisableValueTrimming: jsii.Boolean(false),\n\t\theader: []*string{\n\t\t\tjsii.String(\"header\"),\n\t\t},\n\t\tname: jsii.String(\"name\"),\n\t\tquoteSymbol: jsii.String(\"quoteSymbol\"),\n\t},\n\tgrokClassifier: &grokClassifierProperty{\n\t\tclassification: jsii.String(\"classification\"),\n\t\tgrokPattern: jsii.String(\"grokPattern\"),\n\n\t\t// the properties below are optional\n\t\tcustomPatterns: jsii.String(\"customPatterns\"),\n\t\tname: jsii.String(\"name\"),\n\t},\n\tjsonClassifier: &jsonClassifierProperty{\n\t\tjsonPath: jsii.String(\"jsonPath\"),\n\n\t\t// the properties below are optional\n\t\tname: jsii.String(\"name\"),\n\t},\n\txmlClassifier: &xMLClassifierProperty{\n\t\tclassification: jsii.String(\"classification\"),\n\t\trowTag: jsii.String(\"rowTag\"),\n\n\t\t// the properties below are optional\n\t\tname: jsii.String(\"name\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst cfnClassifier = new glue.CfnClassifier(this, 'MyCfnClassifier', /* all optional props */ {\n  csvClassifier: {\n    allowSingleColumn: false,\n    containsHeader: 'containsHeader',\n    delimiter: 'delimiter',\n    disableValueTrimming: false,\n    header: ['header'],\n    name: 'name',\n    quoteSymbol: 'quoteSymbol',\n  },\n  grokClassifier: {\n    classification: 'classification',\n    grokPattern: 'grokPattern',\n\n    // the properties below are optional\n    customPatterns: 'customPatterns',\n    name: 'name',\n  },\n  jsonClassifier: {\n    jsonPath: 'jsonPath',\n\n    // the properties below are optional\n    name: 'name',\n  },\n  xmlClassifier: {\n    classification: 'classification',\n    rowTag: 'rowTag',\n\n    // the properties below are optional\n    name: 'name',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnClassifier"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnClassifier",
        "@aws-cdk/aws-glue.CfnClassifierProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnClassifier = new glue.CfnClassifier(this, 'MyCfnClassifier', /* all optional props */ {\n  csvClassifier: {\n    allowSingleColumn: false,\n    containsHeader: 'containsHeader',\n    delimiter: 'delimiter',\n    disableValueTrimming: false,\n    header: ['header'],\n    name: 'name',\n    quoteSymbol: 'quoteSymbol',\n  },\n  grokClassifier: {\n    classification: 'classification',\n    grokPattern: 'grokPattern',\n\n    // the properties below are optional\n    customPatterns: 'customPatterns',\n    name: 'name',\n  },\n  jsonClassifier: {\n    jsonPath: 'jsonPath',\n\n    // the properties below are optional\n    name: 'name',\n  },\n  xmlClassifier: {\n    classification: 'classification',\n    rowTag: 'rowTag',\n\n    // the properties below are optional\n    name: 'name',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 16,
        "75": 24,
        "91": 2,
        "104": 1,
        "192": 1,
        "193": 5,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 20,
        "290": 1
      },
      "fqnsFingerprint": "27dd7682f59b52dc4ed5ccbe6227a7371d8d247a7e9ddbbc86cbdc0b13a7f5b8"
    },
    "d5a11df13f46dd197c00c1a2e2fb9047979102a43940638b0ff9d9bb036d7626": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncsv_classifier_property = glue.CfnClassifier.CsvClassifierProperty(\n    allow_single_column=False,\n    contains_header=\"containsHeader\",\n    delimiter=\"delimiter\",\n    disable_value_trimming=False,\n    header=[\"header\"],\n    name=\"name\",\n    quote_symbol=\"quoteSymbol\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCsvClassifierProperty csvClassifierProperty = new CsvClassifierProperty {\n    AllowSingleColumn = false,\n    ContainsHeader = \"containsHeader\",\n    Delimiter = \"delimiter\",\n    DisableValueTrimming = false,\n    Header = new [] { \"header\" },\n    Name = \"name\",\n    QuoteSymbol = \"quoteSymbol\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCsvClassifierProperty csvClassifierProperty = CsvClassifierProperty.builder()\n        .allowSingleColumn(false)\n        .containsHeader(\"containsHeader\")\n        .delimiter(\"delimiter\")\n        .disableValueTrimming(false)\n        .header(List.of(\"header\"))\n        .name(\"name\")\n        .quoteSymbol(\"quoteSymbol\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncsvClassifierProperty := &csvClassifierProperty{\n\tallowSingleColumn: jsii.Boolean(false),\n\tcontainsHeader: jsii.String(\"containsHeader\"),\n\tdelimiter: jsii.String(\"delimiter\"),\n\tdisableValueTrimming: jsii.Boolean(false),\n\theader: []*string{\n\t\tjsii.String(\"header\"),\n\t},\n\tname: jsii.String(\"name\"),\n\tquoteSymbol: jsii.String(\"quoteSymbol\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst csvClassifierProperty: glue.CfnClassifier.CsvClassifierProperty = {\n  allowSingleColumn: false,\n  containsHeader: 'containsHeader',\n  delimiter: 'delimiter',\n  disableValueTrimming: false,\n  header: ['header'],\n  name: 'name',\n  quoteSymbol: 'quoteSymbol',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnClassifier.CsvClassifierProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnClassifier.CsvClassifierProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst csvClassifierProperty: glue.CfnClassifier.CsvClassifierProperty = {\n  allowSingleColumn: false,\n  containsHeader: 'containsHeader',\n  delimiter: 'delimiter',\n  disableValueTrimming: false,\n  header: ['header'],\n  name: 'name',\n  quoteSymbol: 'quoteSymbol',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 12,
        "91": 2,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "56da15e50106702304de4977871dcd4bf136cddafe5e4419d02eea8ee02459d5"
    },
    "8b053e78d6a85979bea2f910fc0f60f663120bff9ee8a4b13439a484e7ec5698": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ngrok_classifier_property = glue.CfnClassifier.GrokClassifierProperty(\n    classification=\"classification\",\n    grok_pattern=\"grokPattern\",\n\n    # the properties below are optional\n    custom_patterns=\"customPatterns\",\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nGrokClassifierProperty grokClassifierProperty = new GrokClassifierProperty {\n    Classification = \"classification\",\n    GrokPattern = \"grokPattern\",\n\n    // the properties below are optional\n    CustomPatterns = \"customPatterns\",\n    Name = \"name\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nGrokClassifierProperty grokClassifierProperty = GrokClassifierProperty.builder()\n        .classification(\"classification\")\n        .grokPattern(\"grokPattern\")\n\n        // the properties below are optional\n        .customPatterns(\"customPatterns\")\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ngrokClassifierProperty := &grokClassifierProperty{\n\tclassification: jsii.String(\"classification\"),\n\tgrokPattern: jsii.String(\"grokPattern\"),\n\n\t// the properties below are optional\n\tcustomPatterns: jsii.String(\"customPatterns\"),\n\tname: jsii.String(\"name\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst grokClassifierProperty: glue.CfnClassifier.GrokClassifierProperty = {\n  classification: 'classification',\n  grokPattern: 'grokPattern',\n\n  // the properties below are optional\n  customPatterns: 'customPatterns',\n  name: 'name',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnClassifier.GrokClassifierProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnClassifier.GrokClassifierProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst grokClassifierProperty: glue.CfnClassifier.GrokClassifierProperty = {\n  classification: 'classification',\n  grokPattern: 'grokPattern',\n\n  // the properties below are optional\n  customPatterns: 'customPatterns',\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "aef1ecee1d9d02fc0d1385b981f6abeb9e6caba2ca11af54c2d03d9919057c29"
    },
    "08ded05c50a6a652c8a793792e37a3163b9c433890a6d2204fa40a1f7e8465b5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\njson_classifier_property = glue.CfnClassifier.JsonClassifierProperty(\n    json_path=\"jsonPath\",\n\n    # the properties below are optional\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nJsonClassifierProperty jsonClassifierProperty = new JsonClassifierProperty {\n    JsonPath = \"jsonPath\",\n\n    // the properties below are optional\n    Name = \"name\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nJsonClassifierProperty jsonClassifierProperty = JsonClassifierProperty.builder()\n        .jsonPath(\"jsonPath\")\n\n        // the properties below are optional\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\njsonClassifierProperty := &jsonClassifierProperty{\n\tjsonPath: jsii.String(\"jsonPath\"),\n\n\t// the properties below are optional\n\tname: jsii.String(\"name\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst jsonClassifierProperty: glue.CfnClassifier.JsonClassifierProperty = {\n  jsonPath: 'jsonPath',\n\n  // the properties below are optional\n  name: 'name',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnClassifier.JsonClassifierProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnClassifier.JsonClassifierProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jsonClassifierProperty: glue.CfnClassifier.JsonClassifierProperty = {\n  jsonPath: 'jsonPath',\n\n  // the properties below are optional\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "3bb39c82606876f8ac5aed53a365f2f94f9185f543b753edb5e8377e848d87fb"
    },
    "522a4596eae5bcd4826fb8799774c9beb7ca907f1a310e2780ddba0efa02a9a9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nx_mLClassifier_property = glue.CfnClassifier.XMLClassifierProperty(\n    classification=\"classification\",\n    row_tag=\"rowTag\",\n\n    # the properties below are optional\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nXMLClassifierProperty xMLClassifierProperty = new XMLClassifierProperty {\n    Classification = \"classification\",\n    RowTag = \"rowTag\",\n\n    // the properties below are optional\n    Name = \"name\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nXMLClassifierProperty xMLClassifierProperty = XMLClassifierProperty.builder()\n        .classification(\"classification\")\n        .rowTag(\"rowTag\")\n\n        // the properties below are optional\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nxMLClassifierProperty := &xMLClassifierProperty{\n\tclassification: jsii.String(\"classification\"),\n\trowTag: jsii.String(\"rowTag\"),\n\n\t// the properties below are optional\n\tname: jsii.String(\"name\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst xMLClassifierProperty: glue.CfnClassifier.XMLClassifierProperty = {\n  classification: 'classification',\n  rowTag: 'rowTag',\n\n  // the properties below are optional\n  name: 'name',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnClassifier.XMLClassifierProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnClassifier.XMLClassifierProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst xMLClassifierProperty: glue.CfnClassifier.XMLClassifierProperty = {\n  classification: 'classification',\n  rowTag: 'rowTag',\n\n  // the properties below are optional\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "245e1903912e47db99736c61baf76f452d5b069a6124819fbcdf41c16556d7ce"
    },
    "88381750fc4ae8bb70bfa9b050b7f63ec73ea63a3c51b0fadc309e11880062bf": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncfn_classifier_props = glue.CfnClassifierProps(\n    csv_classifier=glue.CfnClassifier.CsvClassifierProperty(\n        allow_single_column=False,\n        contains_header=\"containsHeader\",\n        delimiter=\"delimiter\",\n        disable_value_trimming=False,\n        header=[\"header\"],\n        name=\"name\",\n        quote_symbol=\"quoteSymbol\"\n    ),\n    grok_classifier=glue.CfnClassifier.GrokClassifierProperty(\n        classification=\"classification\",\n        grok_pattern=\"grokPattern\",\n\n        # the properties below are optional\n        custom_patterns=\"customPatterns\",\n        name=\"name\"\n    ),\n    json_classifier=glue.CfnClassifier.JsonClassifierProperty(\n        json_path=\"jsonPath\",\n\n        # the properties below are optional\n        name=\"name\"\n    ),\n    xml_classifier=glue.CfnClassifier.XMLClassifierProperty(\n        classification=\"classification\",\n        row_tag=\"rowTag\",\n\n        # the properties below are optional\n        name=\"name\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCfnClassifierProps cfnClassifierProps = new CfnClassifierProps {\n    CsvClassifier = new CsvClassifierProperty {\n        AllowSingleColumn = false,\n        ContainsHeader = \"containsHeader\",\n        Delimiter = \"delimiter\",\n        DisableValueTrimming = false,\n        Header = new [] { \"header\" },\n        Name = \"name\",\n        QuoteSymbol = \"quoteSymbol\"\n    },\n    GrokClassifier = new GrokClassifierProperty {\n        Classification = \"classification\",\n        GrokPattern = \"grokPattern\",\n\n        // the properties below are optional\n        CustomPatterns = \"customPatterns\",\n        Name = \"name\"\n    },\n    JsonClassifier = new JsonClassifierProperty {\n        JsonPath = \"jsonPath\",\n\n        // the properties below are optional\n        Name = \"name\"\n    },\n    XmlClassifier = new XMLClassifierProperty {\n        Classification = \"classification\",\n        RowTag = \"rowTag\",\n\n        // the properties below are optional\n        Name = \"name\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCfnClassifierProps cfnClassifierProps = CfnClassifierProps.builder()\n        .csvClassifier(CsvClassifierProperty.builder()\n                .allowSingleColumn(false)\n                .containsHeader(\"containsHeader\")\n                .delimiter(\"delimiter\")\n                .disableValueTrimming(false)\n                .header(List.of(\"header\"))\n                .name(\"name\")\n                .quoteSymbol(\"quoteSymbol\")\n                .build())\n        .grokClassifier(GrokClassifierProperty.builder()\n                .classification(\"classification\")\n                .grokPattern(\"grokPattern\")\n\n                // the properties below are optional\n                .customPatterns(\"customPatterns\")\n                .name(\"name\")\n                .build())\n        .jsonClassifier(JsonClassifierProperty.builder()\n                .jsonPath(\"jsonPath\")\n\n                // the properties below are optional\n                .name(\"name\")\n                .build())\n        .xmlClassifier(XMLClassifierProperty.builder()\n                .classification(\"classification\")\n                .rowTag(\"rowTag\")\n\n                // the properties below are optional\n                .name(\"name\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncfnClassifierProps := &cfnClassifierProps{\n\tcsvClassifier: &csvClassifierProperty{\n\t\tallowSingleColumn: jsii.Boolean(false),\n\t\tcontainsHeader: jsii.String(\"containsHeader\"),\n\t\tdelimiter: jsii.String(\"delimiter\"),\n\t\tdisableValueTrimming: jsii.Boolean(false),\n\t\theader: []*string{\n\t\t\tjsii.String(\"header\"),\n\t\t},\n\t\tname: jsii.String(\"name\"),\n\t\tquoteSymbol: jsii.String(\"quoteSymbol\"),\n\t},\n\tgrokClassifier: &grokClassifierProperty{\n\t\tclassification: jsii.String(\"classification\"),\n\t\tgrokPattern: jsii.String(\"grokPattern\"),\n\n\t\t// the properties below are optional\n\t\tcustomPatterns: jsii.String(\"customPatterns\"),\n\t\tname: jsii.String(\"name\"),\n\t},\n\tjsonClassifier: &jsonClassifierProperty{\n\t\tjsonPath: jsii.String(\"jsonPath\"),\n\n\t\t// the properties below are optional\n\t\tname: jsii.String(\"name\"),\n\t},\n\txmlClassifier: &xMLClassifierProperty{\n\t\tclassification: jsii.String(\"classification\"),\n\t\trowTag: jsii.String(\"rowTag\"),\n\n\t\t// the properties below are optional\n\t\tname: jsii.String(\"name\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst cfnClassifierProps: glue.CfnClassifierProps = {\n  csvClassifier: {\n    allowSingleColumn: false,\n    containsHeader: 'containsHeader',\n    delimiter: 'delimiter',\n    disableValueTrimming: false,\n    header: ['header'],\n    name: 'name',\n    quoteSymbol: 'quoteSymbol',\n  },\n  grokClassifier: {\n    classification: 'classification',\n    grokPattern: 'grokPattern',\n\n    // the properties below are optional\n    customPatterns: 'customPatterns',\n    name: 'name',\n  },\n  jsonClassifier: {\n    jsonPath: 'jsonPath',\n\n    // the properties below are optional\n    name: 'name',\n  },\n  xmlClassifier: {\n    classification: 'classification',\n    rowTag: 'rowTag',\n\n    // the properties below are optional\n    name: 'name',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnClassifierProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnClassifierProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnClassifierProps: glue.CfnClassifierProps = {\n  csvClassifier: {\n    allowSingleColumn: false,\n    containsHeader: 'containsHeader',\n    delimiter: 'delimiter',\n    disableValueTrimming: false,\n    header: ['header'],\n    name: 'name',\n    quoteSymbol: 'quoteSymbol',\n  },\n  grokClassifier: {\n    classification: 'classification',\n    grokPattern: 'grokPattern',\n\n    // the properties below are optional\n    customPatterns: 'customPatterns',\n    name: 'name',\n  },\n  jsonClassifier: {\n    jsonPath: 'jsonPath',\n\n    // the properties below are optional\n    name: 'name',\n  },\n  xmlClassifier: {\n    classification: 'classification',\n    rowTag: 'rowTag',\n\n    // the properties below are optional\n    name: 'name',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 15,
        "75": 24,
        "91": 2,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 20,
        "290": 1
      },
      "fqnsFingerprint": "8c95b9b893455bb3beb686869bc8fa8f937a9fc263988796ad6b5565b40c7e66"
    },
    "4a5294ad1a020fcbaa2687bca9a08f2f6f172327c2d4c90c571994b749060882": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# connection_properties: Any\n\ncfn_connection = glue.CfnConnection(self, \"MyCfnConnection\",\n    catalog_id=\"catalogId\",\n    connection_input=glue.CfnConnection.ConnectionInputProperty(\n        connection_type=\"connectionType\",\n\n        # the properties below are optional\n        connection_properties=connection_properties,\n        description=\"description\",\n        match_criteria=[\"matchCriteria\"],\n        name=\"name\",\n        physical_connection_requirements=glue.CfnConnection.PhysicalConnectionRequirementsProperty(\n            availability_zone=\"availabilityZone\",\n            security_group_id_list=[\"securityGroupIdList\"],\n            subnet_id=\"subnetId\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar connectionProperties;\n\nCfnConnection cfnConnection = new CfnConnection(this, \"MyCfnConnection\", new CfnConnectionProps {\n    CatalogId = \"catalogId\",\n    ConnectionInput = new ConnectionInputProperty {\n        ConnectionType = \"connectionType\",\n\n        // the properties below are optional\n        ConnectionProperties = connectionProperties,\n        Description = \"description\",\n        MatchCriteria = new [] { \"matchCriteria\" },\n        Name = \"name\",\n        PhysicalConnectionRequirements = new PhysicalConnectionRequirementsProperty {\n            AvailabilityZone = \"availabilityZone\",\n            SecurityGroupIdList = new [] { \"securityGroupIdList\" },\n            SubnetId = \"subnetId\"\n        }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject connectionProperties;\n\nCfnConnection cfnConnection = CfnConnection.Builder.create(this, \"MyCfnConnection\")\n        .catalogId(\"catalogId\")\n        .connectionInput(ConnectionInputProperty.builder()\n                .connectionType(\"connectionType\")\n\n                // the properties below are optional\n                .connectionProperties(connectionProperties)\n                .description(\"description\")\n                .matchCriteria(List.of(\"matchCriteria\"))\n                .name(\"name\")\n                .physicalConnectionRequirements(PhysicalConnectionRequirementsProperty.builder()\n                        .availabilityZone(\"availabilityZone\")\n                        .securityGroupIdList(List.of(\"securityGroupIdList\"))\n                        .subnetId(\"subnetId\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar connectionProperties interface{}\ncfnConnection := glue.NewCfnConnection(this, jsii.String(\"MyCfnConnection\"), &cfnConnectionProps{\n\tcatalogId: jsii.String(\"catalogId\"),\n\tconnectionInput: &connectionInputProperty{\n\t\tconnectionType: jsii.String(\"connectionType\"),\n\n\t\t// the properties below are optional\n\t\tconnectionProperties: connectionProperties,\n\t\tdescription: jsii.String(\"description\"),\n\t\tmatchCriteria: []*string{\n\t\t\tjsii.String(\"matchCriteria\"),\n\t\t},\n\t\tname: jsii.String(\"name\"),\n\t\tphysicalConnectionRequirements: &physicalConnectionRequirementsProperty{\n\t\t\tavailabilityZone: jsii.String(\"availabilityZone\"),\n\t\t\tsecurityGroupIdList: []*string{\n\t\t\t\tjsii.String(\"securityGroupIdList\"),\n\t\t\t},\n\t\t\tsubnetId: jsii.String(\"subnetId\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const connectionProperties: any;\nconst cfnConnection = new glue.CfnConnection(this, 'MyCfnConnection', {\n  catalogId: 'catalogId',\n  connectionInput: {\n    connectionType: 'connectionType',\n\n    // the properties below are optional\n    connectionProperties: connectionProperties,\n    description: 'description',\n    matchCriteria: ['matchCriteria'],\n    name: 'name',\n    physicalConnectionRequirements: {\n      availabilityZone: 'availabilityZone',\n      securityGroupIdList: ['securityGroupIdList'],\n      subnetId: 'subnetId',\n    },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnConnection"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnConnection",
        "@aws-cdk/aws-glue.CfnConnectionProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const connectionProperties: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnConnection = new glue.CfnConnection(this, 'MyCfnConnection', {\n  catalogId: 'catalogId',\n  connectionInput: {\n    connectionType: 'connectionType',\n\n    // the properties below are optional\n    connectionProperties: connectionProperties,\n    description: 'description',\n    matchCriteria: ['matchCriteria'],\n    name: 'name',\n    physicalConnectionRequirements: {\n      availabilityZone: 'availabilityZone',\n      securityGroupIdList: ['securityGroupIdList'],\n      subnetId: 'subnetId',\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 17,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 2,
        "193": 3,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "890b929885c845fe95b3a8f9545c1928c144dd4e05625d1d5b6f8a2eed76ad98"
    },
    "2a7e503b4721eb003a8e1e453994ad93eb1c308dcf96c89f20108cb5e29bb907": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# connection_properties: Any\n\nconnection_input_property = glue.CfnConnection.ConnectionInputProperty(\n    connection_type=\"connectionType\",\n\n    # the properties below are optional\n    connection_properties=connection_properties,\n    description=\"description\",\n    match_criteria=[\"matchCriteria\"],\n    name=\"name\",\n    physical_connection_requirements=glue.CfnConnection.PhysicalConnectionRequirementsProperty(\n        availability_zone=\"availabilityZone\",\n        security_group_id_list=[\"securityGroupIdList\"],\n        subnet_id=\"subnetId\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar connectionProperties;\n\nConnectionInputProperty connectionInputProperty = new ConnectionInputProperty {\n    ConnectionType = \"connectionType\",\n\n    // the properties below are optional\n    ConnectionProperties = connectionProperties,\n    Description = \"description\",\n    MatchCriteria = new [] { \"matchCriteria\" },\n    Name = \"name\",\n    PhysicalConnectionRequirements = new PhysicalConnectionRequirementsProperty {\n        AvailabilityZone = \"availabilityZone\",\n        SecurityGroupIdList = new [] { \"securityGroupIdList\" },\n        SubnetId = \"subnetId\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject connectionProperties;\n\nConnectionInputProperty connectionInputProperty = ConnectionInputProperty.builder()\n        .connectionType(\"connectionType\")\n\n        // the properties below are optional\n        .connectionProperties(connectionProperties)\n        .description(\"description\")\n        .matchCriteria(List.of(\"matchCriteria\"))\n        .name(\"name\")\n        .physicalConnectionRequirements(PhysicalConnectionRequirementsProperty.builder()\n                .availabilityZone(\"availabilityZone\")\n                .securityGroupIdList(List.of(\"securityGroupIdList\"))\n                .subnetId(\"subnetId\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar connectionProperties interface{}\nconnectionInputProperty := &connectionInputProperty{\n\tconnectionType: jsii.String(\"connectionType\"),\n\n\t// the properties below are optional\n\tconnectionProperties: connectionProperties,\n\tdescription: jsii.String(\"description\"),\n\tmatchCriteria: []*string{\n\t\tjsii.String(\"matchCriteria\"),\n\t},\n\tname: jsii.String(\"name\"),\n\tphysicalConnectionRequirements: &physicalConnectionRequirementsProperty{\n\t\tavailabilityZone: jsii.String(\"availabilityZone\"),\n\t\tsecurityGroupIdList: []*string{\n\t\t\tjsii.String(\"securityGroupIdList\"),\n\t\t},\n\t\tsubnetId: jsii.String(\"subnetId\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const connectionProperties: any;\nconst connectionInputProperty: glue.CfnConnection.ConnectionInputProperty = {\n  connectionType: 'connectionType',\n\n  // the properties below are optional\n  connectionProperties: connectionProperties,\n  description: 'description',\n  matchCriteria: ['matchCriteria'],\n  name: 'name',\n  physicalConnectionRequirements: {\n    availabilityZone: 'availabilityZone',\n    securityGroupIdList: ['securityGroupIdList'],\n    subnetId: 'subnetId',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnConnection.ConnectionInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnConnection.ConnectionInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const connectionProperties: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst connectionInputProperty: glue.CfnConnection.ConnectionInputProperty = {\n  connectionType: 'connectionType',\n\n  // the properties below are optional\n  connectionProperties: connectionProperties,\n  description: 'description',\n  matchCriteria: ['matchCriteria'],\n  name: 'name',\n  physicalConnectionRequirements: {\n    availabilityZone: 'availabilityZone',\n    securityGroupIdList: ['securityGroupIdList'],\n    subnetId: 'subnetId',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 16,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "fd5b5adf3e8baeb910ff1090fd7a63053204cc861a076ec62a81a405c9f7d0be"
    },
    "748956c3f7be1d1c7c4aa326b511a74735f52cfaa75a13f73b8b9a130713f103": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nphysical_connection_requirements_property = glue.CfnConnection.PhysicalConnectionRequirementsProperty(\n    availability_zone=\"availabilityZone\",\n    security_group_id_list=[\"securityGroupIdList\"],\n    subnet_id=\"subnetId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nPhysicalConnectionRequirementsProperty physicalConnectionRequirementsProperty = new PhysicalConnectionRequirementsProperty {\n    AvailabilityZone = \"availabilityZone\",\n    SecurityGroupIdList = new [] { \"securityGroupIdList\" },\n    SubnetId = \"subnetId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nPhysicalConnectionRequirementsProperty physicalConnectionRequirementsProperty = PhysicalConnectionRequirementsProperty.builder()\n        .availabilityZone(\"availabilityZone\")\n        .securityGroupIdList(List.of(\"securityGroupIdList\"))\n        .subnetId(\"subnetId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nphysicalConnectionRequirementsProperty := &physicalConnectionRequirementsProperty{\n\tavailabilityZone: jsii.String(\"availabilityZone\"),\n\tsecurityGroupIdList: []*string{\n\t\tjsii.String(\"securityGroupIdList\"),\n\t},\n\tsubnetId: jsii.String(\"subnetId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst physicalConnectionRequirementsProperty: glue.CfnConnection.PhysicalConnectionRequirementsProperty = {\n  availabilityZone: 'availabilityZone',\n  securityGroupIdList: ['securityGroupIdList'],\n  subnetId: 'subnetId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnConnection.PhysicalConnectionRequirementsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnConnection.PhysicalConnectionRequirementsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst physicalConnectionRequirementsProperty: glue.CfnConnection.PhysicalConnectionRequirementsProperty = {\n  availabilityZone: 'availabilityZone',\n  securityGroupIdList: ['securityGroupIdList'],\n  subnetId: 'subnetId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "cfeeac26e068354238bb03a716f7b7ecf756cfe64d815d0e44daae4df988e409"
    },
    "b4be2afcc722c57b5ff7c6404fdec6b3f8c6c966fa9c4659c56a27e49af13a5e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# connection_properties: Any\n\ncfn_connection_props = glue.CfnConnectionProps(\n    catalog_id=\"catalogId\",\n    connection_input=glue.CfnConnection.ConnectionInputProperty(\n        connection_type=\"connectionType\",\n\n        # the properties below are optional\n        connection_properties=connection_properties,\n        description=\"description\",\n        match_criteria=[\"matchCriteria\"],\n        name=\"name\",\n        physical_connection_requirements=glue.CfnConnection.PhysicalConnectionRequirementsProperty(\n            availability_zone=\"availabilityZone\",\n            security_group_id_list=[\"securityGroupIdList\"],\n            subnet_id=\"subnetId\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar connectionProperties;\n\nCfnConnectionProps cfnConnectionProps = new CfnConnectionProps {\n    CatalogId = \"catalogId\",\n    ConnectionInput = new ConnectionInputProperty {\n        ConnectionType = \"connectionType\",\n\n        // the properties below are optional\n        ConnectionProperties = connectionProperties,\n        Description = \"description\",\n        MatchCriteria = new [] { \"matchCriteria\" },\n        Name = \"name\",\n        PhysicalConnectionRequirements = new PhysicalConnectionRequirementsProperty {\n            AvailabilityZone = \"availabilityZone\",\n            SecurityGroupIdList = new [] { \"securityGroupIdList\" },\n            SubnetId = \"subnetId\"\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject connectionProperties;\n\nCfnConnectionProps cfnConnectionProps = CfnConnectionProps.builder()\n        .catalogId(\"catalogId\")\n        .connectionInput(ConnectionInputProperty.builder()\n                .connectionType(\"connectionType\")\n\n                // the properties below are optional\n                .connectionProperties(connectionProperties)\n                .description(\"description\")\n                .matchCriteria(List.of(\"matchCriteria\"))\n                .name(\"name\")\n                .physicalConnectionRequirements(PhysicalConnectionRequirementsProperty.builder()\n                        .availabilityZone(\"availabilityZone\")\n                        .securityGroupIdList(List.of(\"securityGroupIdList\"))\n                        .subnetId(\"subnetId\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar connectionProperties interface{}\ncfnConnectionProps := &cfnConnectionProps{\n\tcatalogId: jsii.String(\"catalogId\"),\n\tconnectionInput: &connectionInputProperty{\n\t\tconnectionType: jsii.String(\"connectionType\"),\n\n\t\t// the properties below are optional\n\t\tconnectionProperties: connectionProperties,\n\t\tdescription: jsii.String(\"description\"),\n\t\tmatchCriteria: []*string{\n\t\t\tjsii.String(\"matchCriteria\"),\n\t\t},\n\t\tname: jsii.String(\"name\"),\n\t\tphysicalConnectionRequirements: &physicalConnectionRequirementsProperty{\n\t\t\tavailabilityZone: jsii.String(\"availabilityZone\"),\n\t\t\tsecurityGroupIdList: []*string{\n\t\t\t\tjsii.String(\"securityGroupIdList\"),\n\t\t\t},\n\t\t\tsubnetId: jsii.String(\"subnetId\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const connectionProperties: any;\nconst cfnConnectionProps: glue.CfnConnectionProps = {\n  catalogId: 'catalogId',\n  connectionInput: {\n    connectionType: 'connectionType',\n\n    // the properties below are optional\n    connectionProperties: connectionProperties,\n    description: 'description',\n    matchCriteria: ['matchCriteria'],\n    name: 'name',\n    physicalConnectionRequirements: {\n      availabilityZone: 'availabilityZone',\n      securityGroupIdList: ['securityGroupIdList'],\n      subnetId: 'subnetId',\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnConnectionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnConnectionProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const connectionProperties: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnConnectionProps: glue.CfnConnectionProps = {\n  catalogId: 'catalogId',\n  connectionInput: {\n    connectionType: 'connectionType',\n\n    // the properties below are optional\n    connectionProperties: connectionProperties,\n    description: 'description',\n    matchCriteria: ['matchCriteria'],\n    name: 'name',\n    physicalConnectionRequirements: {\n      availabilityZone: 'availabilityZone',\n      securityGroupIdList: ['securityGroupIdList'],\n      subnetId: 'subnetId',\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 17,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 3,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "cad8eb6879d309fc671b1d8290eee310aabdc25f76630a7d70a088e4cab5b924"
    },
    "0a34b979ff16a2d8a74c69a2d54952469db63052c01df01d710f5623ce03b6dd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# tags: Any\n\ncfn_crawler = glue.CfnCrawler(self, \"MyCfnCrawler\",\n    role=\"role\",\n    targets=glue.CfnCrawler.TargetsProperty(\n        catalog_targets=[glue.CfnCrawler.CatalogTargetProperty(\n            database_name=\"databaseName\",\n            tables=[\"tables\"]\n        )],\n        dynamo_db_targets=[glue.CfnCrawler.DynamoDBTargetProperty(\n            path=\"path\"\n        )],\n        jdbc_targets=[glue.CfnCrawler.JdbcTargetProperty(\n            connection_name=\"connectionName\",\n            exclusions=[\"exclusions\"],\n            path=\"path\"\n        )],\n        mongo_db_targets=[glue.CfnCrawler.MongoDBTargetProperty(\n            connection_name=\"connectionName\",\n            path=\"path\"\n        )],\n        s3_targets=[glue.CfnCrawler.S3TargetProperty(\n            connection_name=\"connectionName\",\n            dlq_event_queue_arn=\"dlqEventQueueArn\",\n            event_queue_arn=\"eventQueueArn\",\n            exclusions=[\"exclusions\"],\n            path=\"path\",\n            sample_size=123\n        )]\n    ),\n\n    # the properties below are optional\n    classifiers=[\"classifiers\"],\n    configuration=\"configuration\",\n    crawler_security_configuration=\"crawlerSecurityConfiguration\",\n    database_name=\"databaseName\",\n    description=\"description\",\n    name=\"name\",\n    recrawl_policy=glue.CfnCrawler.RecrawlPolicyProperty(\n        recrawl_behavior=\"recrawlBehavior\"\n    ),\n    schedule=glue.CfnCrawler.ScheduleProperty(\n        schedule_expression=\"scheduleExpression\"\n    ),\n    schema_change_policy=glue.CfnCrawler.SchemaChangePolicyProperty(\n        delete_behavior=\"deleteBehavior\",\n        update_behavior=\"updateBehavior\"\n    ),\n    table_prefix=\"tablePrefix\",\n    tags=tags\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar tags;\n\nCfnCrawler cfnCrawler = new CfnCrawler(this, \"MyCfnCrawler\", new CfnCrawlerProps {\n    Role = \"role\",\n    Targets = new TargetsProperty {\n        CatalogTargets = new [] { new CatalogTargetProperty {\n            DatabaseName = \"databaseName\",\n            Tables = new [] { \"tables\" }\n        } },\n        DynamoDbTargets = new [] { new DynamoDBTargetProperty {\n            Path = \"path\"\n        } },\n        JdbcTargets = new [] { new JdbcTargetProperty {\n            ConnectionName = \"connectionName\",\n            Exclusions = new [] { \"exclusions\" },\n            Path = \"path\"\n        } },\n        MongoDbTargets = new [] { new MongoDBTargetProperty {\n            ConnectionName = \"connectionName\",\n            Path = \"path\"\n        } },\n        S3Targets = new [] { new S3TargetProperty {\n            ConnectionName = \"connectionName\",\n            DlqEventQueueArn = \"dlqEventQueueArn\",\n            EventQueueArn = \"eventQueueArn\",\n            Exclusions = new [] { \"exclusions\" },\n            Path = \"path\",\n            SampleSize = 123\n        } }\n    },\n\n    // the properties below are optional\n    Classifiers = new [] { \"classifiers\" },\n    Configuration = \"configuration\",\n    CrawlerSecurityConfiguration = \"crawlerSecurityConfiguration\",\n    DatabaseName = \"databaseName\",\n    Description = \"description\",\n    Name = \"name\",\n    RecrawlPolicy = new RecrawlPolicyProperty {\n        RecrawlBehavior = \"recrawlBehavior\"\n    },\n    Schedule = new ScheduleProperty {\n        ScheduleExpression = \"scheduleExpression\"\n    },\n    SchemaChangePolicy = new SchemaChangePolicyProperty {\n        DeleteBehavior = \"deleteBehavior\",\n        UpdateBehavior = \"updateBehavior\"\n    },\n    TablePrefix = \"tablePrefix\",\n    Tags = tags\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject tags;\n\nCfnCrawler cfnCrawler = CfnCrawler.Builder.create(this, \"MyCfnCrawler\")\n        .role(\"role\")\n        .targets(TargetsProperty.builder()\n                .catalogTargets(List.of(CatalogTargetProperty.builder()\n                        .databaseName(\"databaseName\")\n                        .tables(List.of(\"tables\"))\n                        .build()))\n                .dynamoDbTargets(List.of(DynamoDBTargetProperty.builder()\n                        .path(\"path\")\n                        .build()))\n                .jdbcTargets(List.of(JdbcTargetProperty.builder()\n                        .connectionName(\"connectionName\")\n                        .exclusions(List.of(\"exclusions\"))\n                        .path(\"path\")\n                        .build()))\n                .mongoDbTargets(List.of(MongoDBTargetProperty.builder()\n                        .connectionName(\"connectionName\")\n                        .path(\"path\")\n                        .build()))\n                .s3Targets(List.of(S3TargetProperty.builder()\n                        .connectionName(\"connectionName\")\n                        .dlqEventQueueArn(\"dlqEventQueueArn\")\n                        .eventQueueArn(\"eventQueueArn\")\n                        .exclusions(List.of(\"exclusions\"))\n                        .path(\"path\")\n                        .sampleSize(123)\n                        .build()))\n                .build())\n\n        // the properties below are optional\n        .classifiers(List.of(\"classifiers\"))\n        .configuration(\"configuration\")\n        .crawlerSecurityConfiguration(\"crawlerSecurityConfiguration\")\n        .databaseName(\"databaseName\")\n        .description(\"description\")\n        .name(\"name\")\n        .recrawlPolicy(RecrawlPolicyProperty.builder()\n                .recrawlBehavior(\"recrawlBehavior\")\n                .build())\n        .schedule(ScheduleProperty.builder()\n                .scheduleExpression(\"scheduleExpression\")\n                .build())\n        .schemaChangePolicy(SchemaChangePolicyProperty.builder()\n                .deleteBehavior(\"deleteBehavior\")\n                .updateBehavior(\"updateBehavior\")\n                .build())\n        .tablePrefix(\"tablePrefix\")\n        .tags(tags)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar tags interface{}\ncfnCrawler := glue.NewCfnCrawler(this, jsii.String(\"MyCfnCrawler\"), &cfnCrawlerProps{\n\trole: jsii.String(\"role\"),\n\ttargets: &targetsProperty{\n\t\tcatalogTargets: []interface{}{\n\t\t\t&catalogTargetProperty{\n\t\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\t\ttables: []*string{\n\t\t\t\t\tjsii.String(\"tables\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tdynamoDbTargets: []interface{}{\n\t\t\t&dynamoDBTargetProperty{\n\t\t\t\tpath: jsii.String(\"path\"),\n\t\t\t},\n\t\t},\n\t\tjdbcTargets: []interface{}{\n\t\t\t&jdbcTargetProperty{\n\t\t\t\tconnectionName: jsii.String(\"connectionName\"),\n\t\t\t\texclusions: []*string{\n\t\t\t\t\tjsii.String(\"exclusions\"),\n\t\t\t\t},\n\t\t\t\tpath: jsii.String(\"path\"),\n\t\t\t},\n\t\t},\n\t\tmongoDbTargets: []interface{}{\n\t\t\t&mongoDBTargetProperty{\n\t\t\t\tconnectionName: jsii.String(\"connectionName\"),\n\t\t\t\tpath: jsii.String(\"path\"),\n\t\t\t},\n\t\t},\n\t\ts3Targets: []interface{}{\n\t\t\t&s3TargetProperty{\n\t\t\t\tconnectionName: jsii.String(\"connectionName\"),\n\t\t\t\tdlqEventQueueArn: jsii.String(\"dlqEventQueueArn\"),\n\t\t\t\teventQueueArn: jsii.String(\"eventQueueArn\"),\n\t\t\t\texclusions: []*string{\n\t\t\t\t\tjsii.String(\"exclusions\"),\n\t\t\t\t},\n\t\t\t\tpath: jsii.String(\"path\"),\n\t\t\t\tsampleSize: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tclassifiers: []*string{\n\t\tjsii.String(\"classifiers\"),\n\t},\n\tconfiguration: jsii.String(\"configuration\"),\n\tcrawlerSecurityConfiguration: jsii.String(\"crawlerSecurityConfiguration\"),\n\tdatabaseName: jsii.String(\"databaseName\"),\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\trecrawlPolicy: &recrawlPolicyProperty{\n\t\trecrawlBehavior: jsii.String(\"recrawlBehavior\"),\n\t},\n\tschedule: &scheduleProperty{\n\t\tscheduleExpression: jsii.String(\"scheduleExpression\"),\n\t},\n\tschemaChangePolicy: &schemaChangePolicyProperty{\n\t\tdeleteBehavior: jsii.String(\"deleteBehavior\"),\n\t\tupdateBehavior: jsii.String(\"updateBehavior\"),\n\t},\n\ttablePrefix: jsii.String(\"tablePrefix\"),\n\ttags: tags,\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const tags: any;\nconst cfnCrawler = new glue.CfnCrawler(this, 'MyCfnCrawler', {\n  role: 'role',\n  targets: {\n    catalogTargets: [{\n      databaseName: 'databaseName',\n      tables: ['tables'],\n    }],\n    dynamoDbTargets: [{\n      path: 'path',\n    }],\n    jdbcTargets: [{\n      connectionName: 'connectionName',\n      exclusions: ['exclusions'],\n      path: 'path',\n    }],\n    mongoDbTargets: [{\n      connectionName: 'connectionName',\n      path: 'path',\n    }],\n    s3Targets: [{\n      connectionName: 'connectionName',\n      dlqEventQueueArn: 'dlqEventQueueArn',\n      eventQueueArn: 'eventQueueArn',\n      exclusions: ['exclusions'],\n      path: 'path',\n      sampleSize: 123,\n    }],\n  },\n\n  // the properties below are optional\n  classifiers: ['classifiers'],\n  configuration: 'configuration',\n  crawlerSecurityConfiguration: 'crawlerSecurityConfiguration',\n  databaseName: 'databaseName',\n  description: 'description',\n  name: 'name',\n  recrawlPolicy: {\n    recrawlBehavior: 'recrawlBehavior',\n  },\n  schedule: {\n    scheduleExpression: 'scheduleExpression',\n  },\n  schemaChangePolicy: {\n    deleteBehavior: 'deleteBehavior',\n    updateBehavior: 'updateBehavior',\n  },\n  tablePrefix: 'tablePrefix',\n  tags: tags,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnCrawler"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnCrawler",
        "@aws-cdk/aws-glue.CfnCrawlerProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCrawler = new glue.CfnCrawler(this, 'MyCfnCrawler', {\n  role: 'role',\n  targets: {\n    catalogTargets: [{\n      databaseName: 'databaseName',\n      tables: ['tables'],\n    }],\n    dynamoDbTargets: [{\n      path: 'path',\n    }],\n    jdbcTargets: [{\n      connectionName: 'connectionName',\n      exclusions: ['exclusions'],\n      path: 'path',\n    }],\n    mongoDbTargets: [{\n      connectionName: 'connectionName',\n      path: 'path',\n    }],\n    s3Targets: [{\n      connectionName: 'connectionName',\n      dlqEventQueueArn: 'dlqEventQueueArn',\n      eventQueueArn: 'eventQueueArn',\n      exclusions: ['exclusions'],\n      path: 'path',\n      sampleSize: 123,\n    }],\n  },\n\n  // the properties below are optional\n  classifiers: ['classifiers'],\n  configuration: 'configuration',\n  crawlerSecurityConfiguration: 'crawlerSecurityConfiguration',\n  databaseName: 'databaseName',\n  description: 'description',\n  name: 'name',\n  recrawlPolicy: {\n    recrawlBehavior: 'recrawlBehavior',\n  },\n  schedule: {\n    scheduleExpression: 'scheduleExpression',\n  },\n  schemaChangePolicy: {\n    deleteBehavior: 'deleteBehavior',\n    updateBehavior: 'updateBehavior',\n  },\n  tablePrefix: 'tablePrefix',\n  tags: tags,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 27,
        "75": 42,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 9,
        "193": 10,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 36,
        "290": 1
      },
      "fqnsFingerprint": "977888fb91f19e3b888c1bb9200946e6efb4bedcedbd9d8d2bb0b6cf740c0b05"
    },
    "a5791a140dccc3b04e6535b0a7cd5fa69eb2298f6a94dc6d158cb06ddd5879f0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncatalog_target_property = glue.CfnCrawler.CatalogTargetProperty(\n    database_name=\"databaseName\",\n    tables=[\"tables\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCatalogTargetProperty catalogTargetProperty = new CatalogTargetProperty {\n    DatabaseName = \"databaseName\",\n    Tables = new [] { \"tables\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCatalogTargetProperty catalogTargetProperty = CatalogTargetProperty.builder()\n        .databaseName(\"databaseName\")\n        .tables(List.of(\"tables\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncatalogTargetProperty := &catalogTargetProperty{\n\tdatabaseName: jsii.String(\"databaseName\"),\n\ttables: []*string{\n\t\tjsii.String(\"tables\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst catalogTargetProperty: glue.CfnCrawler.CatalogTargetProperty = {\n  databaseName: 'databaseName',\n  tables: ['tables'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnCrawler.CatalogTargetProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnCrawler.CatalogTargetProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst catalogTargetProperty: glue.CfnCrawler.CatalogTargetProperty = {\n  databaseName: 'databaseName',\n  tables: ['tables'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "ab2b03ab4b8fcb4399921a28bfac76b6be6301d11d4304d473dde0ef20fe1bb5"
    },
    "79042b0b1206390990c5c4862f61668fd8a3cf8a8f791d4abd300556e395179e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ndynamo_dBTarget_property = glue.CfnCrawler.DynamoDBTargetProperty(\n    path=\"path\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nDynamoDBTargetProperty dynamoDBTargetProperty = new DynamoDBTargetProperty {\n    Path = \"path\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nDynamoDBTargetProperty dynamoDBTargetProperty = DynamoDBTargetProperty.builder()\n        .path(\"path\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ndynamoDBTargetProperty := &dynamoDBTargetProperty{\n\tpath: jsii.String(\"path\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst dynamoDBTargetProperty: glue.CfnCrawler.DynamoDBTargetProperty = {\n  path: 'path',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnCrawler.DynamoDBTargetProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnCrawler.DynamoDBTargetProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dynamoDBTargetProperty: glue.CfnCrawler.DynamoDBTargetProperty = {\n  path: 'path',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "21dd2b3965d51135e032c5211b5024421a2a0379c92aebc093af8fb8e0937b61"
    },
    "ab9ae0fc8aea1d26696c9aba0e11349797129f48d84eb362e1a8e615151f4c04": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\njdbc_target_property = glue.CfnCrawler.JdbcTargetProperty(\n    connection_name=\"connectionName\",\n    exclusions=[\"exclusions\"],\n    path=\"path\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nJdbcTargetProperty jdbcTargetProperty = new JdbcTargetProperty {\n    ConnectionName = \"connectionName\",\n    Exclusions = new [] { \"exclusions\" },\n    Path = \"path\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nJdbcTargetProperty jdbcTargetProperty = JdbcTargetProperty.builder()\n        .connectionName(\"connectionName\")\n        .exclusions(List.of(\"exclusions\"))\n        .path(\"path\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\njdbcTargetProperty := &jdbcTargetProperty{\n\tconnectionName: jsii.String(\"connectionName\"),\n\texclusions: []*string{\n\t\tjsii.String(\"exclusions\"),\n\t},\n\tpath: jsii.String(\"path\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst jdbcTargetProperty: glue.CfnCrawler.JdbcTargetProperty = {\n  connectionName: 'connectionName',\n  exclusions: ['exclusions'],\n  path: 'path',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnCrawler.JdbcTargetProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnCrawler.JdbcTargetProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jdbcTargetProperty: glue.CfnCrawler.JdbcTargetProperty = {\n  connectionName: 'connectionName',\n  exclusions: ['exclusions'],\n  path: 'path',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "58494b1693f5a19d25be9cbe1a20573ddf6923b7d502ba5a98381e9f94d024e0"
    },
    "3b21fbf7011b559e55dd28b048011d8f751d2b27436f0cbc5a59394c4a8fe49f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nmongo_dBTarget_property = glue.CfnCrawler.MongoDBTargetProperty(\n    connection_name=\"connectionName\",\n    path=\"path\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nMongoDBTargetProperty mongoDBTargetProperty = new MongoDBTargetProperty {\n    ConnectionName = \"connectionName\",\n    Path = \"path\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nMongoDBTargetProperty mongoDBTargetProperty = MongoDBTargetProperty.builder()\n        .connectionName(\"connectionName\")\n        .path(\"path\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nmongoDBTargetProperty := &mongoDBTargetProperty{\n\tconnectionName: jsii.String(\"connectionName\"),\n\tpath: jsii.String(\"path\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst mongoDBTargetProperty: glue.CfnCrawler.MongoDBTargetProperty = {\n  connectionName: 'connectionName',\n  path: 'path',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnCrawler.MongoDBTargetProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnCrawler.MongoDBTargetProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst mongoDBTargetProperty: glue.CfnCrawler.MongoDBTargetProperty = {\n  connectionName: 'connectionName',\n  path: 'path',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "c982e1770e84831077f8bab357ec8b645b6fb23952079acab8c68eaf0d1b598f"
    },
    "1f7ba7d2d4b761b3d4b80e0d7c56d1258670ef533f03cc3199a840e74225befb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nrecrawl_policy_property = glue.CfnCrawler.RecrawlPolicyProperty(\n    recrawl_behavior=\"recrawlBehavior\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nRecrawlPolicyProperty recrawlPolicyProperty = new RecrawlPolicyProperty {\n    RecrawlBehavior = \"recrawlBehavior\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nRecrawlPolicyProperty recrawlPolicyProperty = RecrawlPolicyProperty.builder()\n        .recrawlBehavior(\"recrawlBehavior\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nrecrawlPolicyProperty := &recrawlPolicyProperty{\n\trecrawlBehavior: jsii.String(\"recrawlBehavior\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst recrawlPolicyProperty: glue.CfnCrawler.RecrawlPolicyProperty = {\n  recrawlBehavior: 'recrawlBehavior',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnCrawler.RecrawlPolicyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnCrawler.RecrawlPolicyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst recrawlPolicyProperty: glue.CfnCrawler.RecrawlPolicyProperty = {\n  recrawlBehavior: 'recrawlBehavior',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "4a26c03fb09dab2b104141051c8a9fe3d3b5d4e7abdfec33ddd707f1fd347921"
    },
    "36e736897afa0ec88c646aad1ce4074344c3b606aa32e2c048827645eb3af3bd": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ns3_target_property = glue.CfnCrawler.S3TargetProperty(\n    connection_name=\"connectionName\",\n    dlq_event_queue_arn=\"dlqEventQueueArn\",\n    event_queue_arn=\"eventQueueArn\",\n    exclusions=[\"exclusions\"],\n    path=\"path\",\n    sample_size=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nS3TargetProperty s3TargetProperty = new S3TargetProperty {\n    ConnectionName = \"connectionName\",\n    DlqEventQueueArn = \"dlqEventQueueArn\",\n    EventQueueArn = \"eventQueueArn\",\n    Exclusions = new [] { \"exclusions\" },\n    Path = \"path\",\n    SampleSize = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nS3TargetProperty s3TargetProperty = S3TargetProperty.builder()\n        .connectionName(\"connectionName\")\n        .dlqEventQueueArn(\"dlqEventQueueArn\")\n        .eventQueueArn(\"eventQueueArn\")\n        .exclusions(List.of(\"exclusions\"))\n        .path(\"path\")\n        .sampleSize(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ns3TargetProperty := &s3TargetProperty{\n\tconnectionName: jsii.String(\"connectionName\"),\n\tdlqEventQueueArn: jsii.String(\"dlqEventQueueArn\"),\n\teventQueueArn: jsii.String(\"eventQueueArn\"),\n\texclusions: []*string{\n\t\tjsii.String(\"exclusions\"),\n\t},\n\tpath: jsii.String(\"path\"),\n\tsampleSize: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst s3TargetProperty: glue.CfnCrawler.S3TargetProperty = {\n  connectionName: 'connectionName',\n  dlqEventQueueArn: 'dlqEventQueueArn',\n  eventQueueArn: 'eventQueueArn',\n  exclusions: ['exclusions'],\n  path: 'path',\n  sampleSize: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnCrawler.S3TargetProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnCrawler.S3TargetProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3TargetProperty: glue.CfnCrawler.S3TargetProperty = {\n  connectionName: 'connectionName',\n  dlqEventQueueArn: 'dlqEventQueueArn',\n  eventQueueArn: 'eventQueueArn',\n  exclusions: ['exclusions'],\n  path: 'path',\n  sampleSize: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 6,
        "75": 11,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "c4bed65ceb139c9a0cb8db60ee0c52561a6a1f0dba89bc0dcfbe40b85c6318a3"
    },
    "b310eefd5f2cf64a91321eb0992d258b36c00021f0c6317839f8af6d2e86892a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nschedule_property = glue.CfnCrawler.ScheduleProperty(\n    schedule_expression=\"scheduleExpression\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nScheduleProperty scheduleProperty = new ScheduleProperty {\n    ScheduleExpression = \"scheduleExpression\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nScheduleProperty scheduleProperty = ScheduleProperty.builder()\n        .scheduleExpression(\"scheduleExpression\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nscheduleProperty := &scheduleProperty{\n\tscheduleExpression: jsii.String(\"scheduleExpression\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst scheduleProperty: glue.CfnCrawler.ScheduleProperty = {\n  scheduleExpression: 'scheduleExpression',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnCrawler.ScheduleProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnCrawler.ScheduleProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst scheduleProperty: glue.CfnCrawler.ScheduleProperty = {\n  scheduleExpression: 'scheduleExpression',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "818cae1c3cbc39c9ccf9f77348eaaa3c0570130a1e283192ab86fd153b1b3d43"
    },
    "31c5d672bb6adda97d1f2124b51063e3181c1b7eb27c300c59165f05d25ff1ef": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nschema_change_policy_property = glue.CfnCrawler.SchemaChangePolicyProperty(\n    delete_behavior=\"deleteBehavior\",\n    update_behavior=\"updateBehavior\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nSchemaChangePolicyProperty schemaChangePolicyProperty = new SchemaChangePolicyProperty {\n    DeleteBehavior = \"deleteBehavior\",\n    UpdateBehavior = \"updateBehavior\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nSchemaChangePolicyProperty schemaChangePolicyProperty = SchemaChangePolicyProperty.builder()\n        .deleteBehavior(\"deleteBehavior\")\n        .updateBehavior(\"updateBehavior\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nschemaChangePolicyProperty := &schemaChangePolicyProperty{\n\tdeleteBehavior: jsii.String(\"deleteBehavior\"),\n\tupdateBehavior: jsii.String(\"updateBehavior\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst schemaChangePolicyProperty: glue.CfnCrawler.SchemaChangePolicyProperty = {\n  deleteBehavior: 'deleteBehavior',\n  updateBehavior: 'updateBehavior',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnCrawler.SchemaChangePolicyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnCrawler.SchemaChangePolicyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst schemaChangePolicyProperty: glue.CfnCrawler.SchemaChangePolicyProperty = {\n  deleteBehavior: 'deleteBehavior',\n  updateBehavior: 'updateBehavior',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "acafca57ba6c6b9e5b1ff6e9b298a4e595788dbb91faa360ead2cefa85e8d497"
    },
    "0394f51c4a59cc7a1cea79a66fe937eb700b475c95548be01ab01bf42b9d361a": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ntargets_property = glue.CfnCrawler.TargetsProperty(\n    catalog_targets=[glue.CfnCrawler.CatalogTargetProperty(\n        database_name=\"databaseName\",\n        tables=[\"tables\"]\n    )],\n    dynamo_db_targets=[glue.CfnCrawler.DynamoDBTargetProperty(\n        path=\"path\"\n    )],\n    jdbc_targets=[glue.CfnCrawler.JdbcTargetProperty(\n        connection_name=\"connectionName\",\n        exclusions=[\"exclusions\"],\n        path=\"path\"\n    )],\n    mongo_db_targets=[glue.CfnCrawler.MongoDBTargetProperty(\n        connection_name=\"connectionName\",\n        path=\"path\"\n    )],\n    s3_targets=[glue.CfnCrawler.S3TargetProperty(\n        connection_name=\"connectionName\",\n        dlq_event_queue_arn=\"dlqEventQueueArn\",\n        event_queue_arn=\"eventQueueArn\",\n        exclusions=[\"exclusions\"],\n        path=\"path\",\n        sample_size=123\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nTargetsProperty targetsProperty = new TargetsProperty {\n    CatalogTargets = new [] { new CatalogTargetProperty {\n        DatabaseName = \"databaseName\",\n        Tables = new [] { \"tables\" }\n    } },\n    DynamoDbTargets = new [] { new DynamoDBTargetProperty {\n        Path = \"path\"\n    } },\n    JdbcTargets = new [] { new JdbcTargetProperty {\n        ConnectionName = \"connectionName\",\n        Exclusions = new [] { \"exclusions\" },\n        Path = \"path\"\n    } },\n    MongoDbTargets = new [] { new MongoDBTargetProperty {\n        ConnectionName = \"connectionName\",\n        Path = \"path\"\n    } },\n    S3Targets = new [] { new S3TargetProperty {\n        ConnectionName = \"connectionName\",\n        DlqEventQueueArn = \"dlqEventQueueArn\",\n        EventQueueArn = \"eventQueueArn\",\n        Exclusions = new [] { \"exclusions\" },\n        Path = \"path\",\n        SampleSize = 123\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nTargetsProperty targetsProperty = TargetsProperty.builder()\n        .catalogTargets(List.of(CatalogTargetProperty.builder()\n                .databaseName(\"databaseName\")\n                .tables(List.of(\"tables\"))\n                .build()))\n        .dynamoDbTargets(List.of(DynamoDBTargetProperty.builder()\n                .path(\"path\")\n                .build()))\n        .jdbcTargets(List.of(JdbcTargetProperty.builder()\n                .connectionName(\"connectionName\")\n                .exclusions(List.of(\"exclusions\"))\n                .path(\"path\")\n                .build()))\n        .mongoDbTargets(List.of(MongoDBTargetProperty.builder()\n                .connectionName(\"connectionName\")\n                .path(\"path\")\n                .build()))\n        .s3Targets(List.of(S3TargetProperty.builder()\n                .connectionName(\"connectionName\")\n                .dlqEventQueueArn(\"dlqEventQueueArn\")\n                .eventQueueArn(\"eventQueueArn\")\n                .exclusions(List.of(\"exclusions\"))\n                .path(\"path\")\n                .sampleSize(123)\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ntargetsProperty := &targetsProperty{\n\tcatalogTargets: []interface{}{\n\t\t&catalogTargetProperty{\n\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\ttables: []*string{\n\t\t\t\tjsii.String(\"tables\"),\n\t\t\t},\n\t\t},\n\t},\n\tdynamoDbTargets: []interface{}{\n\t\t&dynamoDBTargetProperty{\n\t\t\tpath: jsii.String(\"path\"),\n\t\t},\n\t},\n\tjdbcTargets: []interface{}{\n\t\t&jdbcTargetProperty{\n\t\t\tconnectionName: jsii.String(\"connectionName\"),\n\t\t\texclusions: []*string{\n\t\t\t\tjsii.String(\"exclusions\"),\n\t\t\t},\n\t\t\tpath: jsii.String(\"path\"),\n\t\t},\n\t},\n\tmongoDbTargets: []interface{}{\n\t\t&mongoDBTargetProperty{\n\t\t\tconnectionName: jsii.String(\"connectionName\"),\n\t\t\tpath: jsii.String(\"path\"),\n\t\t},\n\t},\n\ts3Targets: []interface{}{\n\t\t&s3TargetProperty{\n\t\t\tconnectionName: jsii.String(\"connectionName\"),\n\t\t\tdlqEventQueueArn: jsii.String(\"dlqEventQueueArn\"),\n\t\t\teventQueueArn: jsii.String(\"eventQueueArn\"),\n\t\t\texclusions: []*string{\n\t\t\t\tjsii.String(\"exclusions\"),\n\t\t\t},\n\t\t\tpath: jsii.String(\"path\"),\n\t\t\tsampleSize: jsii.Number(123),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst targetsProperty: glue.CfnCrawler.TargetsProperty = {\n  catalogTargets: [{\n    databaseName: 'databaseName',\n    tables: ['tables'],\n  }],\n  dynamoDbTargets: [{\n    path: 'path',\n  }],\n  jdbcTargets: [{\n    connectionName: 'connectionName',\n    exclusions: ['exclusions'],\n    path: 'path',\n  }],\n  mongoDbTargets: [{\n    connectionName: 'connectionName',\n    path: 'path',\n  }],\n  s3Targets: [{\n    connectionName: 'connectionName',\n    dlqEventQueueArn: 'dlqEventQueueArn',\n    eventQueueArn: 'eventQueueArn',\n    exclusions: ['exclusions'],\n    path: 'path',\n    sampleSize: 123,\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnCrawler.TargetsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnCrawler.TargetsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst targetsProperty: glue.CfnCrawler.TargetsProperty = {\n  catalogTargets: [{\n    databaseName: 'databaseName',\n    tables: ['tables'],\n  }],\n  dynamoDbTargets: [{\n    path: 'path',\n  }],\n  jdbcTargets: [{\n    connectionName: 'connectionName',\n    exclusions: ['exclusions'],\n    path: 'path',\n  }],\n  mongoDbTargets: [{\n    connectionName: 'connectionName',\n    path: 'path',\n  }],\n  s3Targets: [{\n    connectionName: 'connectionName',\n    dlqEventQueueArn: 'dlqEventQueueArn',\n    eventQueueArn: 'eventQueueArn',\n    exclusions: ['exclusions'],\n    path: 'path',\n    sampleSize: 123,\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 14,
        "75": 24,
        "153": 2,
        "169": 1,
        "192": 8,
        "193": 6,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 19,
        "290": 1
      },
      "fqnsFingerprint": "c3b9f3224f1e0f40f7cca22fba2fcb0465fe7fe8b7137f1862f81e6746840607"
    },
    "de8ae3aa22e3c7e4b3466a333eeb888dcb556506563585bd842f683194a1667e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# tags: Any\n\ncfn_crawler_props = glue.CfnCrawlerProps(\n    role=\"role\",\n    targets=glue.CfnCrawler.TargetsProperty(\n        catalog_targets=[glue.CfnCrawler.CatalogTargetProperty(\n            database_name=\"databaseName\",\n            tables=[\"tables\"]\n        )],\n        dynamo_db_targets=[glue.CfnCrawler.DynamoDBTargetProperty(\n            path=\"path\"\n        )],\n        jdbc_targets=[glue.CfnCrawler.JdbcTargetProperty(\n            connection_name=\"connectionName\",\n            exclusions=[\"exclusions\"],\n            path=\"path\"\n        )],\n        mongo_db_targets=[glue.CfnCrawler.MongoDBTargetProperty(\n            connection_name=\"connectionName\",\n            path=\"path\"\n        )],\n        s3_targets=[glue.CfnCrawler.S3TargetProperty(\n            connection_name=\"connectionName\",\n            dlq_event_queue_arn=\"dlqEventQueueArn\",\n            event_queue_arn=\"eventQueueArn\",\n            exclusions=[\"exclusions\"],\n            path=\"path\",\n            sample_size=123\n        )]\n    ),\n\n    # the properties below are optional\n    classifiers=[\"classifiers\"],\n    configuration=\"configuration\",\n    crawler_security_configuration=\"crawlerSecurityConfiguration\",\n    database_name=\"databaseName\",\n    description=\"description\",\n    name=\"name\",\n    recrawl_policy=glue.CfnCrawler.RecrawlPolicyProperty(\n        recrawl_behavior=\"recrawlBehavior\"\n    ),\n    schedule=glue.CfnCrawler.ScheduleProperty(\n        schedule_expression=\"scheduleExpression\"\n    ),\n    schema_change_policy=glue.CfnCrawler.SchemaChangePolicyProperty(\n        delete_behavior=\"deleteBehavior\",\n        update_behavior=\"updateBehavior\"\n    ),\n    table_prefix=\"tablePrefix\",\n    tags=tags\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar tags;\n\nCfnCrawlerProps cfnCrawlerProps = new CfnCrawlerProps {\n    Role = \"role\",\n    Targets = new TargetsProperty {\n        CatalogTargets = new [] { new CatalogTargetProperty {\n            DatabaseName = \"databaseName\",\n            Tables = new [] { \"tables\" }\n        } },\n        DynamoDbTargets = new [] { new DynamoDBTargetProperty {\n            Path = \"path\"\n        } },\n        JdbcTargets = new [] { new JdbcTargetProperty {\n            ConnectionName = \"connectionName\",\n            Exclusions = new [] { \"exclusions\" },\n            Path = \"path\"\n        } },\n        MongoDbTargets = new [] { new MongoDBTargetProperty {\n            ConnectionName = \"connectionName\",\n            Path = \"path\"\n        } },\n        S3Targets = new [] { new S3TargetProperty {\n            ConnectionName = \"connectionName\",\n            DlqEventQueueArn = \"dlqEventQueueArn\",\n            EventQueueArn = \"eventQueueArn\",\n            Exclusions = new [] { \"exclusions\" },\n            Path = \"path\",\n            SampleSize = 123\n        } }\n    },\n\n    // the properties below are optional\n    Classifiers = new [] { \"classifiers\" },\n    Configuration = \"configuration\",\n    CrawlerSecurityConfiguration = \"crawlerSecurityConfiguration\",\n    DatabaseName = \"databaseName\",\n    Description = \"description\",\n    Name = \"name\",\n    RecrawlPolicy = new RecrawlPolicyProperty {\n        RecrawlBehavior = \"recrawlBehavior\"\n    },\n    Schedule = new ScheduleProperty {\n        ScheduleExpression = \"scheduleExpression\"\n    },\n    SchemaChangePolicy = new SchemaChangePolicyProperty {\n        DeleteBehavior = \"deleteBehavior\",\n        UpdateBehavior = \"updateBehavior\"\n    },\n    TablePrefix = \"tablePrefix\",\n    Tags = tags\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject tags;\n\nCfnCrawlerProps cfnCrawlerProps = CfnCrawlerProps.builder()\n        .role(\"role\")\n        .targets(TargetsProperty.builder()\n                .catalogTargets(List.of(CatalogTargetProperty.builder()\n                        .databaseName(\"databaseName\")\n                        .tables(List.of(\"tables\"))\n                        .build()))\n                .dynamoDbTargets(List.of(DynamoDBTargetProperty.builder()\n                        .path(\"path\")\n                        .build()))\n                .jdbcTargets(List.of(JdbcTargetProperty.builder()\n                        .connectionName(\"connectionName\")\n                        .exclusions(List.of(\"exclusions\"))\n                        .path(\"path\")\n                        .build()))\n                .mongoDbTargets(List.of(MongoDBTargetProperty.builder()\n                        .connectionName(\"connectionName\")\n                        .path(\"path\")\n                        .build()))\n                .s3Targets(List.of(S3TargetProperty.builder()\n                        .connectionName(\"connectionName\")\n                        .dlqEventQueueArn(\"dlqEventQueueArn\")\n                        .eventQueueArn(\"eventQueueArn\")\n                        .exclusions(List.of(\"exclusions\"))\n                        .path(\"path\")\n                        .sampleSize(123)\n                        .build()))\n                .build())\n\n        // the properties below are optional\n        .classifiers(List.of(\"classifiers\"))\n        .configuration(\"configuration\")\n        .crawlerSecurityConfiguration(\"crawlerSecurityConfiguration\")\n        .databaseName(\"databaseName\")\n        .description(\"description\")\n        .name(\"name\")\n        .recrawlPolicy(RecrawlPolicyProperty.builder()\n                .recrawlBehavior(\"recrawlBehavior\")\n                .build())\n        .schedule(ScheduleProperty.builder()\n                .scheduleExpression(\"scheduleExpression\")\n                .build())\n        .schemaChangePolicy(SchemaChangePolicyProperty.builder()\n                .deleteBehavior(\"deleteBehavior\")\n                .updateBehavior(\"updateBehavior\")\n                .build())\n        .tablePrefix(\"tablePrefix\")\n        .tags(tags)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar tags interface{}\ncfnCrawlerProps := &cfnCrawlerProps{\n\trole: jsii.String(\"role\"),\n\ttargets: &targetsProperty{\n\t\tcatalogTargets: []interface{}{\n\t\t\t&catalogTargetProperty{\n\t\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\t\ttables: []*string{\n\t\t\t\t\tjsii.String(\"tables\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tdynamoDbTargets: []interface{}{\n\t\t\t&dynamoDBTargetProperty{\n\t\t\t\tpath: jsii.String(\"path\"),\n\t\t\t},\n\t\t},\n\t\tjdbcTargets: []interface{}{\n\t\t\t&jdbcTargetProperty{\n\t\t\t\tconnectionName: jsii.String(\"connectionName\"),\n\t\t\t\texclusions: []*string{\n\t\t\t\t\tjsii.String(\"exclusions\"),\n\t\t\t\t},\n\t\t\t\tpath: jsii.String(\"path\"),\n\t\t\t},\n\t\t},\n\t\tmongoDbTargets: []interface{}{\n\t\t\t&mongoDBTargetProperty{\n\t\t\t\tconnectionName: jsii.String(\"connectionName\"),\n\t\t\t\tpath: jsii.String(\"path\"),\n\t\t\t},\n\t\t},\n\t\ts3Targets: []interface{}{\n\t\t\t&s3TargetProperty{\n\t\t\t\tconnectionName: jsii.String(\"connectionName\"),\n\t\t\t\tdlqEventQueueArn: jsii.String(\"dlqEventQueueArn\"),\n\t\t\t\teventQueueArn: jsii.String(\"eventQueueArn\"),\n\t\t\t\texclusions: []*string{\n\t\t\t\t\tjsii.String(\"exclusions\"),\n\t\t\t\t},\n\t\t\t\tpath: jsii.String(\"path\"),\n\t\t\t\tsampleSize: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tclassifiers: []*string{\n\t\tjsii.String(\"classifiers\"),\n\t},\n\tconfiguration: jsii.String(\"configuration\"),\n\tcrawlerSecurityConfiguration: jsii.String(\"crawlerSecurityConfiguration\"),\n\tdatabaseName: jsii.String(\"databaseName\"),\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\trecrawlPolicy: &recrawlPolicyProperty{\n\t\trecrawlBehavior: jsii.String(\"recrawlBehavior\"),\n\t},\n\tschedule: &scheduleProperty{\n\t\tscheduleExpression: jsii.String(\"scheduleExpression\"),\n\t},\n\tschemaChangePolicy: &schemaChangePolicyProperty{\n\t\tdeleteBehavior: jsii.String(\"deleteBehavior\"),\n\t\tupdateBehavior: jsii.String(\"updateBehavior\"),\n\t},\n\ttablePrefix: jsii.String(\"tablePrefix\"),\n\ttags: tags,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const tags: any;\nconst cfnCrawlerProps: glue.CfnCrawlerProps = {\n  role: 'role',\n  targets: {\n    catalogTargets: [{\n      databaseName: 'databaseName',\n      tables: ['tables'],\n    }],\n    dynamoDbTargets: [{\n      path: 'path',\n    }],\n    jdbcTargets: [{\n      connectionName: 'connectionName',\n      exclusions: ['exclusions'],\n      path: 'path',\n    }],\n    mongoDbTargets: [{\n      connectionName: 'connectionName',\n      path: 'path',\n    }],\n    s3Targets: [{\n      connectionName: 'connectionName',\n      dlqEventQueueArn: 'dlqEventQueueArn',\n      eventQueueArn: 'eventQueueArn',\n      exclusions: ['exclusions'],\n      path: 'path',\n      sampleSize: 123,\n    }],\n  },\n\n  // the properties below are optional\n  classifiers: ['classifiers'],\n  configuration: 'configuration',\n  crawlerSecurityConfiguration: 'crawlerSecurityConfiguration',\n  databaseName: 'databaseName',\n  description: 'description',\n  name: 'name',\n  recrawlPolicy: {\n    recrawlBehavior: 'recrawlBehavior',\n  },\n  schedule: {\n    scheduleExpression: 'scheduleExpression',\n  },\n  schemaChangePolicy: {\n    deleteBehavior: 'deleteBehavior',\n    updateBehavior: 'updateBehavior',\n  },\n  tablePrefix: 'tablePrefix',\n  tags: tags,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnCrawlerProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnCrawlerProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnCrawlerProps: glue.CfnCrawlerProps = {\n  role: 'role',\n  targets: {\n    catalogTargets: [{\n      databaseName: 'databaseName',\n      tables: ['tables'],\n    }],\n    dynamoDbTargets: [{\n      path: 'path',\n    }],\n    jdbcTargets: [{\n      connectionName: 'connectionName',\n      exclusions: ['exclusions'],\n      path: 'path',\n    }],\n    mongoDbTargets: [{\n      connectionName: 'connectionName',\n      path: 'path',\n    }],\n    s3Targets: [{\n      connectionName: 'connectionName',\n      dlqEventQueueArn: 'dlqEventQueueArn',\n      eventQueueArn: 'eventQueueArn',\n      exclusions: ['exclusions'],\n      path: 'path',\n      sampleSize: 123,\n    }],\n  },\n\n  // the properties below are optional\n  classifiers: ['classifiers'],\n  configuration: 'configuration',\n  crawlerSecurityConfiguration: 'crawlerSecurityConfiguration',\n  databaseName: 'databaseName',\n  description: 'description',\n  name: 'name',\n  recrawlPolicy: {\n    recrawlBehavior: 'recrawlBehavior',\n  },\n  schedule: {\n    scheduleExpression: 'scheduleExpression',\n  },\n  schemaChangePolicy: {\n    deleteBehavior: 'deleteBehavior',\n    updateBehavior: 'updateBehavior',\n  },\n  tablePrefix: 'tablePrefix',\n  tags: tags,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 26,
        "75": 42,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 9,
        "193": 10,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 36,
        "290": 1
      },
      "fqnsFingerprint": "91f61ddd6a9befc917b55c7971ff5421f198614197e42c81215b109a99db397b"
    },
    "1e212920eda7e612fde3474bb97748e27103cdd4c332de47fff7b2420f67ac1e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncfn_data_catalog_encryption_settings = glue.CfnDataCatalogEncryptionSettings(self, \"MyCfnDataCatalogEncryptionSettings\",\n    catalog_id=\"catalogId\",\n    data_catalog_encryption_settings=glue.CfnDataCatalogEncryptionSettings.DataCatalogEncryptionSettingsProperty(\n        connection_password_encryption=glue.CfnDataCatalogEncryptionSettings.ConnectionPasswordEncryptionProperty(\n            kms_key_id=\"kmsKeyId\",\n            return_connection_password_encrypted=False\n        ),\n        encryption_at_rest=glue.CfnDataCatalogEncryptionSettings.EncryptionAtRestProperty(\n            catalog_encryption_mode=\"catalogEncryptionMode\",\n            sse_aws_kms_key_id=\"sseAwsKmsKeyId\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCfnDataCatalogEncryptionSettings cfnDataCatalogEncryptionSettings = new CfnDataCatalogEncryptionSettings(this, \"MyCfnDataCatalogEncryptionSettings\", new CfnDataCatalogEncryptionSettingsProps {\n    CatalogId = \"catalogId\",\n    DataCatalogEncryptionSettings = new DataCatalogEncryptionSettingsProperty {\n        ConnectionPasswordEncryption = new ConnectionPasswordEncryptionProperty {\n            KmsKeyId = \"kmsKeyId\",\n            ReturnConnectionPasswordEncrypted = false\n        },\n        EncryptionAtRest = new EncryptionAtRestProperty {\n            CatalogEncryptionMode = \"catalogEncryptionMode\",\n            SseAwsKmsKeyId = \"sseAwsKmsKeyId\"\n        }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCfnDataCatalogEncryptionSettings cfnDataCatalogEncryptionSettings = CfnDataCatalogEncryptionSettings.Builder.create(this, \"MyCfnDataCatalogEncryptionSettings\")\n        .catalogId(\"catalogId\")\n        .dataCatalogEncryptionSettings(DataCatalogEncryptionSettingsProperty.builder()\n                .connectionPasswordEncryption(ConnectionPasswordEncryptionProperty.builder()\n                        .kmsKeyId(\"kmsKeyId\")\n                        .returnConnectionPasswordEncrypted(false)\n                        .build())\n                .encryptionAtRest(EncryptionAtRestProperty.builder()\n                        .catalogEncryptionMode(\"catalogEncryptionMode\")\n                        .sseAwsKmsKeyId(\"sseAwsKmsKeyId\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncfnDataCatalogEncryptionSettings := glue.NewCfnDataCatalogEncryptionSettings(this, jsii.String(\"MyCfnDataCatalogEncryptionSettings\"), &cfnDataCatalogEncryptionSettingsProps{\n\tcatalogId: jsii.String(\"catalogId\"),\n\tdataCatalogEncryptionSettings: &dataCatalogEncryptionSettingsProperty{\n\t\tconnectionPasswordEncryption: &connectionPasswordEncryptionProperty{\n\t\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t\t\treturnConnectionPasswordEncrypted: jsii.Boolean(false),\n\t\t},\n\t\tencryptionAtRest: &encryptionAtRestProperty{\n\t\t\tcatalogEncryptionMode: jsii.String(\"catalogEncryptionMode\"),\n\t\t\tsseAwsKmsKeyId: jsii.String(\"sseAwsKmsKeyId\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst cfnDataCatalogEncryptionSettings = new glue.CfnDataCatalogEncryptionSettings(this, 'MyCfnDataCatalogEncryptionSettings', {\n  catalogId: 'catalogId',\n  dataCatalogEncryptionSettings: {\n    connectionPasswordEncryption: {\n      kmsKeyId: 'kmsKeyId',\n      returnConnectionPasswordEncrypted: false,\n    },\n    encryptionAtRest: {\n      catalogEncryptionMode: 'catalogEncryptionMode',\n      sseAwsKmsKeyId: 'sseAwsKmsKeyId',\n    },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnDataCatalogEncryptionSettings"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnDataCatalogEncryptionSettings",
        "@aws-cdk/aws-glue.CfnDataCatalogEncryptionSettingsProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDataCatalogEncryptionSettings = new glue.CfnDataCatalogEncryptionSettings(this, 'MyCfnDataCatalogEncryptionSettings', {\n  catalogId: 'catalogId',\n  dataCatalogEncryptionSettings: {\n    connectionPasswordEncryption: {\n      kmsKeyId: 'kmsKeyId',\n      returnConnectionPasswordEncrypted: false,\n    },\n    encryptionAtRest: {\n      catalogEncryptionMode: 'catalogEncryptionMode',\n      sseAwsKmsKeyId: 'sseAwsKmsKeyId',\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 12,
        "91": 1,
        "104": 1,
        "193": 4,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "4aa13c9b40587b3b051afd9ce075924b5de166299eacabdcdbbb94516009a3f6"
    },
    "50b58d69ee338463dab253ba22ca01677b10802f905182ce1a9b64b42bca8803": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nconnection_password_encryption_property = glue.CfnDataCatalogEncryptionSettings.ConnectionPasswordEncryptionProperty(\n    kms_key_id=\"kmsKeyId\",\n    return_connection_password_encrypted=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nConnectionPasswordEncryptionProperty connectionPasswordEncryptionProperty = new ConnectionPasswordEncryptionProperty {\n    KmsKeyId = \"kmsKeyId\",\n    ReturnConnectionPasswordEncrypted = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nConnectionPasswordEncryptionProperty connectionPasswordEncryptionProperty = ConnectionPasswordEncryptionProperty.builder()\n        .kmsKeyId(\"kmsKeyId\")\n        .returnConnectionPasswordEncrypted(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nconnectionPasswordEncryptionProperty := &connectionPasswordEncryptionProperty{\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\treturnConnectionPasswordEncrypted: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst connectionPasswordEncryptionProperty: glue.CfnDataCatalogEncryptionSettings.ConnectionPasswordEncryptionProperty = {\n  kmsKeyId: 'kmsKeyId',\n  returnConnectionPasswordEncrypted: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnDataCatalogEncryptionSettings.ConnectionPasswordEncryptionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnDataCatalogEncryptionSettings.ConnectionPasswordEncryptionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst connectionPasswordEncryptionProperty: glue.CfnDataCatalogEncryptionSettings.ConnectionPasswordEncryptionProperty = {\n  kmsKeyId: 'kmsKeyId',\n  returnConnectionPasswordEncrypted: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "09536710fd2f08f31d848ce81f02c42f12b23ac3807d652e41cec9de932ed1d3"
    },
    "5d4bfde4113eea3cd6ab58ac0c866dfe7b22a977cd8d88fd42c2a70d473e5163": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ndata_catalog_encryption_settings_property = glue.CfnDataCatalogEncryptionSettings.DataCatalogEncryptionSettingsProperty(\n    connection_password_encryption=glue.CfnDataCatalogEncryptionSettings.ConnectionPasswordEncryptionProperty(\n        kms_key_id=\"kmsKeyId\",\n        return_connection_password_encrypted=False\n    ),\n    encryption_at_rest=glue.CfnDataCatalogEncryptionSettings.EncryptionAtRestProperty(\n        catalog_encryption_mode=\"catalogEncryptionMode\",\n        sse_aws_kms_key_id=\"sseAwsKmsKeyId\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nDataCatalogEncryptionSettingsProperty dataCatalogEncryptionSettingsProperty = new DataCatalogEncryptionSettingsProperty {\n    ConnectionPasswordEncryption = new ConnectionPasswordEncryptionProperty {\n        KmsKeyId = \"kmsKeyId\",\n        ReturnConnectionPasswordEncrypted = false\n    },\n    EncryptionAtRest = new EncryptionAtRestProperty {\n        CatalogEncryptionMode = \"catalogEncryptionMode\",\n        SseAwsKmsKeyId = \"sseAwsKmsKeyId\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nDataCatalogEncryptionSettingsProperty dataCatalogEncryptionSettingsProperty = DataCatalogEncryptionSettingsProperty.builder()\n        .connectionPasswordEncryption(ConnectionPasswordEncryptionProperty.builder()\n                .kmsKeyId(\"kmsKeyId\")\n                .returnConnectionPasswordEncrypted(false)\n                .build())\n        .encryptionAtRest(EncryptionAtRestProperty.builder()\n                .catalogEncryptionMode(\"catalogEncryptionMode\")\n                .sseAwsKmsKeyId(\"sseAwsKmsKeyId\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ndataCatalogEncryptionSettingsProperty := &dataCatalogEncryptionSettingsProperty{\n\tconnectionPasswordEncryption: &connectionPasswordEncryptionProperty{\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t\treturnConnectionPasswordEncrypted: jsii.Boolean(false),\n\t},\n\tencryptionAtRest: &encryptionAtRestProperty{\n\t\tcatalogEncryptionMode: jsii.String(\"catalogEncryptionMode\"),\n\t\tsseAwsKmsKeyId: jsii.String(\"sseAwsKmsKeyId\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst dataCatalogEncryptionSettingsProperty: glue.CfnDataCatalogEncryptionSettings.DataCatalogEncryptionSettingsProperty = {\n  connectionPasswordEncryption: {\n    kmsKeyId: 'kmsKeyId',\n    returnConnectionPasswordEncrypted: false,\n  },\n  encryptionAtRest: {\n    catalogEncryptionMode: 'catalogEncryptionMode',\n    sseAwsKmsKeyId: 'sseAwsKmsKeyId',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnDataCatalogEncryptionSettings.DataCatalogEncryptionSettingsProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnDataCatalogEncryptionSettings.DataCatalogEncryptionSettingsProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dataCatalogEncryptionSettingsProperty: glue.CfnDataCatalogEncryptionSettings.DataCatalogEncryptionSettingsProperty = {\n  connectionPasswordEncryption: {\n    kmsKeyId: 'kmsKeyId',\n    returnConnectionPasswordEncrypted: false,\n  },\n  encryptionAtRest: {\n    catalogEncryptionMode: 'catalogEncryptionMode',\n    sseAwsKmsKeyId: 'sseAwsKmsKeyId',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 11,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 3,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "3e5ee135207a97faaf5665f1028cfa46fe924523cc2a3c642133a5c2e899ba0b"
    },
    "140ac793fbb05ef8ffcf301bc67280ca180a407676dd68ac39e019a155999462": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nencryption_at_rest_property = glue.CfnDataCatalogEncryptionSettings.EncryptionAtRestProperty(\n    catalog_encryption_mode=\"catalogEncryptionMode\",\n    sse_aws_kms_key_id=\"sseAwsKmsKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nEncryptionAtRestProperty encryptionAtRestProperty = new EncryptionAtRestProperty {\n    CatalogEncryptionMode = \"catalogEncryptionMode\",\n    SseAwsKmsKeyId = \"sseAwsKmsKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nEncryptionAtRestProperty encryptionAtRestProperty = EncryptionAtRestProperty.builder()\n        .catalogEncryptionMode(\"catalogEncryptionMode\")\n        .sseAwsKmsKeyId(\"sseAwsKmsKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nencryptionAtRestProperty := &encryptionAtRestProperty{\n\tcatalogEncryptionMode: jsii.String(\"catalogEncryptionMode\"),\n\tsseAwsKmsKeyId: jsii.String(\"sseAwsKmsKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst encryptionAtRestProperty: glue.CfnDataCatalogEncryptionSettings.EncryptionAtRestProperty = {\n  catalogEncryptionMode: 'catalogEncryptionMode',\n  sseAwsKmsKeyId: 'sseAwsKmsKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnDataCatalogEncryptionSettings.EncryptionAtRestProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnDataCatalogEncryptionSettings.EncryptionAtRestProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst encryptionAtRestProperty: glue.CfnDataCatalogEncryptionSettings.EncryptionAtRestProperty = {\n  catalogEncryptionMode: 'catalogEncryptionMode',\n  sseAwsKmsKeyId: 'sseAwsKmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "388c2b9225bddaef0f7bda9480d3949c7cd389c19495770a61624e39b3abc7fc"
    },
    "98024177b1f35b6db44237232584e5651a9a87e45bdc1c9f4e0968aaf8438af7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncfn_data_catalog_encryption_settings_props = glue.CfnDataCatalogEncryptionSettingsProps(\n    catalog_id=\"catalogId\",\n    data_catalog_encryption_settings=glue.CfnDataCatalogEncryptionSettings.DataCatalogEncryptionSettingsProperty(\n        connection_password_encryption=glue.CfnDataCatalogEncryptionSettings.ConnectionPasswordEncryptionProperty(\n            kms_key_id=\"kmsKeyId\",\n            return_connection_password_encrypted=False\n        ),\n        encryption_at_rest=glue.CfnDataCatalogEncryptionSettings.EncryptionAtRestProperty(\n            catalog_encryption_mode=\"catalogEncryptionMode\",\n            sse_aws_kms_key_id=\"sseAwsKmsKeyId\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCfnDataCatalogEncryptionSettingsProps cfnDataCatalogEncryptionSettingsProps = new CfnDataCatalogEncryptionSettingsProps {\n    CatalogId = \"catalogId\",\n    DataCatalogEncryptionSettings = new DataCatalogEncryptionSettingsProperty {\n        ConnectionPasswordEncryption = new ConnectionPasswordEncryptionProperty {\n            KmsKeyId = \"kmsKeyId\",\n            ReturnConnectionPasswordEncrypted = false\n        },\n        EncryptionAtRest = new EncryptionAtRestProperty {\n            CatalogEncryptionMode = \"catalogEncryptionMode\",\n            SseAwsKmsKeyId = \"sseAwsKmsKeyId\"\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCfnDataCatalogEncryptionSettingsProps cfnDataCatalogEncryptionSettingsProps = CfnDataCatalogEncryptionSettingsProps.builder()\n        .catalogId(\"catalogId\")\n        .dataCatalogEncryptionSettings(DataCatalogEncryptionSettingsProperty.builder()\n                .connectionPasswordEncryption(ConnectionPasswordEncryptionProperty.builder()\n                        .kmsKeyId(\"kmsKeyId\")\n                        .returnConnectionPasswordEncrypted(false)\n                        .build())\n                .encryptionAtRest(EncryptionAtRestProperty.builder()\n                        .catalogEncryptionMode(\"catalogEncryptionMode\")\n                        .sseAwsKmsKeyId(\"sseAwsKmsKeyId\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncfnDataCatalogEncryptionSettingsProps := &cfnDataCatalogEncryptionSettingsProps{\n\tcatalogId: jsii.String(\"catalogId\"),\n\tdataCatalogEncryptionSettings: &dataCatalogEncryptionSettingsProperty{\n\t\tconnectionPasswordEncryption: &connectionPasswordEncryptionProperty{\n\t\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t\t\treturnConnectionPasswordEncrypted: jsii.Boolean(false),\n\t\t},\n\t\tencryptionAtRest: &encryptionAtRestProperty{\n\t\t\tcatalogEncryptionMode: jsii.String(\"catalogEncryptionMode\"),\n\t\t\tsseAwsKmsKeyId: jsii.String(\"sseAwsKmsKeyId\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst cfnDataCatalogEncryptionSettingsProps: glue.CfnDataCatalogEncryptionSettingsProps = {\n  catalogId: 'catalogId',\n  dataCatalogEncryptionSettings: {\n    connectionPasswordEncryption: {\n      kmsKeyId: 'kmsKeyId',\n      returnConnectionPasswordEncrypted: false,\n    },\n    encryptionAtRest: {\n      catalogEncryptionMode: 'catalogEncryptionMode',\n      sseAwsKmsKeyId: 'sseAwsKmsKeyId',\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnDataCatalogEncryptionSettingsProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnDataCatalogEncryptionSettingsProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDataCatalogEncryptionSettingsProps: glue.CfnDataCatalogEncryptionSettingsProps = {\n  catalogId: 'catalogId',\n  dataCatalogEncryptionSettings: {\n    connectionPasswordEncryption: {\n      kmsKeyId: 'kmsKeyId',\n      returnConnectionPasswordEncrypted: false,\n    },\n    encryptionAtRest: {\n      catalogEncryptionMode: 'catalogEncryptionMode',\n      sseAwsKmsKeyId: 'sseAwsKmsKeyId',\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 12,
        "91": 1,
        "153": 1,
        "169": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 8,
        "290": 1
      },
      "fqnsFingerprint": "faf6504b6ef72beeb03609b6263ef3f7b32fe3b839bc800e2971b54d86ccbe23"
    },
    "91dd59f1a5bb14b0342fceef304bb29a136200d6d8d6b877e374e740bdff7083": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# parameters: Any\n\ncfn_database = glue.CfnDatabase(self, \"MyCfnDatabase\",\n    catalog_id=\"catalogId\",\n    database_input=glue.CfnDatabase.DatabaseInputProperty(\n        create_table_default_permissions=[glue.CfnDatabase.PrincipalPrivilegesProperty(\n            permissions=[\"permissions\"],\n            principal=glue.CfnDatabase.DataLakePrincipalProperty(\n                data_lake_principal_identifier=\"dataLakePrincipalIdentifier\"\n            )\n        )],\n        description=\"description\",\n        location_uri=\"locationUri\",\n        name=\"name\",\n        parameters=parameters,\n        target_database=glue.CfnDatabase.DatabaseIdentifierProperty(\n            catalog_id=\"catalogId\",\n            database_name=\"databaseName\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar parameters;\n\nCfnDatabase cfnDatabase = new CfnDatabase(this, \"MyCfnDatabase\", new CfnDatabaseProps {\n    CatalogId = \"catalogId\",\n    DatabaseInput = new DatabaseInputProperty {\n        CreateTableDefaultPermissions = new [] { new PrincipalPrivilegesProperty {\n            Permissions = new [] { \"permissions\" },\n            Principal = new DataLakePrincipalProperty {\n                DataLakePrincipalIdentifier = \"dataLakePrincipalIdentifier\"\n            }\n        } },\n        Description = \"description\",\n        LocationUri = \"locationUri\",\n        Name = \"name\",\n        Parameters = parameters,\n        TargetDatabase = new DatabaseIdentifierProperty {\n            CatalogId = \"catalogId\",\n            DatabaseName = \"databaseName\"\n        }\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject parameters;\n\nCfnDatabase cfnDatabase = CfnDatabase.Builder.create(this, \"MyCfnDatabase\")\n        .catalogId(\"catalogId\")\n        .databaseInput(DatabaseInputProperty.builder()\n                .createTableDefaultPermissions(List.of(PrincipalPrivilegesProperty.builder()\n                        .permissions(List.of(\"permissions\"))\n                        .principal(DataLakePrincipalProperty.builder()\n                                .dataLakePrincipalIdentifier(\"dataLakePrincipalIdentifier\")\n                                .build())\n                        .build()))\n                .description(\"description\")\n                .locationUri(\"locationUri\")\n                .name(\"name\")\n                .parameters(parameters)\n                .targetDatabase(DatabaseIdentifierProperty.builder()\n                        .catalogId(\"catalogId\")\n                        .databaseName(\"databaseName\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar parameters interface{}\ncfnDatabase := glue.NewCfnDatabase(this, jsii.String(\"MyCfnDatabase\"), &cfnDatabaseProps{\n\tcatalogId: jsii.String(\"catalogId\"),\n\tdatabaseInput: &databaseInputProperty{\n\t\tcreateTableDefaultPermissions: []interface{}{\n\t\t\t&principalPrivilegesProperty{\n\t\t\t\tpermissions: []*string{\n\t\t\t\t\tjsii.String(\"permissions\"),\n\t\t\t\t},\n\t\t\t\tprincipal: &dataLakePrincipalProperty{\n\t\t\t\t\tdataLakePrincipalIdentifier: jsii.String(\"dataLakePrincipalIdentifier\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tdescription: jsii.String(\"description\"),\n\t\tlocationUri: jsii.String(\"locationUri\"),\n\t\tname: jsii.String(\"name\"),\n\t\tparameters: parameters,\n\t\ttargetDatabase: &databaseIdentifierProperty{\n\t\t\tcatalogId: jsii.String(\"catalogId\"),\n\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\nconst cfnDatabase = new glue.CfnDatabase(this, 'MyCfnDatabase', {\n  catalogId: 'catalogId',\n  databaseInput: {\n    createTableDefaultPermissions: [{\n      permissions: ['permissions'],\n      principal: {\n        dataLakePrincipalIdentifier: 'dataLakePrincipalIdentifier',\n      },\n    }],\n    description: 'description',\n    locationUri: 'locationUri',\n    name: 'name',\n    parameters: parameters,\n    targetDatabase: {\n      catalogId: 'catalogId',\n      databaseName: 'databaseName',\n    },\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnDatabase"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnDatabase",
        "@aws-cdk/aws-glue.CfnDatabaseProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDatabase = new glue.CfnDatabase(this, 'MyCfnDatabase', {\n  catalogId: 'catalogId',\n  databaseInput: {\n    createTableDefaultPermissions: [{\n      permissions: ['permissions'],\n      principal: {\n        dataLakePrincipalIdentifier: 'dataLakePrincipalIdentifier',\n      },\n    }],\n    description: 'description',\n    locationUri: 'locationUri',\n    name: 'name',\n    parameters: parameters,\n    targetDatabase: {\n      catalogId: 'catalogId',\n      databaseName: 'databaseName',\n    },\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 10,
        "75": 19,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 2,
        "193": 5,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "729edd66bc4172d8b15b4b2c6fa7e844bf91fcbea2c673880d733b2b060d7772"
    },
    "cc2ead2c4561464756bc759a107aa3f54edd503204f7f650f0f144eacb33a8e2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ndata_lake_principal_property = glue.CfnDatabase.DataLakePrincipalProperty(\n    data_lake_principal_identifier=\"dataLakePrincipalIdentifier\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nDataLakePrincipalProperty dataLakePrincipalProperty = new DataLakePrincipalProperty {\n    DataLakePrincipalIdentifier = \"dataLakePrincipalIdentifier\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nDataLakePrincipalProperty dataLakePrincipalProperty = DataLakePrincipalProperty.builder()\n        .dataLakePrincipalIdentifier(\"dataLakePrincipalIdentifier\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ndataLakePrincipalProperty := &dataLakePrincipalProperty{\n\tdataLakePrincipalIdentifier: jsii.String(\"dataLakePrincipalIdentifier\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst dataLakePrincipalProperty: glue.CfnDatabase.DataLakePrincipalProperty = {\n  dataLakePrincipalIdentifier: 'dataLakePrincipalIdentifier',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnDatabase.DataLakePrincipalProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnDatabase.DataLakePrincipalProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dataLakePrincipalProperty: glue.CfnDatabase.DataLakePrincipalProperty = {\n  dataLakePrincipalIdentifier: 'dataLakePrincipalIdentifier',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "78263644fa7e74f4f25bb0ebc5ee84ddc15fd4a518e983e14e0e98bdd4c022bb"
    },
    "6a92c383daac6e017f74968552bfd9a31f8c909c825e034788db7a5b93908e07": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ndatabase_identifier_property = glue.CfnDatabase.DatabaseIdentifierProperty(\n    catalog_id=\"catalogId\",\n    database_name=\"databaseName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nDatabaseIdentifierProperty databaseIdentifierProperty = new DatabaseIdentifierProperty {\n    CatalogId = \"catalogId\",\n    DatabaseName = \"databaseName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nDatabaseIdentifierProperty databaseIdentifierProperty = DatabaseIdentifierProperty.builder()\n        .catalogId(\"catalogId\")\n        .databaseName(\"databaseName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ndatabaseIdentifierProperty := &databaseIdentifierProperty{\n\tcatalogId: jsii.String(\"catalogId\"),\n\tdatabaseName: jsii.String(\"databaseName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst databaseIdentifierProperty: glue.CfnDatabase.DatabaseIdentifierProperty = {\n  catalogId: 'catalogId',\n  databaseName: 'databaseName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnDatabase.DatabaseIdentifierProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnDatabase.DatabaseIdentifierProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst databaseIdentifierProperty: glue.CfnDatabase.DatabaseIdentifierProperty = {\n  catalogId: 'catalogId',\n  databaseName: 'databaseName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "08c1a2227ef6a99310534f7be43ca70bdd619e20b2ef60428583cc3b24deb3b3"
    },
    "05d0a46bd7ebf040d536d22bfc0c1945567ec8cc07e66a2ca5666426f4d6fa65": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# parameters: Any\n\ndatabase_input_property = glue.CfnDatabase.DatabaseInputProperty(\n    create_table_default_permissions=[glue.CfnDatabase.PrincipalPrivilegesProperty(\n        permissions=[\"permissions\"],\n        principal=glue.CfnDatabase.DataLakePrincipalProperty(\n            data_lake_principal_identifier=\"dataLakePrincipalIdentifier\"\n        )\n    )],\n    description=\"description\",\n    location_uri=\"locationUri\",\n    name=\"name\",\n    parameters=parameters,\n    target_database=glue.CfnDatabase.DatabaseIdentifierProperty(\n        catalog_id=\"catalogId\",\n        database_name=\"databaseName\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar parameters;\n\nDatabaseInputProperty databaseInputProperty = new DatabaseInputProperty {\n    CreateTableDefaultPermissions = new [] { new PrincipalPrivilegesProperty {\n        Permissions = new [] { \"permissions\" },\n        Principal = new DataLakePrincipalProperty {\n            DataLakePrincipalIdentifier = \"dataLakePrincipalIdentifier\"\n        }\n    } },\n    Description = \"description\",\n    LocationUri = \"locationUri\",\n    Name = \"name\",\n    Parameters = parameters,\n    TargetDatabase = new DatabaseIdentifierProperty {\n        CatalogId = \"catalogId\",\n        DatabaseName = \"databaseName\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject parameters;\n\nDatabaseInputProperty databaseInputProperty = DatabaseInputProperty.builder()\n        .createTableDefaultPermissions(List.of(PrincipalPrivilegesProperty.builder()\n                .permissions(List.of(\"permissions\"))\n                .principal(DataLakePrincipalProperty.builder()\n                        .dataLakePrincipalIdentifier(\"dataLakePrincipalIdentifier\")\n                        .build())\n                .build()))\n        .description(\"description\")\n        .locationUri(\"locationUri\")\n        .name(\"name\")\n        .parameters(parameters)\n        .targetDatabase(DatabaseIdentifierProperty.builder()\n                .catalogId(\"catalogId\")\n                .databaseName(\"databaseName\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar parameters interface{}\ndatabaseInputProperty := &databaseInputProperty{\n\tcreateTableDefaultPermissions: []interface{}{\n\t\t&principalPrivilegesProperty{\n\t\t\tpermissions: []*string{\n\t\t\t\tjsii.String(\"permissions\"),\n\t\t\t},\n\t\t\tprincipal: &dataLakePrincipalProperty{\n\t\t\t\tdataLakePrincipalIdentifier: jsii.String(\"dataLakePrincipalIdentifier\"),\n\t\t\t},\n\t\t},\n\t},\n\tdescription: jsii.String(\"description\"),\n\tlocationUri: jsii.String(\"locationUri\"),\n\tname: jsii.String(\"name\"),\n\tparameters: parameters,\n\ttargetDatabase: &databaseIdentifierProperty{\n\t\tcatalogId: jsii.String(\"catalogId\"),\n\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\nconst databaseInputProperty: glue.CfnDatabase.DatabaseInputProperty = {\n  createTableDefaultPermissions: [{\n    permissions: ['permissions'],\n    principal: {\n      dataLakePrincipalIdentifier: 'dataLakePrincipalIdentifier',\n    },\n  }],\n  description: 'description',\n  locationUri: 'locationUri',\n  name: 'name',\n  parameters: parameters,\n  targetDatabase: {\n    catalogId: 'catalogId',\n    databaseName: 'databaseName',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnDatabase.DatabaseInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnDatabase.DatabaseInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst databaseInputProperty: glue.CfnDatabase.DatabaseInputProperty = {\n  createTableDefaultPermissions: [{\n    permissions: ['permissions'],\n    principal: {\n      dataLakePrincipalIdentifier: 'dataLakePrincipalIdentifier',\n    },\n  }],\n  description: 'description',\n  locationUri: 'locationUri',\n  name: 'name',\n  parameters: parameters,\n  targetDatabase: {\n    catalogId: 'catalogId',\n    databaseName: 'databaseName',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 18,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 4,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "8a1b07fb520de9d2204a7b4a1cd593d7b671bc99dfc42d1dd6dc4a99f1a2ab80"
    },
    "1507f7de7840ab6c6490e28ec3ad96069e84552c88fdaed723e9844356e22012": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nprincipal_privileges_property = glue.CfnDatabase.PrincipalPrivilegesProperty(\n    permissions=[\"permissions\"],\n    principal=glue.CfnDatabase.DataLakePrincipalProperty(\n        data_lake_principal_identifier=\"dataLakePrincipalIdentifier\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nPrincipalPrivilegesProperty principalPrivilegesProperty = new PrincipalPrivilegesProperty {\n    Permissions = new [] { \"permissions\" },\n    Principal = new DataLakePrincipalProperty {\n        DataLakePrincipalIdentifier = \"dataLakePrincipalIdentifier\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nPrincipalPrivilegesProperty principalPrivilegesProperty = PrincipalPrivilegesProperty.builder()\n        .permissions(List.of(\"permissions\"))\n        .principal(DataLakePrincipalProperty.builder()\n                .dataLakePrincipalIdentifier(\"dataLakePrincipalIdentifier\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nprincipalPrivilegesProperty := &principalPrivilegesProperty{\n\tpermissions: []*string{\n\t\tjsii.String(\"permissions\"),\n\t},\n\tprincipal: &dataLakePrincipalProperty{\n\t\tdataLakePrincipalIdentifier: jsii.String(\"dataLakePrincipalIdentifier\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst principalPrivilegesProperty: glue.CfnDatabase.PrincipalPrivilegesProperty = {\n  permissions: ['permissions'],\n  principal: {\n    dataLakePrincipalIdentifier: 'dataLakePrincipalIdentifier',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnDatabase.PrincipalPrivilegesProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnDatabase.PrincipalPrivilegesProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst principalPrivilegesProperty: glue.CfnDatabase.PrincipalPrivilegesProperty = {\n  permissions: ['permissions'],\n  principal: {\n    dataLakePrincipalIdentifier: 'dataLakePrincipalIdentifier',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 8,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "568b483ccd4e1dad5a37002e56438bc9ca5a86d391f05708d3b5ef8d4bb11c33"
    },
    "773d7a79da9e4b4360413282773f7126dd769a974db33d28abf1f906ccee5acb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# parameters: Any\n\ncfn_database_props = glue.CfnDatabaseProps(\n    catalog_id=\"catalogId\",\n    database_input=glue.CfnDatabase.DatabaseInputProperty(\n        create_table_default_permissions=[glue.CfnDatabase.PrincipalPrivilegesProperty(\n            permissions=[\"permissions\"],\n            principal=glue.CfnDatabase.DataLakePrincipalProperty(\n                data_lake_principal_identifier=\"dataLakePrincipalIdentifier\"\n            )\n        )],\n        description=\"description\",\n        location_uri=\"locationUri\",\n        name=\"name\",\n        parameters=parameters,\n        target_database=glue.CfnDatabase.DatabaseIdentifierProperty(\n            catalog_id=\"catalogId\",\n            database_name=\"databaseName\"\n        )\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar parameters;\n\nCfnDatabaseProps cfnDatabaseProps = new CfnDatabaseProps {\n    CatalogId = \"catalogId\",\n    DatabaseInput = new DatabaseInputProperty {\n        CreateTableDefaultPermissions = new [] { new PrincipalPrivilegesProperty {\n            Permissions = new [] { \"permissions\" },\n            Principal = new DataLakePrincipalProperty {\n                DataLakePrincipalIdentifier = \"dataLakePrincipalIdentifier\"\n            }\n        } },\n        Description = \"description\",\n        LocationUri = \"locationUri\",\n        Name = \"name\",\n        Parameters = parameters,\n        TargetDatabase = new DatabaseIdentifierProperty {\n            CatalogId = \"catalogId\",\n            DatabaseName = \"databaseName\"\n        }\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject parameters;\n\nCfnDatabaseProps cfnDatabaseProps = CfnDatabaseProps.builder()\n        .catalogId(\"catalogId\")\n        .databaseInput(DatabaseInputProperty.builder()\n                .createTableDefaultPermissions(List.of(PrincipalPrivilegesProperty.builder()\n                        .permissions(List.of(\"permissions\"))\n                        .principal(DataLakePrincipalProperty.builder()\n                                .dataLakePrincipalIdentifier(\"dataLakePrincipalIdentifier\")\n                                .build())\n                        .build()))\n                .description(\"description\")\n                .locationUri(\"locationUri\")\n                .name(\"name\")\n                .parameters(parameters)\n                .targetDatabase(DatabaseIdentifierProperty.builder()\n                        .catalogId(\"catalogId\")\n                        .databaseName(\"databaseName\")\n                        .build())\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar parameters interface{}\ncfnDatabaseProps := &cfnDatabaseProps{\n\tcatalogId: jsii.String(\"catalogId\"),\n\tdatabaseInput: &databaseInputProperty{\n\t\tcreateTableDefaultPermissions: []interface{}{\n\t\t\t&principalPrivilegesProperty{\n\t\t\t\tpermissions: []*string{\n\t\t\t\t\tjsii.String(\"permissions\"),\n\t\t\t\t},\n\t\t\t\tprincipal: &dataLakePrincipalProperty{\n\t\t\t\t\tdataLakePrincipalIdentifier: jsii.String(\"dataLakePrincipalIdentifier\"),\n\t\t\t\t},\n\t\t\t},\n\t\t},\n\t\tdescription: jsii.String(\"description\"),\n\t\tlocationUri: jsii.String(\"locationUri\"),\n\t\tname: jsii.String(\"name\"),\n\t\tparameters: parameters,\n\t\ttargetDatabase: &databaseIdentifierProperty{\n\t\t\tcatalogId: jsii.String(\"catalogId\"),\n\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\nconst cfnDatabaseProps: glue.CfnDatabaseProps = {\n  catalogId: 'catalogId',\n  databaseInput: {\n    createTableDefaultPermissions: [{\n      permissions: ['permissions'],\n      principal: {\n        dataLakePrincipalIdentifier: 'dataLakePrincipalIdentifier',\n      },\n    }],\n    description: 'description',\n    locationUri: 'locationUri',\n    name: 'name',\n    parameters: parameters,\n    targetDatabase: {\n      catalogId: 'catalogId',\n      databaseName: 'databaseName',\n    },\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnDatabaseProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnDatabaseProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDatabaseProps: glue.CfnDatabaseProps = {\n  catalogId: 'catalogId',\n  databaseInput: {\n    createTableDefaultPermissions: [{\n      permissions: ['permissions'],\n      principal: {\n        dataLakePrincipalIdentifier: 'dataLakePrincipalIdentifier',\n      },\n    }],\n    description: 'description',\n    locationUri: 'locationUri',\n    name: 'name',\n    parameters: parameters,\n    targetDatabase: {\n      catalogId: 'catalogId',\n      databaseName: 'databaseName',\n    },\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 19,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 5,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 13,
        "290": 1
      },
      "fqnsFingerprint": "c65df8147499726f1c73f9ebe80450ffcfdd6cbe7ec09ffb11aa820a229ae0e2"
    },
    "cfb2ccfd12344d8a0d59d383cc9deb019b482979187bf7ba682bb34e99ea9ad3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# arguments_: Any\n# tags: Any\n\ncfn_dev_endpoint = glue.CfnDevEndpoint(self, \"MyCfnDevEndpoint\",\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    arguments=arguments_,\n    endpoint_name=\"endpointName\",\n    extra_jars_s3_path=\"extraJarsS3Path\",\n    extra_python_libs_s3_path=\"extraPythonLibsS3Path\",\n    glue_version=\"glueVersion\",\n    number_of_nodes=123,\n    number_of_workers=123,\n    public_key=\"publicKey\",\n    public_keys=[\"publicKeys\"],\n    security_configuration=\"securityConfiguration\",\n    security_group_ids=[\"securityGroupIds\"],\n    subnet_id=\"subnetId\",\n    tags=tags,\n    worker_type=\"workerType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar arguments_;\nvar tags;\n\nCfnDevEndpoint cfnDevEndpoint = new CfnDevEndpoint(this, \"MyCfnDevEndpoint\", new CfnDevEndpointProps {\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    Arguments = arguments_,\n    EndpointName = \"endpointName\",\n    ExtraJarsS3Path = \"extraJarsS3Path\",\n    ExtraPythonLibsS3Path = \"extraPythonLibsS3Path\",\n    GlueVersion = \"glueVersion\",\n    NumberOfNodes = 123,\n    NumberOfWorkers = 123,\n    PublicKey = \"publicKey\",\n    PublicKeys = new [] { \"publicKeys\" },\n    SecurityConfiguration = \"securityConfiguration\",\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n    SubnetId = \"subnetId\",\n    Tags = tags,\n    WorkerType = \"workerType\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject arguments_;\nObject tags;\n\nCfnDevEndpoint cfnDevEndpoint = CfnDevEndpoint.Builder.create(this, \"MyCfnDevEndpoint\")\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .arguments(arguments_)\n        .endpointName(\"endpointName\")\n        .extraJarsS3Path(\"extraJarsS3Path\")\n        .extraPythonLibsS3Path(\"extraPythonLibsS3Path\")\n        .glueVersion(\"glueVersion\")\n        .numberOfNodes(123)\n        .numberOfWorkers(123)\n        .publicKey(\"publicKey\")\n        .publicKeys(List.of(\"publicKeys\"))\n        .securityConfiguration(\"securityConfiguration\")\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .subnetId(\"subnetId\")\n        .tags(tags)\n        .workerType(\"workerType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar arguments_ interface{}\nvar tags interface{}\ncfnDevEndpoint := glue.NewCfnDevEndpoint(this, jsii.String(\"MyCfnDevEndpoint\"), &cfnDevEndpointProps{\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\targuments: arguments_,\n\tendpointName: jsii.String(\"endpointName\"),\n\textraJarsS3Path: jsii.String(\"extraJarsS3Path\"),\n\textraPythonLibsS3Path: jsii.String(\"extraPythonLibsS3Path\"),\n\tglueVersion: jsii.String(\"glueVersion\"),\n\tnumberOfNodes: jsii.Number(123),\n\tnumberOfWorkers: jsii.Number(123),\n\tpublicKey: jsii.String(\"publicKey\"),\n\tpublicKeys: []*string{\n\t\tjsii.String(\"publicKeys\"),\n\t},\n\tsecurityConfiguration: jsii.String(\"securityConfiguration\"),\n\tsecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\tsubnetId: jsii.String(\"subnetId\"),\n\ttags: tags,\n\tworkerType: jsii.String(\"workerType\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const arguments_: any;\ndeclare const tags: any;\nconst cfnDevEndpoint = new glue.CfnDevEndpoint(this, 'MyCfnDevEndpoint', {\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  arguments: arguments_,\n  endpointName: 'endpointName',\n  extraJarsS3Path: 'extraJarsS3Path',\n  extraPythonLibsS3Path: 'extraPythonLibsS3Path',\n  glueVersion: 'glueVersion',\n  numberOfNodes: 123,\n  numberOfWorkers: 123,\n  publicKey: 'publicKey',\n  publicKeys: ['publicKeys'],\n  securityConfiguration: 'securityConfiguration',\n  securityGroupIds: ['securityGroupIds'],\n  subnetId: 'subnetId',\n  tags: tags,\n  workerType: 'workerType',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnDevEndpoint"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnDevEndpoint",
        "@aws-cdk/aws-glue.CfnDevEndpointProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const arguments_: any;\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDevEndpoint = new glue.CfnDevEndpoint(this, 'MyCfnDevEndpoint', {\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  arguments: arguments_,\n  endpointName: 'endpointName',\n  extraJarsS3Path: 'extraJarsS3Path',\n  extraPythonLibsS3Path: 'extraPythonLibsS3Path',\n  glueVersion: 'glueVersion',\n  numberOfNodes: 123,\n  numberOfWorkers: 123,\n  publicKey: 'publicKey',\n  publicKeys: ['publicKeys'],\n  securityConfiguration: 'securityConfiguration',\n  securityGroupIds: ['securityGroupIds'],\n  subnetId: 'subnetId',\n  tags: tags,\n  workerType: 'workerType',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 13,
        "75": 23,
        "104": 1,
        "125": 2,
        "130": 2,
        "192": 2,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 15,
        "290": 1
      },
      "fqnsFingerprint": "ecb740d363d4dee3d802fe9f4b939e56a939de7e4d17ada53e81b20c78547df8"
    },
    "6e6b1814d8f4573cee270317610bfc209e840417499ac31442aad6a113a0bfdb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# arguments_: Any\n# tags: Any\n\ncfn_dev_endpoint_props = glue.CfnDevEndpointProps(\n    role_arn=\"roleArn\",\n\n    # the properties below are optional\n    arguments=arguments_,\n    endpoint_name=\"endpointName\",\n    extra_jars_s3_path=\"extraJarsS3Path\",\n    extra_python_libs_s3_path=\"extraPythonLibsS3Path\",\n    glue_version=\"glueVersion\",\n    number_of_nodes=123,\n    number_of_workers=123,\n    public_key=\"publicKey\",\n    public_keys=[\"publicKeys\"],\n    security_configuration=\"securityConfiguration\",\n    security_group_ids=[\"securityGroupIds\"],\n    subnet_id=\"subnetId\",\n    tags=tags,\n    worker_type=\"workerType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar arguments_;\nvar tags;\n\nCfnDevEndpointProps cfnDevEndpointProps = new CfnDevEndpointProps {\n    RoleArn = \"roleArn\",\n\n    // the properties below are optional\n    Arguments = arguments_,\n    EndpointName = \"endpointName\",\n    ExtraJarsS3Path = \"extraJarsS3Path\",\n    ExtraPythonLibsS3Path = \"extraPythonLibsS3Path\",\n    GlueVersion = \"glueVersion\",\n    NumberOfNodes = 123,\n    NumberOfWorkers = 123,\n    PublicKey = \"publicKey\",\n    PublicKeys = new [] { \"publicKeys\" },\n    SecurityConfiguration = \"securityConfiguration\",\n    SecurityGroupIds = new [] { \"securityGroupIds\" },\n    SubnetId = \"subnetId\",\n    Tags = tags,\n    WorkerType = \"workerType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject arguments_;\nObject tags;\n\nCfnDevEndpointProps cfnDevEndpointProps = CfnDevEndpointProps.builder()\n        .roleArn(\"roleArn\")\n\n        // the properties below are optional\n        .arguments(arguments_)\n        .endpointName(\"endpointName\")\n        .extraJarsS3Path(\"extraJarsS3Path\")\n        .extraPythonLibsS3Path(\"extraPythonLibsS3Path\")\n        .glueVersion(\"glueVersion\")\n        .numberOfNodes(123)\n        .numberOfWorkers(123)\n        .publicKey(\"publicKey\")\n        .publicKeys(List.of(\"publicKeys\"))\n        .securityConfiguration(\"securityConfiguration\")\n        .securityGroupIds(List.of(\"securityGroupIds\"))\n        .subnetId(\"subnetId\")\n        .tags(tags)\n        .workerType(\"workerType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar arguments_ interface{}\nvar tags interface{}\ncfnDevEndpointProps := &cfnDevEndpointProps{\n\troleArn: jsii.String(\"roleArn\"),\n\n\t// the properties below are optional\n\targuments: arguments_,\n\tendpointName: jsii.String(\"endpointName\"),\n\textraJarsS3Path: jsii.String(\"extraJarsS3Path\"),\n\textraPythonLibsS3Path: jsii.String(\"extraPythonLibsS3Path\"),\n\tglueVersion: jsii.String(\"glueVersion\"),\n\tnumberOfNodes: jsii.Number(123),\n\tnumberOfWorkers: jsii.Number(123),\n\tpublicKey: jsii.String(\"publicKey\"),\n\tpublicKeys: []*string{\n\t\tjsii.String(\"publicKeys\"),\n\t},\n\tsecurityConfiguration: jsii.String(\"securityConfiguration\"),\n\tsecurityGroupIds: []*string{\n\t\tjsii.String(\"securityGroupIds\"),\n\t},\n\tsubnetId: jsii.String(\"subnetId\"),\n\ttags: tags,\n\tworkerType: jsii.String(\"workerType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const arguments_: any;\ndeclare const tags: any;\nconst cfnDevEndpointProps: glue.CfnDevEndpointProps = {\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  arguments: arguments_,\n  endpointName: 'endpointName',\n  extraJarsS3Path: 'extraJarsS3Path',\n  extraPythonLibsS3Path: 'extraPythonLibsS3Path',\n  glueVersion: 'glueVersion',\n  numberOfNodes: 123,\n  numberOfWorkers: 123,\n  publicKey: 'publicKey',\n  publicKeys: ['publicKeys'],\n  securityConfiguration: 'securityConfiguration',\n  securityGroupIds: ['securityGroupIds'],\n  subnetId: 'subnetId',\n  tags: tags,\n  workerType: 'workerType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnDevEndpointProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnDevEndpointProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const arguments_: any;\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnDevEndpointProps: glue.CfnDevEndpointProps = {\n  roleArn: 'roleArn',\n\n  // the properties below are optional\n  arguments: arguments_,\n  endpointName: 'endpointName',\n  extraJarsS3Path: 'extraJarsS3Path',\n  extraPythonLibsS3Path: 'extraPythonLibsS3Path',\n  glueVersion: 'glueVersion',\n  numberOfNodes: 123,\n  numberOfWorkers: 123,\n  publicKey: 'publicKey',\n  publicKeys: ['publicKeys'],\n  securityConfiguration: 'securityConfiguration',\n  securityGroupIds: ['securityGroupIds'],\n  subnetId: 'subnetId',\n  tags: tags,\n  workerType: 'workerType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 12,
        "75": 23,
        "125": 2,
        "130": 2,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 15,
        "290": 1
      },
      "fqnsFingerprint": "19fc9209087c7fcc884ab1b47cf6bacd04b014d56a00556e5e4f8bd7827cc870"
    },
    "5c247e6a29e4faa92bec01de77b85b2289033401f7b640e0ee0c15544c4b447c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# default_arguments: Any\n# tags: Any\n\ncfn_job = glue.CfnJob(self, \"MyCfnJob\",\n    command=glue.CfnJob.JobCommandProperty(\n        name=\"name\",\n        python_version=\"pythonVersion\",\n        script_location=\"scriptLocation\"\n    ),\n    role=\"role\",\n\n    # the properties below are optional\n    allocated_capacity=123,\n    connections=glue.CfnJob.ConnectionsListProperty(\n        connections=[\"connections\"]\n    ),\n    default_arguments=default_arguments,\n    description=\"description\",\n    execution_property=glue.CfnJob.ExecutionPropertyProperty(\n        max_concurrent_runs=123\n    ),\n    glue_version=\"glueVersion\",\n    log_uri=\"logUri\",\n    max_capacity=123,\n    max_retries=123,\n    name=\"name\",\n    notification_property=glue.CfnJob.NotificationPropertyProperty(\n        notify_delay_after=123\n    ),\n    number_of_workers=123,\n    security_configuration=\"securityConfiguration\",\n    tags=tags,\n    timeout=123,\n    worker_type=\"workerType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar defaultArguments;\nvar tags;\n\nCfnJob cfnJob = new CfnJob(this, \"MyCfnJob\", new CfnJobProps {\n    Command = new JobCommandProperty {\n        Name = \"name\",\n        PythonVersion = \"pythonVersion\",\n        ScriptLocation = \"scriptLocation\"\n    },\n    Role = \"role\",\n\n    // the properties below are optional\n    AllocatedCapacity = 123,\n    Connections = new ConnectionsListProperty {\n        Connections = new [] { \"connections\" }\n    },\n    DefaultArguments = defaultArguments,\n    Description = \"description\",\n    ExecutionProperty = new ExecutionPropertyProperty {\n        MaxConcurrentRuns = 123\n    },\n    GlueVersion = \"glueVersion\",\n    LogUri = \"logUri\",\n    MaxCapacity = 123,\n    MaxRetries = 123,\n    Name = \"name\",\n    NotificationProperty = new NotificationPropertyProperty {\n        NotifyDelayAfter = 123\n    },\n    NumberOfWorkers = 123,\n    SecurityConfiguration = \"securityConfiguration\",\n    Tags = tags,\n    Timeout = 123,\n    WorkerType = \"workerType\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject defaultArguments;\nObject tags;\n\nCfnJob cfnJob = CfnJob.Builder.create(this, \"MyCfnJob\")\n        .command(JobCommandProperty.builder()\n                .name(\"name\")\n                .pythonVersion(\"pythonVersion\")\n                .scriptLocation(\"scriptLocation\")\n                .build())\n        .role(\"role\")\n\n        // the properties below are optional\n        .allocatedCapacity(123)\n        .connections(ConnectionsListProperty.builder()\n                .connections(List.of(\"connections\"))\n                .build())\n        .defaultArguments(defaultArguments)\n        .description(\"description\")\n        .executionProperty(ExecutionPropertyProperty.builder()\n                .maxConcurrentRuns(123)\n                .build())\n        .glueVersion(\"glueVersion\")\n        .logUri(\"logUri\")\n        .maxCapacity(123)\n        .maxRetries(123)\n        .name(\"name\")\n        .notificationProperty(NotificationPropertyProperty.builder()\n                .notifyDelayAfter(123)\n                .build())\n        .numberOfWorkers(123)\n        .securityConfiguration(\"securityConfiguration\")\n        .tags(tags)\n        .timeout(123)\n        .workerType(\"workerType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar defaultArguments interface{}\nvar tags interface{}\ncfnJob := glue.NewCfnJob(this, jsii.String(\"MyCfnJob\"), &cfnJobProps{\n\tcommand: &jobCommandProperty{\n\t\tname: jsii.String(\"name\"),\n\t\tpythonVersion: jsii.String(\"pythonVersion\"),\n\t\tscriptLocation: jsii.String(\"scriptLocation\"),\n\t},\n\trole: jsii.String(\"role\"),\n\n\t// the properties below are optional\n\tallocatedCapacity: jsii.Number(123),\n\tconnections: &connectionsListProperty{\n\t\tconnections: []*string{\n\t\t\tjsii.String(\"connections\"),\n\t\t},\n\t},\n\tdefaultArguments: defaultArguments,\n\tdescription: jsii.String(\"description\"),\n\texecutionProperty: &executionPropertyProperty{\n\t\tmaxConcurrentRuns: jsii.Number(123),\n\t},\n\tglueVersion: jsii.String(\"glueVersion\"),\n\tlogUri: jsii.String(\"logUri\"),\n\tmaxCapacity: jsii.Number(123),\n\tmaxRetries: jsii.Number(123),\n\tname: jsii.String(\"name\"),\n\tnotificationProperty: &notificationPropertyProperty{\n\t\tnotifyDelayAfter: jsii.Number(123),\n\t},\n\tnumberOfWorkers: jsii.Number(123),\n\tsecurityConfiguration: jsii.String(\"securityConfiguration\"),\n\ttags: tags,\n\ttimeout: jsii.Number(123),\n\tworkerType: jsii.String(\"workerType\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const defaultArguments: any;\ndeclare const tags: any;\nconst cfnJob = new glue.CfnJob(this, 'MyCfnJob', {\n  command: {\n    name: 'name',\n    pythonVersion: 'pythonVersion',\n    scriptLocation: 'scriptLocation',\n  },\n  role: 'role',\n\n  // the properties below are optional\n  allocatedCapacity: 123,\n  connections: {\n    connections: ['connections'],\n  },\n  defaultArguments: defaultArguments,\n  description: 'description',\n  executionProperty: {\n    maxConcurrentRuns: 123,\n  },\n  glueVersion: 'glueVersion',\n  logUri: 'logUri',\n  maxCapacity: 123,\n  maxRetries: 123,\n  name: 'name',\n  notificationProperty: {\n    notifyDelayAfter: 123,\n  },\n  numberOfWorkers: 123,\n  securityConfiguration: 'securityConfiguration',\n  tags: tags,\n  timeout: 123,\n  workerType: 'workerType',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnJob"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnJob",
        "@aws-cdk/aws-glue.CfnJobProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const defaultArguments: any;\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnJob = new glue.CfnJob(this, 'MyCfnJob', {\n  command: {\n    name: 'name',\n    pythonVersion: 'pythonVersion',\n    scriptLocation: 'scriptLocation',\n  },\n  role: 'role',\n\n  // the properties below are optional\n  allocatedCapacity: 123,\n  connections: {\n    connections: ['connections'],\n  },\n  defaultArguments: defaultArguments,\n  description: 'description',\n  executionProperty: {\n    maxConcurrentRuns: 123,\n  },\n  glueVersion: 'glueVersion',\n  logUri: 'logUri',\n  maxCapacity: 123,\n  maxRetries: 123,\n  name: 'name',\n  notificationProperty: {\n    notifyDelayAfter: 123,\n  },\n  numberOfWorkers: 123,\n  securityConfiguration: 'securityConfiguration',\n  tags: tags,\n  timeout: 123,\n  workerType: 'workerType',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 7,
        "10": 13,
        "75": 32,
        "104": 1,
        "125": 2,
        "130": 2,
        "192": 1,
        "193": 5,
        "194": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 24,
        "290": 1
      },
      "fqnsFingerprint": "b12941354a87814d0bdd88349e64276e56b9374f3246067c423a521012939e28"
    },
    "ba0a596c164909bb40881e1b3cc8e76b9166290f84f253e97941462fa103f7bb": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nconnections_list_property = glue.CfnJob.ConnectionsListProperty(\n    connections=[\"connections\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nConnectionsListProperty connectionsListProperty = new ConnectionsListProperty {\n    Connections = new [] { \"connections\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nConnectionsListProperty connectionsListProperty = ConnectionsListProperty.builder()\n        .connections(List.of(\"connections\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nconnectionsListProperty := &connectionsListProperty{\n\tconnections: []*string{\n\t\tjsii.String(\"connections\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst connectionsListProperty: glue.CfnJob.ConnectionsListProperty = {\n  connections: ['connections'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnJob.ConnectionsListProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnJob.ConnectionsListProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst connectionsListProperty: glue.CfnJob.ConnectionsListProperty = {\n  connections: ['connections'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 6,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "0414d6ea3ee77ba61c5f0753baeb00e9ae0b758d4a8910ae60f3cf479c4f6aaf"
    },
    "e4f2de705f253ae5b57556f16e00fafef30c6e8060be05541419719061700186": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nexecution_property_property = glue.CfnJob.ExecutionPropertyProperty(\n    max_concurrent_runs=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nExecutionPropertyProperty executionPropertyProperty = new ExecutionPropertyProperty {\n    MaxConcurrentRuns = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nExecutionPropertyProperty executionPropertyProperty = ExecutionPropertyProperty.builder()\n        .maxConcurrentRuns(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nexecutionPropertyProperty := &executionPropertyProperty{\n\tmaxConcurrentRuns: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst executionPropertyProperty: glue.CfnJob.ExecutionPropertyProperty = {\n  maxConcurrentRuns: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnJob.ExecutionPropertyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnJob.ExecutionPropertyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst executionPropertyProperty: glue.CfnJob.ExecutionPropertyProperty = {\n  maxConcurrentRuns: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "55a30130f1d09067e93903a638d99b3b8af35239186e8df715d07b079d546ed5"
    },
    "234bffc13484c2c8782cd3f7a1d73e32d9a2ce6bf0fd5da8dbab9f7e73ba0e1c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\njob_command_property = glue.CfnJob.JobCommandProperty(\n    name=\"name\",\n    python_version=\"pythonVersion\",\n    script_location=\"scriptLocation\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nJobCommandProperty jobCommandProperty = new JobCommandProperty {\n    Name = \"name\",\n    PythonVersion = \"pythonVersion\",\n    ScriptLocation = \"scriptLocation\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nJobCommandProperty jobCommandProperty = JobCommandProperty.builder()\n        .name(\"name\")\n        .pythonVersion(\"pythonVersion\")\n        .scriptLocation(\"scriptLocation\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\njobCommandProperty := &jobCommandProperty{\n\tname: jsii.String(\"name\"),\n\tpythonVersion: jsii.String(\"pythonVersion\"),\n\tscriptLocation: jsii.String(\"scriptLocation\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst jobCommandProperty: glue.CfnJob.JobCommandProperty = {\n  name: 'name',\n  pythonVersion: 'pythonVersion',\n  scriptLocation: 'scriptLocation',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnJob.JobCommandProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnJob.JobCommandProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jobCommandProperty: glue.CfnJob.JobCommandProperty = {\n  name: 'name',\n  pythonVersion: 'pythonVersion',\n  scriptLocation: 'scriptLocation',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "bf54bee2c5e4af03749b605421b9c1921258fd1653235a1dd58488031813cebe"
    },
    "9f1b85abf048f74fa5fa8d0aad811125797d0bb42ded56db15349a7cd31b8376": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nnotification_property_property = glue.CfnJob.NotificationPropertyProperty(\n    notify_delay_after=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nNotificationPropertyProperty notificationPropertyProperty = new NotificationPropertyProperty {\n    NotifyDelayAfter = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nNotificationPropertyProperty notificationPropertyProperty = NotificationPropertyProperty.builder()\n        .notifyDelayAfter(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nnotificationPropertyProperty := &notificationPropertyProperty{\n\tnotifyDelayAfter: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst notificationPropertyProperty: glue.CfnJob.NotificationPropertyProperty = {\n  notifyDelayAfter: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnJob.NotificationPropertyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnJob.NotificationPropertyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst notificationPropertyProperty: glue.CfnJob.NotificationPropertyProperty = {\n  notifyDelayAfter: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "6c48038b87e0004d0efacea7f2b4214da3d528672cffaf273b0e9a9666d31ba4"
    },
    "adff8745ec6a000de5ff25d198503f8b22d7eda73ec0f107412c098e5e7b88fc": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# default_arguments: Any\n# tags: Any\n\ncfn_job_props = glue.CfnJobProps(\n    command=glue.CfnJob.JobCommandProperty(\n        name=\"name\",\n        python_version=\"pythonVersion\",\n        script_location=\"scriptLocation\"\n    ),\n    role=\"role\",\n\n    # the properties below are optional\n    allocated_capacity=123,\n    connections=glue.CfnJob.ConnectionsListProperty(\n        connections=[\"connections\"]\n    ),\n    default_arguments=default_arguments,\n    description=\"description\",\n    execution_property=glue.CfnJob.ExecutionPropertyProperty(\n        max_concurrent_runs=123\n    ),\n    glue_version=\"glueVersion\",\n    log_uri=\"logUri\",\n    max_capacity=123,\n    max_retries=123,\n    name=\"name\",\n    notification_property=glue.CfnJob.NotificationPropertyProperty(\n        notify_delay_after=123\n    ),\n    number_of_workers=123,\n    security_configuration=\"securityConfiguration\",\n    tags=tags,\n    timeout=123,\n    worker_type=\"workerType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar defaultArguments;\nvar tags;\n\nCfnJobProps cfnJobProps = new CfnJobProps {\n    Command = new JobCommandProperty {\n        Name = \"name\",\n        PythonVersion = \"pythonVersion\",\n        ScriptLocation = \"scriptLocation\"\n    },\n    Role = \"role\",\n\n    // the properties below are optional\n    AllocatedCapacity = 123,\n    Connections = new ConnectionsListProperty {\n        Connections = new [] { \"connections\" }\n    },\n    DefaultArguments = defaultArguments,\n    Description = \"description\",\n    ExecutionProperty = new ExecutionPropertyProperty {\n        MaxConcurrentRuns = 123\n    },\n    GlueVersion = \"glueVersion\",\n    LogUri = \"logUri\",\n    MaxCapacity = 123,\n    MaxRetries = 123,\n    Name = \"name\",\n    NotificationProperty = new NotificationPropertyProperty {\n        NotifyDelayAfter = 123\n    },\n    NumberOfWorkers = 123,\n    SecurityConfiguration = \"securityConfiguration\",\n    Tags = tags,\n    Timeout = 123,\n    WorkerType = \"workerType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject defaultArguments;\nObject tags;\n\nCfnJobProps cfnJobProps = CfnJobProps.builder()\n        .command(JobCommandProperty.builder()\n                .name(\"name\")\n                .pythonVersion(\"pythonVersion\")\n                .scriptLocation(\"scriptLocation\")\n                .build())\n        .role(\"role\")\n\n        // the properties below are optional\n        .allocatedCapacity(123)\n        .connections(ConnectionsListProperty.builder()\n                .connections(List.of(\"connections\"))\n                .build())\n        .defaultArguments(defaultArguments)\n        .description(\"description\")\n        .executionProperty(ExecutionPropertyProperty.builder()\n                .maxConcurrentRuns(123)\n                .build())\n        .glueVersion(\"glueVersion\")\n        .logUri(\"logUri\")\n        .maxCapacity(123)\n        .maxRetries(123)\n        .name(\"name\")\n        .notificationProperty(NotificationPropertyProperty.builder()\n                .notifyDelayAfter(123)\n                .build())\n        .numberOfWorkers(123)\n        .securityConfiguration(\"securityConfiguration\")\n        .tags(tags)\n        .timeout(123)\n        .workerType(\"workerType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar defaultArguments interface{}\nvar tags interface{}\ncfnJobProps := &cfnJobProps{\n\tcommand: &jobCommandProperty{\n\t\tname: jsii.String(\"name\"),\n\t\tpythonVersion: jsii.String(\"pythonVersion\"),\n\t\tscriptLocation: jsii.String(\"scriptLocation\"),\n\t},\n\trole: jsii.String(\"role\"),\n\n\t// the properties below are optional\n\tallocatedCapacity: jsii.Number(123),\n\tconnections: &connectionsListProperty{\n\t\tconnections: []*string{\n\t\t\tjsii.String(\"connections\"),\n\t\t},\n\t},\n\tdefaultArguments: defaultArguments,\n\tdescription: jsii.String(\"description\"),\n\texecutionProperty: &executionPropertyProperty{\n\t\tmaxConcurrentRuns: jsii.Number(123),\n\t},\n\tglueVersion: jsii.String(\"glueVersion\"),\n\tlogUri: jsii.String(\"logUri\"),\n\tmaxCapacity: jsii.Number(123),\n\tmaxRetries: jsii.Number(123),\n\tname: jsii.String(\"name\"),\n\tnotificationProperty: &notificationPropertyProperty{\n\t\tnotifyDelayAfter: jsii.Number(123),\n\t},\n\tnumberOfWorkers: jsii.Number(123),\n\tsecurityConfiguration: jsii.String(\"securityConfiguration\"),\n\ttags: tags,\n\ttimeout: jsii.Number(123),\n\tworkerType: jsii.String(\"workerType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const defaultArguments: any;\ndeclare const tags: any;\nconst cfnJobProps: glue.CfnJobProps = {\n  command: {\n    name: 'name',\n    pythonVersion: 'pythonVersion',\n    scriptLocation: 'scriptLocation',\n  },\n  role: 'role',\n\n  // the properties below are optional\n  allocatedCapacity: 123,\n  connections: {\n    connections: ['connections'],\n  },\n  defaultArguments: defaultArguments,\n  description: 'description',\n  executionProperty: {\n    maxConcurrentRuns: 123,\n  },\n  glueVersion: 'glueVersion',\n  logUri: 'logUri',\n  maxCapacity: 123,\n  maxRetries: 123,\n  name: 'name',\n  notificationProperty: {\n    notifyDelayAfter: 123,\n  },\n  numberOfWorkers: 123,\n  securityConfiguration: 'securityConfiguration',\n  tags: tags,\n  timeout: 123,\n  workerType: 'workerType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnJobProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnJobProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const defaultArguments: any;\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnJobProps: glue.CfnJobProps = {\n  command: {\n    name: 'name',\n    pythonVersion: 'pythonVersion',\n    scriptLocation: 'scriptLocation',\n  },\n  role: 'role',\n\n  // the properties below are optional\n  allocatedCapacity: 123,\n  connections: {\n    connections: ['connections'],\n  },\n  defaultArguments: defaultArguments,\n  description: 'description',\n  executionProperty: {\n    maxConcurrentRuns: 123,\n  },\n  glueVersion: 'glueVersion',\n  logUri: 'logUri',\n  maxCapacity: 123,\n  maxRetries: 123,\n  name: 'name',\n  notificationProperty: {\n    notifyDelayAfter: 123,\n  },\n  numberOfWorkers: 123,\n  securityConfiguration: 'securityConfiguration',\n  tags: tags,\n  timeout: 123,\n  workerType: 'workerType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 7,
        "10": 12,
        "75": 32,
        "125": 2,
        "130": 2,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 5,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 24,
        "290": 1
      },
      "fqnsFingerprint": "d01ea4530b2c257cdaba57cc4f493471667de4547441f7631d2cc1e06d5b943d"
    },
    "22dbdea727147c3c7fc8e4f46c5358ce6c68e13092e48bf766537d8aeced9ff0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# tags: Any\n\ncfn_mLTransform = glue.CfnMLTransform(self, \"MyCfnMLTransform\",\n    input_record_tables=glue.CfnMLTransform.InputRecordTablesProperty(\n        glue_tables=[glue.CfnMLTransform.GlueTablesProperty(\n            database_name=\"databaseName\",\n            table_name=\"tableName\",\n\n            # the properties below are optional\n            catalog_id=\"catalogId\",\n            connection_name=\"connectionName\"\n        )]\n    ),\n    role=\"role\",\n    transform_parameters=glue.CfnMLTransform.TransformParametersProperty(\n        transform_type=\"transformType\",\n\n        # the properties below are optional\n        find_matches_parameters=glue.CfnMLTransform.FindMatchesParametersProperty(\n            primary_key_column_name=\"primaryKeyColumnName\",\n\n            # the properties below are optional\n            accuracy_cost_tradeoff=123,\n            enforce_provided_labels=False,\n            precision_recall_tradeoff=123\n        )\n    ),\n\n    # the properties below are optional\n    description=\"description\",\n    glue_version=\"glueVersion\",\n    max_capacity=123,\n    max_retries=123,\n    name=\"name\",\n    number_of_workers=123,\n    tags=tags,\n    timeout=123,\n    transform_encryption=glue.CfnMLTransform.TransformEncryptionProperty(\n        ml_user_data_encryption=glue.CfnMLTransform.MLUserDataEncryptionProperty(\n            ml_user_data_encryption_mode=\"mlUserDataEncryptionMode\",\n\n            # the properties below are optional\n            kms_key_id=\"kmsKeyId\"\n        ),\n        task_run_security_configuration_name=\"taskRunSecurityConfigurationName\"\n    ),\n    worker_type=\"workerType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar tags;\n\nCfnMLTransform cfnMLTransform = new CfnMLTransform(this, \"MyCfnMLTransform\", new CfnMLTransformProps {\n    InputRecordTables = new InputRecordTablesProperty {\n        GlueTables = new [] { new GlueTablesProperty {\n            DatabaseName = \"databaseName\",\n            TableName = \"tableName\",\n\n            // the properties below are optional\n            CatalogId = \"catalogId\",\n            ConnectionName = \"connectionName\"\n        } }\n    },\n    Role = \"role\",\n    TransformParameters = new TransformParametersProperty {\n        TransformType = \"transformType\",\n\n        // the properties below are optional\n        FindMatchesParameters = new FindMatchesParametersProperty {\n            PrimaryKeyColumnName = \"primaryKeyColumnName\",\n\n            // the properties below are optional\n            AccuracyCostTradeoff = 123,\n            EnforceProvidedLabels = false,\n            PrecisionRecallTradeoff = 123\n        }\n    },\n\n    // the properties below are optional\n    Description = \"description\",\n    GlueVersion = \"glueVersion\",\n    MaxCapacity = 123,\n    MaxRetries = 123,\n    Name = \"name\",\n    NumberOfWorkers = 123,\n    Tags = tags,\n    Timeout = 123,\n    TransformEncryption = new TransformEncryptionProperty {\n        MlUserDataEncryption = new MLUserDataEncryptionProperty {\n            MlUserDataEncryptionMode = \"mlUserDataEncryptionMode\",\n\n            // the properties below are optional\n            KmsKeyId = \"kmsKeyId\"\n        },\n        TaskRunSecurityConfigurationName = \"taskRunSecurityConfigurationName\"\n    },\n    WorkerType = \"workerType\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject tags;\n\nCfnMLTransform cfnMLTransform = CfnMLTransform.Builder.create(this, \"MyCfnMLTransform\")\n        .inputRecordTables(InputRecordTablesProperty.builder()\n                .glueTables(List.of(GlueTablesProperty.builder()\n                        .databaseName(\"databaseName\")\n                        .tableName(\"tableName\")\n\n                        // the properties below are optional\n                        .catalogId(\"catalogId\")\n                        .connectionName(\"connectionName\")\n                        .build()))\n                .build())\n        .role(\"role\")\n        .transformParameters(TransformParametersProperty.builder()\n                .transformType(\"transformType\")\n\n                // the properties below are optional\n                .findMatchesParameters(FindMatchesParametersProperty.builder()\n                        .primaryKeyColumnName(\"primaryKeyColumnName\")\n\n                        // the properties below are optional\n                        .accuracyCostTradeoff(123)\n                        .enforceProvidedLabels(false)\n                        .precisionRecallTradeoff(123)\n                        .build())\n                .build())\n\n        // the properties below are optional\n        .description(\"description\")\n        .glueVersion(\"glueVersion\")\n        .maxCapacity(123)\n        .maxRetries(123)\n        .name(\"name\")\n        .numberOfWorkers(123)\n        .tags(tags)\n        .timeout(123)\n        .transformEncryption(TransformEncryptionProperty.builder()\n                .mlUserDataEncryption(MLUserDataEncryptionProperty.builder()\n                        .mlUserDataEncryptionMode(\"mlUserDataEncryptionMode\")\n\n                        // the properties below are optional\n                        .kmsKeyId(\"kmsKeyId\")\n                        .build())\n                .taskRunSecurityConfigurationName(\"taskRunSecurityConfigurationName\")\n                .build())\n        .workerType(\"workerType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar tags interface{}\ncfnMLTransform := glue.NewCfnMLTransform(this, jsii.String(\"MyCfnMLTransform\"), &cfnMLTransformProps{\n\tinputRecordTables: &inputRecordTablesProperty{\n\t\tglueTables: []interface{}{\n\t\t\t&glueTablesProperty{\n\t\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcatalogId: jsii.String(\"catalogId\"),\n\t\t\t\tconnectionName: jsii.String(\"connectionName\"),\n\t\t\t},\n\t\t},\n\t},\n\trole: jsii.String(\"role\"),\n\ttransformParameters: &transformParametersProperty{\n\t\ttransformType: jsii.String(\"transformType\"),\n\n\t\t// the properties below are optional\n\t\tfindMatchesParameters: &findMatchesParametersProperty{\n\t\t\tprimaryKeyColumnName: jsii.String(\"primaryKeyColumnName\"),\n\n\t\t\t// the properties below are optional\n\t\t\taccuracyCostTradeoff: jsii.Number(123),\n\t\t\tenforceProvidedLabels: jsii.Boolean(false),\n\t\t\tprecisionRecallTradeoff: jsii.Number(123),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tglueVersion: jsii.String(\"glueVersion\"),\n\tmaxCapacity: jsii.Number(123),\n\tmaxRetries: jsii.Number(123),\n\tname: jsii.String(\"name\"),\n\tnumberOfWorkers: jsii.Number(123),\n\ttags: tags,\n\ttimeout: jsii.Number(123),\n\ttransformEncryption: &transformEncryptionProperty{\n\t\tmlUserDataEncryption: &mLUserDataEncryptionProperty{\n\t\t\tmlUserDataEncryptionMode: jsii.String(\"mlUserDataEncryptionMode\"),\n\n\t\t\t// the properties below are optional\n\t\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t\t},\n\t\ttaskRunSecurityConfigurationName: jsii.String(\"taskRunSecurityConfigurationName\"),\n\t},\n\tworkerType: jsii.String(\"workerType\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const tags: any;\nconst cfnMLTransform = new glue.CfnMLTransform(this, 'MyCfnMLTransform', {\n  inputRecordTables: {\n    glueTables: [{\n      databaseName: 'databaseName',\n      tableName: 'tableName',\n\n      // the properties below are optional\n      catalogId: 'catalogId',\n      connectionName: 'connectionName',\n    }],\n  },\n  role: 'role',\n  transformParameters: {\n    transformType: 'transformType',\n\n    // the properties below are optional\n    findMatchesParameters: {\n      primaryKeyColumnName: 'primaryKeyColumnName',\n\n      // the properties below are optional\n      accuracyCostTradeoff: 123,\n      enforceProvidedLabels: false,\n      precisionRecallTradeoff: 123,\n    },\n  },\n\n  // the properties below are optional\n  description: 'description',\n  glueVersion: 'glueVersion',\n  maxCapacity: 123,\n  maxRetries: 123,\n  name: 'name',\n  numberOfWorkers: 123,\n  tags: tags,\n  timeout: 123,\n  transformEncryption: {\n    mlUserDataEncryption: {\n      mlUserDataEncryptionMode: 'mlUserDataEncryptionMode',\n\n      // the properties below are optional\n      kmsKeyId: 'kmsKeyId',\n    },\n    taskRunSecurityConfigurationName: 'taskRunSecurityConfigurationName',\n  },\n  workerType: 'workerType',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnMLTransform"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnMLTransform",
        "@aws-cdk/aws-glue.CfnMLTransformProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMLTransform = new glue.CfnMLTransform(this, 'MyCfnMLTransform', {\n  inputRecordTables: {\n    glueTables: [{\n      databaseName: 'databaseName',\n      tableName: 'tableName',\n\n      // the properties below are optional\n      catalogId: 'catalogId',\n      connectionName: 'connectionName',\n    }],\n  },\n  role: 'role',\n  transformParameters: {\n    transformType: 'transformType',\n\n    // the properties below are optional\n    findMatchesParameters: {\n      primaryKeyColumnName: 'primaryKeyColumnName',\n\n      // the properties below are optional\n      accuracyCostTradeoff: 123,\n      enforceProvidedLabels: false,\n      precisionRecallTradeoff: 123,\n    },\n  },\n\n  // the properties below are optional\n  description: 'description',\n  glueVersion: 'glueVersion',\n  maxCapacity: 123,\n  maxRetries: 123,\n  name: 'name',\n  numberOfWorkers: 123,\n  tags: tags,\n  timeout: 123,\n  transformEncryption: {\n    mlUserDataEncryption: {\n      mlUserDataEncryptionMode: 'mlUserDataEncryptionMode',\n\n      // the properties below are optional\n      kmsKeyId: 'kmsKeyId',\n    },\n    taskRunSecurityConfigurationName: 'taskRunSecurityConfigurationName',\n  },\n  workerType: 'workerType',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 16,
        "75": 34,
        "91": 1,
        "104": 1,
        "125": 1,
        "130": 1,
        "192": 1,
        "193": 7,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 28,
        "290": 1
      },
      "fqnsFingerprint": "c205acae9371eeec1ad39ad638ccfa9c6bfb99ddc49b31af039a32167def84d6"
    },
    "d9a24ae65c1f40165aea6fe586ea9ec2b78cd39c47b2d8b8fcb707ed7d58a21c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nfind_matches_parameters_property = glue.CfnMLTransform.FindMatchesParametersProperty(\n    primary_key_column_name=\"primaryKeyColumnName\",\n\n    # the properties below are optional\n    accuracy_cost_tradeoff=123,\n    enforce_provided_labels=False,\n    precision_recall_tradeoff=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nFindMatchesParametersProperty findMatchesParametersProperty = new FindMatchesParametersProperty {\n    PrimaryKeyColumnName = \"primaryKeyColumnName\",\n\n    // the properties below are optional\n    AccuracyCostTradeoff = 123,\n    EnforceProvidedLabels = false,\n    PrecisionRecallTradeoff = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nFindMatchesParametersProperty findMatchesParametersProperty = FindMatchesParametersProperty.builder()\n        .primaryKeyColumnName(\"primaryKeyColumnName\")\n\n        // the properties below are optional\n        .accuracyCostTradeoff(123)\n        .enforceProvidedLabels(false)\n        .precisionRecallTradeoff(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nfindMatchesParametersProperty := &findMatchesParametersProperty{\n\tprimaryKeyColumnName: jsii.String(\"primaryKeyColumnName\"),\n\n\t// the properties below are optional\n\taccuracyCostTradeoff: jsii.Number(123),\n\tenforceProvidedLabels: jsii.Boolean(false),\n\tprecisionRecallTradeoff: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst findMatchesParametersProperty: glue.CfnMLTransform.FindMatchesParametersProperty = {\n  primaryKeyColumnName: 'primaryKeyColumnName',\n\n  // the properties below are optional\n  accuracyCostTradeoff: 123,\n  enforceProvidedLabels: false,\n  precisionRecallTradeoff: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnMLTransform.FindMatchesParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnMLTransform.FindMatchesParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst findMatchesParametersProperty: glue.CfnMLTransform.FindMatchesParametersProperty = {\n  primaryKeyColumnName: 'primaryKeyColumnName',\n\n  // the properties below are optional\n  accuracyCostTradeoff: 123,\n  enforceProvidedLabels: false,\n  precisionRecallTradeoff: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 2,
        "75": 9,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "561e927b54f4eb2c0d934547de7986e56500a479849fe7557e9614a2bc3cd817"
    },
    "6e17496604a579b6d564063861ecb9a1fdfa6055262405c1fc47d0c510729bf5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nglue_tables_property = glue.CfnMLTransform.GlueTablesProperty(\n    database_name=\"databaseName\",\n    table_name=\"tableName\",\n\n    # the properties below are optional\n    catalog_id=\"catalogId\",\n    connection_name=\"connectionName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nGlueTablesProperty glueTablesProperty = new GlueTablesProperty {\n    DatabaseName = \"databaseName\",\n    TableName = \"tableName\",\n\n    // the properties below are optional\n    CatalogId = \"catalogId\",\n    ConnectionName = \"connectionName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nGlueTablesProperty glueTablesProperty = GlueTablesProperty.builder()\n        .databaseName(\"databaseName\")\n        .tableName(\"tableName\")\n\n        // the properties below are optional\n        .catalogId(\"catalogId\")\n        .connectionName(\"connectionName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nglueTablesProperty := &glueTablesProperty{\n\tdatabaseName: jsii.String(\"databaseName\"),\n\ttableName: jsii.String(\"tableName\"),\n\n\t// the properties below are optional\n\tcatalogId: jsii.String(\"catalogId\"),\n\tconnectionName: jsii.String(\"connectionName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst glueTablesProperty: glue.CfnMLTransform.GlueTablesProperty = {\n  databaseName: 'databaseName',\n  tableName: 'tableName',\n\n  // the properties below are optional\n  catalogId: 'catalogId',\n  connectionName: 'connectionName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnMLTransform.GlueTablesProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnMLTransform.GlueTablesProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst glueTablesProperty: glue.CfnMLTransform.GlueTablesProperty = {\n  databaseName: 'databaseName',\n  tableName: 'tableName',\n\n  // the properties below are optional\n  catalogId: 'catalogId',\n  connectionName: 'connectionName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "7301ead3b40067a76954ab85f17da7fbe6fea88acce68e699099cd632ae49643"
    },
    "e755b8642432236c6d278ce4058e45b4063302c0da8816c9134e0caead9a8843": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ninput_record_tables_property = glue.CfnMLTransform.InputRecordTablesProperty(\n    glue_tables=[glue.CfnMLTransform.GlueTablesProperty(\n        database_name=\"databaseName\",\n        table_name=\"tableName\",\n\n        # the properties below are optional\n        catalog_id=\"catalogId\",\n        connection_name=\"connectionName\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nInputRecordTablesProperty inputRecordTablesProperty = new InputRecordTablesProperty {\n    GlueTables = new [] { new GlueTablesProperty {\n        DatabaseName = \"databaseName\",\n        TableName = \"tableName\",\n\n        // the properties below are optional\n        CatalogId = \"catalogId\",\n        ConnectionName = \"connectionName\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nInputRecordTablesProperty inputRecordTablesProperty = InputRecordTablesProperty.builder()\n        .glueTables(List.of(GlueTablesProperty.builder()\n                .databaseName(\"databaseName\")\n                .tableName(\"tableName\")\n\n                // the properties below are optional\n                .catalogId(\"catalogId\")\n                .connectionName(\"connectionName\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ninputRecordTablesProperty := &inputRecordTablesProperty{\n\tglueTables: []interface{}{\n\t\t&glueTablesProperty{\n\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t\t// the properties below are optional\n\t\t\tcatalogId: jsii.String(\"catalogId\"),\n\t\t\tconnectionName: jsii.String(\"connectionName\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst inputRecordTablesProperty: glue.CfnMLTransform.InputRecordTablesProperty = {\n  glueTables: [{\n    databaseName: 'databaseName',\n    tableName: 'tableName',\n\n    // the properties below are optional\n    catalogId: 'catalogId',\n    connectionName: 'connectionName',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnMLTransform.InputRecordTablesProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnMLTransform.InputRecordTablesProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inputRecordTablesProperty: glue.CfnMLTransform.InputRecordTablesProperty = {\n  glueTables: [{\n    databaseName: 'databaseName',\n    tableName: 'tableName',\n\n    // the properties below are optional\n    catalogId: 'catalogId',\n    connectionName: 'connectionName',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 10,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "77f8c417d9d232bb4431a713af96fb1b52486332f3e697e31d21cd75040144a7"
    },
    "8fefe9eff5887f489a9858b9d1a464d18066f94ff23692bea4a57c6844322368": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nm_lUser_data_encryption_property = glue.CfnMLTransform.MLUserDataEncryptionProperty(\n    ml_user_data_encryption_mode=\"mlUserDataEncryptionMode\",\n\n    # the properties below are optional\n    kms_key_id=\"kmsKeyId\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nMLUserDataEncryptionProperty mLUserDataEncryptionProperty = new MLUserDataEncryptionProperty {\n    MlUserDataEncryptionMode = \"mlUserDataEncryptionMode\",\n\n    // the properties below are optional\n    KmsKeyId = \"kmsKeyId\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nMLUserDataEncryptionProperty mLUserDataEncryptionProperty = MLUserDataEncryptionProperty.builder()\n        .mlUserDataEncryptionMode(\"mlUserDataEncryptionMode\")\n\n        // the properties below are optional\n        .kmsKeyId(\"kmsKeyId\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nmLUserDataEncryptionProperty := &mLUserDataEncryptionProperty{\n\tmlUserDataEncryptionMode: jsii.String(\"mlUserDataEncryptionMode\"),\n\n\t// the properties below are optional\n\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst mLUserDataEncryptionProperty: glue.CfnMLTransform.MLUserDataEncryptionProperty = {\n  mlUserDataEncryptionMode: 'mlUserDataEncryptionMode',\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnMLTransform.MLUserDataEncryptionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnMLTransform.MLUserDataEncryptionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst mLUserDataEncryptionProperty: glue.CfnMLTransform.MLUserDataEncryptionProperty = {\n  mlUserDataEncryptionMode: 'mlUserDataEncryptionMode',\n\n  // the properties below are optional\n  kmsKeyId: 'kmsKeyId',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "357950f422de462660b1471ef5fd33eef91895df41947cb409e9371eaecd54e0"
    },
    "3b195a97a8cfe12eb0afa10ca7faf5c3b7ae9c593e09cd6e41227736af4c011b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ntransform_encryption_property = glue.CfnMLTransform.TransformEncryptionProperty(\n    ml_user_data_encryption=glue.CfnMLTransform.MLUserDataEncryptionProperty(\n        ml_user_data_encryption_mode=\"mlUserDataEncryptionMode\",\n\n        # the properties below are optional\n        kms_key_id=\"kmsKeyId\"\n    ),\n    task_run_security_configuration_name=\"taskRunSecurityConfigurationName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nTransformEncryptionProperty transformEncryptionProperty = new TransformEncryptionProperty {\n    MlUserDataEncryption = new MLUserDataEncryptionProperty {\n        MlUserDataEncryptionMode = \"mlUserDataEncryptionMode\",\n\n        // the properties below are optional\n        KmsKeyId = \"kmsKeyId\"\n    },\n    TaskRunSecurityConfigurationName = \"taskRunSecurityConfigurationName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nTransformEncryptionProperty transformEncryptionProperty = TransformEncryptionProperty.builder()\n        .mlUserDataEncryption(MLUserDataEncryptionProperty.builder()\n                .mlUserDataEncryptionMode(\"mlUserDataEncryptionMode\")\n\n                // the properties below are optional\n                .kmsKeyId(\"kmsKeyId\")\n                .build())\n        .taskRunSecurityConfigurationName(\"taskRunSecurityConfigurationName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ntransformEncryptionProperty := &transformEncryptionProperty{\n\tmlUserDataEncryption: &mLUserDataEncryptionProperty{\n\t\tmlUserDataEncryptionMode: jsii.String(\"mlUserDataEncryptionMode\"),\n\n\t\t// the properties below are optional\n\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t},\n\ttaskRunSecurityConfigurationName: jsii.String(\"taskRunSecurityConfigurationName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst transformEncryptionProperty: glue.CfnMLTransform.TransformEncryptionProperty = {\n  mlUserDataEncryption: {\n    mlUserDataEncryptionMode: 'mlUserDataEncryptionMode',\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  taskRunSecurityConfigurationName: 'taskRunSecurityConfigurationName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnMLTransform.TransformEncryptionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnMLTransform.TransformEncryptionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst transformEncryptionProperty: glue.CfnMLTransform.TransformEncryptionProperty = {\n  mlUserDataEncryption: {\n    mlUserDataEncryptionMode: 'mlUserDataEncryptionMode',\n\n    // the properties below are optional\n    kmsKeyId: 'kmsKeyId',\n  },\n  taskRunSecurityConfigurationName: 'taskRunSecurityConfigurationName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "48cfa700b5334a8fcfe87fdfdc1c0de1d1be3b5314c545318b2a09dbfabf1f5c"
    },
    "1762c0f3b8e46797597466f9a9b63e93a6e88ef4189399d88512a35914d685f7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ntransform_parameters_property = glue.CfnMLTransform.TransformParametersProperty(\n    transform_type=\"transformType\",\n\n    # the properties below are optional\n    find_matches_parameters=glue.CfnMLTransform.FindMatchesParametersProperty(\n        primary_key_column_name=\"primaryKeyColumnName\",\n\n        # the properties below are optional\n        accuracy_cost_tradeoff=123,\n        enforce_provided_labels=False,\n        precision_recall_tradeoff=123\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nTransformParametersProperty transformParametersProperty = new TransformParametersProperty {\n    TransformType = \"transformType\",\n\n    // the properties below are optional\n    FindMatchesParameters = new FindMatchesParametersProperty {\n        PrimaryKeyColumnName = \"primaryKeyColumnName\",\n\n        // the properties below are optional\n        AccuracyCostTradeoff = 123,\n        EnforceProvidedLabels = false,\n        PrecisionRecallTradeoff = 123\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nTransformParametersProperty transformParametersProperty = TransformParametersProperty.builder()\n        .transformType(\"transformType\")\n\n        // the properties below are optional\n        .findMatchesParameters(FindMatchesParametersProperty.builder()\n                .primaryKeyColumnName(\"primaryKeyColumnName\")\n\n                // the properties below are optional\n                .accuracyCostTradeoff(123)\n                .enforceProvidedLabels(false)\n                .precisionRecallTradeoff(123)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ntransformParametersProperty := &transformParametersProperty{\n\ttransformType: jsii.String(\"transformType\"),\n\n\t// the properties below are optional\n\tfindMatchesParameters: &findMatchesParametersProperty{\n\t\tprimaryKeyColumnName: jsii.String(\"primaryKeyColumnName\"),\n\n\t\t// the properties below are optional\n\t\taccuracyCostTradeoff: jsii.Number(123),\n\t\tenforceProvidedLabels: jsii.Boolean(false),\n\t\tprecisionRecallTradeoff: jsii.Number(123),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst transformParametersProperty: glue.CfnMLTransform.TransformParametersProperty = {\n  transformType: 'transformType',\n\n  // the properties below are optional\n  findMatchesParameters: {\n    primaryKeyColumnName: 'primaryKeyColumnName',\n\n    // the properties below are optional\n    accuracyCostTradeoff: 123,\n    enforceProvidedLabels: false,\n    precisionRecallTradeoff: 123,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnMLTransform.TransformParametersProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnMLTransform.TransformParametersProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst transformParametersProperty: glue.CfnMLTransform.TransformParametersProperty = {\n  transformType: 'transformType',\n\n  // the properties below are optional\n  findMatchesParameters: {\n    primaryKeyColumnName: 'primaryKeyColumnName',\n\n    // the properties below are optional\n    accuracyCostTradeoff: 123,\n    enforceProvidedLabels: false,\n    precisionRecallTradeoff: 123,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 3,
        "75": 11,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "7311e5b042d60937e50e5150327369eeeb7b8b5d0c8a44aa404f836212b5bfda"
    },
    "964215ed23a5af64fa9c05da1e5315a1f1c501ecb520f03a899e57e967315c8e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# tags: Any\n\ncfn_mLTransform_props = glue.CfnMLTransformProps(\n    input_record_tables=glue.CfnMLTransform.InputRecordTablesProperty(\n        glue_tables=[glue.CfnMLTransform.GlueTablesProperty(\n            database_name=\"databaseName\",\n            table_name=\"tableName\",\n\n            # the properties below are optional\n            catalog_id=\"catalogId\",\n            connection_name=\"connectionName\"\n        )]\n    ),\n    role=\"role\",\n    transform_parameters=glue.CfnMLTransform.TransformParametersProperty(\n        transform_type=\"transformType\",\n\n        # the properties below are optional\n        find_matches_parameters=glue.CfnMLTransform.FindMatchesParametersProperty(\n            primary_key_column_name=\"primaryKeyColumnName\",\n\n            # the properties below are optional\n            accuracy_cost_tradeoff=123,\n            enforce_provided_labels=False,\n            precision_recall_tradeoff=123\n        )\n    ),\n\n    # the properties below are optional\n    description=\"description\",\n    glue_version=\"glueVersion\",\n    max_capacity=123,\n    max_retries=123,\n    name=\"name\",\n    number_of_workers=123,\n    tags=tags,\n    timeout=123,\n    transform_encryption=glue.CfnMLTransform.TransformEncryptionProperty(\n        ml_user_data_encryption=glue.CfnMLTransform.MLUserDataEncryptionProperty(\n            ml_user_data_encryption_mode=\"mlUserDataEncryptionMode\",\n\n            # the properties below are optional\n            kms_key_id=\"kmsKeyId\"\n        ),\n        task_run_security_configuration_name=\"taskRunSecurityConfigurationName\"\n    ),\n    worker_type=\"workerType\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar tags;\n\nCfnMLTransformProps cfnMLTransformProps = new CfnMLTransformProps {\n    InputRecordTables = new InputRecordTablesProperty {\n        GlueTables = new [] { new GlueTablesProperty {\n            DatabaseName = \"databaseName\",\n            TableName = \"tableName\",\n\n            // the properties below are optional\n            CatalogId = \"catalogId\",\n            ConnectionName = \"connectionName\"\n        } }\n    },\n    Role = \"role\",\n    TransformParameters = new TransformParametersProperty {\n        TransformType = \"transformType\",\n\n        // the properties below are optional\n        FindMatchesParameters = new FindMatchesParametersProperty {\n            PrimaryKeyColumnName = \"primaryKeyColumnName\",\n\n            // the properties below are optional\n            AccuracyCostTradeoff = 123,\n            EnforceProvidedLabels = false,\n            PrecisionRecallTradeoff = 123\n        }\n    },\n\n    // the properties below are optional\n    Description = \"description\",\n    GlueVersion = \"glueVersion\",\n    MaxCapacity = 123,\n    MaxRetries = 123,\n    Name = \"name\",\n    NumberOfWorkers = 123,\n    Tags = tags,\n    Timeout = 123,\n    TransformEncryption = new TransformEncryptionProperty {\n        MlUserDataEncryption = new MLUserDataEncryptionProperty {\n            MlUserDataEncryptionMode = \"mlUserDataEncryptionMode\",\n\n            // the properties below are optional\n            KmsKeyId = \"kmsKeyId\"\n        },\n        TaskRunSecurityConfigurationName = \"taskRunSecurityConfigurationName\"\n    },\n    WorkerType = \"workerType\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject tags;\n\nCfnMLTransformProps cfnMLTransformProps = CfnMLTransformProps.builder()\n        .inputRecordTables(InputRecordTablesProperty.builder()\n                .glueTables(List.of(GlueTablesProperty.builder()\n                        .databaseName(\"databaseName\")\n                        .tableName(\"tableName\")\n\n                        // the properties below are optional\n                        .catalogId(\"catalogId\")\n                        .connectionName(\"connectionName\")\n                        .build()))\n                .build())\n        .role(\"role\")\n        .transformParameters(TransformParametersProperty.builder()\n                .transformType(\"transformType\")\n\n                // the properties below are optional\n                .findMatchesParameters(FindMatchesParametersProperty.builder()\n                        .primaryKeyColumnName(\"primaryKeyColumnName\")\n\n                        // the properties below are optional\n                        .accuracyCostTradeoff(123)\n                        .enforceProvidedLabels(false)\n                        .precisionRecallTradeoff(123)\n                        .build())\n                .build())\n\n        // the properties below are optional\n        .description(\"description\")\n        .glueVersion(\"glueVersion\")\n        .maxCapacity(123)\n        .maxRetries(123)\n        .name(\"name\")\n        .numberOfWorkers(123)\n        .tags(tags)\n        .timeout(123)\n        .transformEncryption(TransformEncryptionProperty.builder()\n                .mlUserDataEncryption(MLUserDataEncryptionProperty.builder()\n                        .mlUserDataEncryptionMode(\"mlUserDataEncryptionMode\")\n\n                        // the properties below are optional\n                        .kmsKeyId(\"kmsKeyId\")\n                        .build())\n                .taskRunSecurityConfigurationName(\"taskRunSecurityConfigurationName\")\n                .build())\n        .workerType(\"workerType\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar tags interface{}\ncfnMLTransformProps := &cfnMLTransformProps{\n\tinputRecordTables: &inputRecordTablesProperty{\n\t\tglueTables: []interface{}{\n\t\t\t&glueTablesProperty{\n\t\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\t\ttableName: jsii.String(\"tableName\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcatalogId: jsii.String(\"catalogId\"),\n\t\t\t\tconnectionName: jsii.String(\"connectionName\"),\n\t\t\t},\n\t\t},\n\t},\n\trole: jsii.String(\"role\"),\n\ttransformParameters: &transformParametersProperty{\n\t\ttransformType: jsii.String(\"transformType\"),\n\n\t\t// the properties below are optional\n\t\tfindMatchesParameters: &findMatchesParametersProperty{\n\t\t\tprimaryKeyColumnName: jsii.String(\"primaryKeyColumnName\"),\n\n\t\t\t// the properties below are optional\n\t\t\taccuracyCostTradeoff: jsii.Number(123),\n\t\t\tenforceProvidedLabels: jsii.Boolean(false),\n\t\t\tprecisionRecallTradeoff: jsii.Number(123),\n\t\t},\n\t},\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tglueVersion: jsii.String(\"glueVersion\"),\n\tmaxCapacity: jsii.Number(123),\n\tmaxRetries: jsii.Number(123),\n\tname: jsii.String(\"name\"),\n\tnumberOfWorkers: jsii.Number(123),\n\ttags: tags,\n\ttimeout: jsii.Number(123),\n\ttransformEncryption: &transformEncryptionProperty{\n\t\tmlUserDataEncryption: &mLUserDataEncryptionProperty{\n\t\t\tmlUserDataEncryptionMode: jsii.String(\"mlUserDataEncryptionMode\"),\n\n\t\t\t// the properties below are optional\n\t\t\tkmsKeyId: jsii.String(\"kmsKeyId\"),\n\t\t},\n\t\ttaskRunSecurityConfigurationName: jsii.String(\"taskRunSecurityConfigurationName\"),\n\t},\n\tworkerType: jsii.String(\"workerType\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const tags: any;\nconst cfnMLTransformProps: glue.CfnMLTransformProps = {\n  inputRecordTables: {\n    glueTables: [{\n      databaseName: 'databaseName',\n      tableName: 'tableName',\n\n      // the properties below are optional\n      catalogId: 'catalogId',\n      connectionName: 'connectionName',\n    }],\n  },\n  role: 'role',\n  transformParameters: {\n    transformType: 'transformType',\n\n    // the properties below are optional\n    findMatchesParameters: {\n      primaryKeyColumnName: 'primaryKeyColumnName',\n\n      // the properties below are optional\n      accuracyCostTradeoff: 123,\n      enforceProvidedLabels: false,\n      precisionRecallTradeoff: 123,\n    },\n  },\n\n  // the properties below are optional\n  description: 'description',\n  glueVersion: 'glueVersion',\n  maxCapacity: 123,\n  maxRetries: 123,\n  name: 'name',\n  numberOfWorkers: 123,\n  tags: tags,\n  timeout: 123,\n  transformEncryption: {\n    mlUserDataEncryption: {\n      mlUserDataEncryptionMode: 'mlUserDataEncryptionMode',\n\n      // the properties below are optional\n      kmsKeyId: 'kmsKeyId',\n    },\n    taskRunSecurityConfigurationName: 'taskRunSecurityConfigurationName',\n  },\n  workerType: 'workerType',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnMLTransformProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnMLTransformProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnMLTransformProps: glue.CfnMLTransformProps = {\n  inputRecordTables: {\n    glueTables: [{\n      databaseName: 'databaseName',\n      tableName: 'tableName',\n\n      // the properties below are optional\n      catalogId: 'catalogId',\n      connectionName: 'connectionName',\n    }],\n  },\n  role: 'role',\n  transformParameters: {\n    transformType: 'transformType',\n\n    // the properties below are optional\n    findMatchesParameters: {\n      primaryKeyColumnName: 'primaryKeyColumnName',\n\n      // the properties below are optional\n      accuracyCostTradeoff: 123,\n      enforceProvidedLabels: false,\n      precisionRecallTradeoff: 123,\n    },\n  },\n\n  // the properties below are optional\n  description: 'description',\n  glueVersion: 'glueVersion',\n  maxCapacity: 123,\n  maxRetries: 123,\n  name: 'name',\n  numberOfWorkers: 123,\n  tags: tags,\n  timeout: 123,\n  transformEncryption: {\n    mlUserDataEncryption: {\n      mlUserDataEncryptionMode: 'mlUserDataEncryptionMode',\n\n      // the properties below are optional\n      kmsKeyId: 'kmsKeyId',\n    },\n    taskRunSecurityConfigurationName: 'taskRunSecurityConfigurationName',\n  },\n  workerType: 'workerType',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 6,
        "10": 15,
        "75": 34,
        "91": 1,
        "125": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 7,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 28,
        "290": 1
      },
      "fqnsFingerprint": "771a5cc3aa33fb0a736b4c102402285925f1199aa1802ff2ae325245e7236cca"
    },
    "5445dbb7ac3c82e00d09a8ad01392414a70fd4961c0c51ff90bb47e2c1358af3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# parameters: Any\n# skewed_column_value_location_maps: Any\n\ncfn_partition = glue.CfnPartition(self, \"MyCfnPartition\",\n    catalog_id=\"catalogId\",\n    database_name=\"databaseName\",\n    partition_input=glue.CfnPartition.PartitionInputProperty(\n        values=[\"values\"],\n\n        # the properties below are optional\n        parameters=parameters,\n        storage_descriptor=glue.CfnPartition.StorageDescriptorProperty(\n            bucket_columns=[\"bucketColumns\"],\n            columns=[glue.CfnPartition.ColumnProperty(\n                name=\"name\",\n\n                # the properties below are optional\n                comment=\"comment\",\n                type=\"type\"\n            )],\n            compressed=False,\n            input_format=\"inputFormat\",\n            location=\"location\",\n            number_of_buckets=123,\n            output_format=\"outputFormat\",\n            parameters=parameters,\n            schema_reference=glue.CfnPartition.SchemaReferenceProperty(\n                schema_id=glue.CfnPartition.SchemaIdProperty(\n                    registry_name=\"registryName\",\n                    schema_arn=\"schemaArn\",\n                    schema_name=\"schemaName\"\n                ),\n                schema_version_id=\"schemaVersionId\",\n                schema_version_number=123\n            ),\n            serde_info=glue.CfnPartition.SerdeInfoProperty(\n                name=\"name\",\n                parameters=parameters,\n                serialization_library=\"serializationLibrary\"\n            ),\n            skewed_info=glue.CfnPartition.SkewedInfoProperty(\n                skewed_column_names=[\"skewedColumnNames\"],\n                skewed_column_value_location_maps=skewed_column_value_location_maps,\n                skewed_column_values=[\"skewedColumnValues\"]\n            ),\n            sort_columns=[glue.CfnPartition.OrderProperty(\n                column=\"column\",\n\n                # the properties below are optional\n                sort_order=123\n            )],\n            stored_as_sub_directories=False\n        )\n    ),\n    table_name=\"tableName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar parameters;\nvar skewedColumnValueLocationMaps;\n\nCfnPartition cfnPartition = new CfnPartition(this, \"MyCfnPartition\", new CfnPartitionProps {\n    CatalogId = \"catalogId\",\n    DatabaseName = \"databaseName\",\n    PartitionInput = new PartitionInputProperty {\n        Values = new [] { \"values\" },\n\n        // the properties below are optional\n        Parameters = parameters,\n        StorageDescriptor = new StorageDescriptorProperty {\n            BucketColumns = new [] { \"bucketColumns\" },\n            Columns = new [] { new ColumnProperty {\n                Name = \"name\",\n\n                // the properties below are optional\n                Comment = \"comment\",\n                Type = \"type\"\n            } },\n            Compressed = false,\n            InputFormat = \"inputFormat\",\n            Location = \"location\",\n            NumberOfBuckets = 123,\n            OutputFormat = \"outputFormat\",\n            Parameters = parameters,\n            SchemaReference = new SchemaReferenceProperty {\n                SchemaId = new SchemaIdProperty {\n                    RegistryName = \"registryName\",\n                    SchemaArn = \"schemaArn\",\n                    SchemaName = \"schemaName\"\n                },\n                SchemaVersionId = \"schemaVersionId\",\n                SchemaVersionNumber = 123\n            },\n            SerdeInfo = new SerdeInfoProperty {\n                Name = \"name\",\n                Parameters = parameters,\n                SerializationLibrary = \"serializationLibrary\"\n            },\n            SkewedInfo = new SkewedInfoProperty {\n                SkewedColumnNames = new [] { \"skewedColumnNames\" },\n                SkewedColumnValueLocationMaps = skewedColumnValueLocationMaps,\n                SkewedColumnValues = new [] { \"skewedColumnValues\" }\n            },\n            SortColumns = new [] { new OrderProperty {\n                Column = \"column\",\n\n                // the properties below are optional\n                SortOrder = 123\n            } },\n            StoredAsSubDirectories = false\n        }\n    },\n    TableName = \"tableName\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject parameters;\nObject skewedColumnValueLocationMaps;\n\nCfnPartition cfnPartition = CfnPartition.Builder.create(this, \"MyCfnPartition\")\n        .catalogId(\"catalogId\")\n        .databaseName(\"databaseName\")\n        .partitionInput(PartitionInputProperty.builder()\n                .values(List.of(\"values\"))\n\n                // the properties below are optional\n                .parameters(parameters)\n                .storageDescriptor(StorageDescriptorProperty.builder()\n                        .bucketColumns(List.of(\"bucketColumns\"))\n                        .columns(List.of(ColumnProperty.builder()\n                                .name(\"name\")\n\n                                // the properties below are optional\n                                .comment(\"comment\")\n                                .type(\"type\")\n                                .build()))\n                        .compressed(false)\n                        .inputFormat(\"inputFormat\")\n                        .location(\"location\")\n                        .numberOfBuckets(123)\n                        .outputFormat(\"outputFormat\")\n                        .parameters(parameters)\n                        .schemaReference(SchemaReferenceProperty.builder()\n                                .schemaId(SchemaIdProperty.builder()\n                                        .registryName(\"registryName\")\n                                        .schemaArn(\"schemaArn\")\n                                        .schemaName(\"schemaName\")\n                                        .build())\n                                .schemaVersionId(\"schemaVersionId\")\n                                .schemaVersionNumber(123)\n                                .build())\n                        .serdeInfo(SerdeInfoProperty.builder()\n                                .name(\"name\")\n                                .parameters(parameters)\n                                .serializationLibrary(\"serializationLibrary\")\n                                .build())\n                        .skewedInfo(SkewedInfoProperty.builder()\n                                .skewedColumnNames(List.of(\"skewedColumnNames\"))\n                                .skewedColumnValueLocationMaps(skewedColumnValueLocationMaps)\n                                .skewedColumnValues(List.of(\"skewedColumnValues\"))\n                                .build())\n                        .sortColumns(List.of(OrderProperty.builder()\n                                .column(\"column\")\n\n                                // the properties below are optional\n                                .sortOrder(123)\n                                .build()))\n                        .storedAsSubDirectories(false)\n                        .build())\n                .build())\n        .tableName(\"tableName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar parameters interface{}\nvar skewedColumnValueLocationMaps interface{}\ncfnPartition := glue.NewCfnPartition(this, jsii.String(\"MyCfnPartition\"), &cfnPartitionProps{\n\tcatalogId: jsii.String(\"catalogId\"),\n\tdatabaseName: jsii.String(\"databaseName\"),\n\tpartitionInput: &partitionInputProperty{\n\t\tvalues: []*string{\n\t\t\tjsii.String(\"values\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tparameters: parameters,\n\t\tstorageDescriptor: &storageDescriptorProperty{\n\t\t\tbucketColumns: []*string{\n\t\t\t\tjsii.String(\"bucketColumns\"),\n\t\t\t},\n\t\t\tcolumns: []interface{}{\n\t\t\t\t&columnProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tcomment: jsii.String(\"comment\"),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tcompressed: jsii.Boolean(false),\n\t\t\tinputFormat: jsii.String(\"inputFormat\"),\n\t\t\tlocation: jsii.String(\"location\"),\n\t\t\tnumberOfBuckets: jsii.Number(123),\n\t\t\toutputFormat: jsii.String(\"outputFormat\"),\n\t\t\tparameters: parameters,\n\t\t\tschemaReference: &schemaReferenceProperty{\n\t\t\t\tschemaId: &schemaIdProperty{\n\t\t\t\t\tregistryName: jsii.String(\"registryName\"),\n\t\t\t\t\tschemaArn: jsii.String(\"schemaArn\"),\n\t\t\t\t\tschemaName: jsii.String(\"schemaName\"),\n\t\t\t\t},\n\t\t\t\tschemaVersionId: jsii.String(\"schemaVersionId\"),\n\t\t\t\tschemaVersionNumber: jsii.Number(123),\n\t\t\t},\n\t\t\tserdeInfo: &serdeInfoProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tparameters: parameters,\n\t\t\t\tserializationLibrary: jsii.String(\"serializationLibrary\"),\n\t\t\t},\n\t\t\tskewedInfo: &skewedInfoProperty{\n\t\t\t\tskewedColumnNames: []*string{\n\t\t\t\t\tjsii.String(\"skewedColumnNames\"),\n\t\t\t\t},\n\t\t\t\tskewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n\t\t\t\tskewedColumnValues: []*string{\n\t\t\t\t\tjsii.String(\"skewedColumnValues\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tsortColumns: []interface{}{\n\t\t\t\t&orderProperty{\n\t\t\t\t\tcolumn: jsii.String(\"column\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsortOrder: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t\tstoredAsSubDirectories: jsii.Boolean(false),\n\t\t},\n\t},\n\ttableName: jsii.String(\"tableName\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\ndeclare const skewedColumnValueLocationMaps: any;\nconst cfnPartition = new glue.CfnPartition(this, 'MyCfnPartition', {\n  catalogId: 'catalogId',\n  databaseName: 'databaseName',\n  partitionInput: {\n    values: ['values'],\n\n    // the properties below are optional\n    parameters: parameters,\n    storageDescriptor: {\n      bucketColumns: ['bucketColumns'],\n      columns: [{\n        name: 'name',\n\n        // the properties below are optional\n        comment: 'comment',\n        type: 'type',\n      }],\n      compressed: false,\n      inputFormat: 'inputFormat',\n      location: 'location',\n      numberOfBuckets: 123,\n      outputFormat: 'outputFormat',\n      parameters: parameters,\n      schemaReference: {\n        schemaId: {\n          registryName: 'registryName',\n          schemaArn: 'schemaArn',\n          schemaName: 'schemaName',\n        },\n        schemaVersionId: 'schemaVersionId',\n        schemaVersionNumber: 123,\n      },\n      serdeInfo: {\n        name: 'name',\n        parameters: parameters,\n        serializationLibrary: 'serializationLibrary',\n      },\n      skewedInfo: {\n        skewedColumnNames: ['skewedColumnNames'],\n        skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n        skewedColumnValues: ['skewedColumnValues'],\n      },\n      sortColumns: [{\n        column: 'column',\n\n        // the properties below are optional\n        sortOrder: 123,\n      }],\n      storedAsSubDirectories: false,\n    },\n  },\n  tableName: 'tableName',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnPartition"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnPartition",
        "@aws-cdk/aws-glue.CfnPartitionProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\ndeclare const skewedColumnValueLocationMaps: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPartition = new glue.CfnPartition(this, 'MyCfnPartition', {\n  catalogId: 'catalogId',\n  databaseName: 'databaseName',\n  partitionInput: {\n    values: ['values'],\n\n    // the properties below are optional\n    parameters: parameters,\n    storageDescriptor: {\n      bucketColumns: ['bucketColumns'],\n      columns: [{\n        name: 'name',\n\n        // the properties below are optional\n        comment: 'comment',\n        type: 'type',\n      }],\n      compressed: false,\n      inputFormat: 'inputFormat',\n      location: 'location',\n      numberOfBuckets: 123,\n      outputFormat: 'outputFormat',\n      parameters: parameters,\n      schemaReference: {\n        schemaId: {\n          registryName: 'registryName',\n          schemaArn: 'schemaArn',\n          schemaName: 'schemaName',\n        },\n        schemaVersionId: 'schemaVersionId',\n        schemaVersionNumber: 123,\n      },\n      serdeInfo: {\n        name: 'name',\n        parameters: parameters,\n        serializationLibrary: 'serializationLibrary',\n      },\n      skewedInfo: {\n        skewedColumnNames: ['skewedColumnNames'],\n        skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n        skewedColumnValues: ['skewedColumnValues'],\n      },\n      sortColumns: [{\n        column: 'column',\n\n        // the properties below are optional\n        sortOrder: 123,\n      }],\n      storedAsSubDirectories: false,\n    },\n  },\n  tableName: 'tableName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 22,
        "75": 47,
        "91": 2,
        "104": 1,
        "125": 2,
        "130": 2,
        "192": 6,
        "193": 9,
        "194": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 37,
        "290": 1
      },
      "fqnsFingerprint": "5ece66bad0c0fc8399fff6a533b5072f3006b1e48766649f2ef12cb60efe1b77"
    },
    "dbab3feb6ce0e7d50c2ae53a2628b516817ab7194d8007139f1bbba6647f8ce0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncolumn_property = glue.CfnPartition.ColumnProperty(\n    name=\"name\",\n\n    # the properties below are optional\n    comment=\"comment\",\n    type=\"type\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nColumnProperty columnProperty = new ColumnProperty {\n    Name = \"name\",\n\n    // the properties below are optional\n    Comment = \"comment\",\n    Type = \"type\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nColumnProperty columnProperty = ColumnProperty.builder()\n        .name(\"name\")\n\n        // the properties below are optional\n        .comment(\"comment\")\n        .type(\"type\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncolumnProperty := &columnProperty{\n\tname: jsii.String(\"name\"),\n\n\t// the properties below are optional\n\tcomment: jsii.String(\"comment\"),\n\ttype: jsii.String(\"type\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst columnProperty: glue.CfnPartition.ColumnProperty = {\n  name: 'name',\n\n  // the properties below are optional\n  comment: 'comment',\n  type: 'type',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnPartition.ColumnProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnPartition.ColumnProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst columnProperty: glue.CfnPartition.ColumnProperty = {\n  name: 'name',\n\n  // the properties below are optional\n  comment: 'comment',\n  type: 'type',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "30baab83e91236378ac9ae8017a1266dec99329c68ae3ed33a19ac51fc242801"
    },
    "2e701b7d38209a332934a66c4a3c7da81513feb2feb6055b3517591d199a1981": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\norder_property = glue.CfnPartition.OrderProperty(\n    column=\"column\",\n\n    # the properties below are optional\n    sort_order=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nOrderProperty orderProperty = new OrderProperty {\n    Column = \"column\",\n\n    // the properties below are optional\n    SortOrder = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nOrderProperty orderProperty = OrderProperty.builder()\n        .column(\"column\")\n\n        // the properties below are optional\n        .sortOrder(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\norderProperty := &orderProperty{\n\tcolumn: jsii.String(\"column\"),\n\n\t// the properties below are optional\n\tsortOrder: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst orderProperty: glue.CfnPartition.OrderProperty = {\n  column: 'column',\n\n  // the properties below are optional\n  sortOrder: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnPartition.OrderProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnPartition.OrderProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst orderProperty: glue.CfnPartition.OrderProperty = {\n  column: 'column',\n\n  // the properties below are optional\n  sortOrder: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "8324c2c2118cea8a93a20ffa0c28f634c986ace1e4e6050fd09eb8da17be35c0"
    },
    "685f6c87f753a69e9177ab0effa1035026662c67818f1dd629e41080ac482418": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# parameters: Any\n# skewed_column_value_location_maps: Any\n\npartition_input_property = glue.CfnPartition.PartitionInputProperty(\n    values=[\"values\"],\n\n    # the properties below are optional\n    parameters=parameters,\n    storage_descriptor=glue.CfnPartition.StorageDescriptorProperty(\n        bucket_columns=[\"bucketColumns\"],\n        columns=[glue.CfnPartition.ColumnProperty(\n            name=\"name\",\n\n            # the properties below are optional\n            comment=\"comment\",\n            type=\"type\"\n        )],\n        compressed=False,\n        input_format=\"inputFormat\",\n        location=\"location\",\n        number_of_buckets=123,\n        output_format=\"outputFormat\",\n        parameters=parameters,\n        schema_reference=glue.CfnPartition.SchemaReferenceProperty(\n            schema_id=glue.CfnPartition.SchemaIdProperty(\n                registry_name=\"registryName\",\n                schema_arn=\"schemaArn\",\n                schema_name=\"schemaName\"\n            ),\n            schema_version_id=\"schemaVersionId\",\n            schema_version_number=123\n        ),\n        serde_info=glue.CfnPartition.SerdeInfoProperty(\n            name=\"name\",\n            parameters=parameters,\n            serialization_library=\"serializationLibrary\"\n        ),\n        skewed_info=glue.CfnPartition.SkewedInfoProperty(\n            skewed_column_names=[\"skewedColumnNames\"],\n            skewed_column_value_location_maps=skewed_column_value_location_maps,\n            skewed_column_values=[\"skewedColumnValues\"]\n        ),\n        sort_columns=[glue.CfnPartition.OrderProperty(\n            column=\"column\",\n\n            # the properties below are optional\n            sort_order=123\n        )],\n        stored_as_sub_directories=False\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar parameters;\nvar skewedColumnValueLocationMaps;\n\nPartitionInputProperty partitionInputProperty = new PartitionInputProperty {\n    Values = new [] { \"values\" },\n\n    // the properties below are optional\n    Parameters = parameters,\n    StorageDescriptor = new StorageDescriptorProperty {\n        BucketColumns = new [] { \"bucketColumns\" },\n        Columns = new [] { new ColumnProperty {\n            Name = \"name\",\n\n            // the properties below are optional\n            Comment = \"comment\",\n            Type = \"type\"\n        } },\n        Compressed = false,\n        InputFormat = \"inputFormat\",\n        Location = \"location\",\n        NumberOfBuckets = 123,\n        OutputFormat = \"outputFormat\",\n        Parameters = parameters,\n        SchemaReference = new SchemaReferenceProperty {\n            SchemaId = new SchemaIdProperty {\n                RegistryName = \"registryName\",\n                SchemaArn = \"schemaArn\",\n                SchemaName = \"schemaName\"\n            },\n            SchemaVersionId = \"schemaVersionId\",\n            SchemaVersionNumber = 123\n        },\n        SerdeInfo = new SerdeInfoProperty {\n            Name = \"name\",\n            Parameters = parameters,\n            SerializationLibrary = \"serializationLibrary\"\n        },\n        SkewedInfo = new SkewedInfoProperty {\n            SkewedColumnNames = new [] { \"skewedColumnNames\" },\n            SkewedColumnValueLocationMaps = skewedColumnValueLocationMaps,\n            SkewedColumnValues = new [] { \"skewedColumnValues\" }\n        },\n        SortColumns = new [] { new OrderProperty {\n            Column = \"column\",\n\n            // the properties below are optional\n            SortOrder = 123\n        } },\n        StoredAsSubDirectories = false\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject parameters;\nObject skewedColumnValueLocationMaps;\n\nPartitionInputProperty partitionInputProperty = PartitionInputProperty.builder()\n        .values(List.of(\"values\"))\n\n        // the properties below are optional\n        .parameters(parameters)\n        .storageDescriptor(StorageDescriptorProperty.builder()\n                .bucketColumns(List.of(\"bucketColumns\"))\n                .columns(List.of(ColumnProperty.builder()\n                        .name(\"name\")\n\n                        // the properties below are optional\n                        .comment(\"comment\")\n                        .type(\"type\")\n                        .build()))\n                .compressed(false)\n                .inputFormat(\"inputFormat\")\n                .location(\"location\")\n                .numberOfBuckets(123)\n                .outputFormat(\"outputFormat\")\n                .parameters(parameters)\n                .schemaReference(SchemaReferenceProperty.builder()\n                        .schemaId(SchemaIdProperty.builder()\n                                .registryName(\"registryName\")\n                                .schemaArn(\"schemaArn\")\n                                .schemaName(\"schemaName\")\n                                .build())\n                        .schemaVersionId(\"schemaVersionId\")\n                        .schemaVersionNumber(123)\n                        .build())\n                .serdeInfo(SerdeInfoProperty.builder()\n                        .name(\"name\")\n                        .parameters(parameters)\n                        .serializationLibrary(\"serializationLibrary\")\n                        .build())\n                .skewedInfo(SkewedInfoProperty.builder()\n                        .skewedColumnNames(List.of(\"skewedColumnNames\"))\n                        .skewedColumnValueLocationMaps(skewedColumnValueLocationMaps)\n                        .skewedColumnValues(List.of(\"skewedColumnValues\"))\n                        .build())\n                .sortColumns(List.of(OrderProperty.builder()\n                        .column(\"column\")\n\n                        // the properties below are optional\n                        .sortOrder(123)\n                        .build()))\n                .storedAsSubDirectories(false)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar parameters interface{}\nvar skewedColumnValueLocationMaps interface{}\npartitionInputProperty := &partitionInputProperty{\n\tvalues: []*string{\n\t\tjsii.String(\"values\"),\n\t},\n\n\t// the properties below are optional\n\tparameters: parameters,\n\tstorageDescriptor: &storageDescriptorProperty{\n\t\tbucketColumns: []*string{\n\t\t\tjsii.String(\"bucketColumns\"),\n\t\t},\n\t\tcolumns: []interface{}{\n\t\t\t&columnProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcomment: jsii.String(\"comment\"),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\t\tcompressed: jsii.Boolean(false),\n\t\tinputFormat: jsii.String(\"inputFormat\"),\n\t\tlocation: jsii.String(\"location\"),\n\t\tnumberOfBuckets: jsii.Number(123),\n\t\toutputFormat: jsii.String(\"outputFormat\"),\n\t\tparameters: parameters,\n\t\tschemaReference: &schemaReferenceProperty{\n\t\t\tschemaId: &schemaIdProperty{\n\t\t\t\tregistryName: jsii.String(\"registryName\"),\n\t\t\t\tschemaArn: jsii.String(\"schemaArn\"),\n\t\t\t\tschemaName: jsii.String(\"schemaName\"),\n\t\t\t},\n\t\t\tschemaVersionId: jsii.String(\"schemaVersionId\"),\n\t\t\tschemaVersionNumber: jsii.Number(123),\n\t\t},\n\t\tserdeInfo: &serdeInfoProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tparameters: parameters,\n\t\t\tserializationLibrary: jsii.String(\"serializationLibrary\"),\n\t\t},\n\t\tskewedInfo: &skewedInfoProperty{\n\t\t\tskewedColumnNames: []*string{\n\t\t\t\tjsii.String(\"skewedColumnNames\"),\n\t\t\t},\n\t\t\tskewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n\t\t\tskewedColumnValues: []*string{\n\t\t\t\tjsii.String(\"skewedColumnValues\"),\n\t\t\t},\n\t\t},\n\t\tsortColumns: []interface{}{\n\t\t\t&orderProperty{\n\t\t\t\tcolumn: jsii.String(\"column\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tsortOrder: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t\tstoredAsSubDirectories: jsii.Boolean(false),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\ndeclare const skewedColumnValueLocationMaps: any;\nconst partitionInputProperty: glue.CfnPartition.PartitionInputProperty = {\n  values: ['values'],\n\n  // the properties below are optional\n  parameters: parameters,\n  storageDescriptor: {\n    bucketColumns: ['bucketColumns'],\n    columns: [{\n      name: 'name',\n\n      // the properties below are optional\n      comment: 'comment',\n      type: 'type',\n    }],\n    compressed: false,\n    inputFormat: 'inputFormat',\n    location: 'location',\n    numberOfBuckets: 123,\n    outputFormat: 'outputFormat',\n    parameters: parameters,\n    schemaReference: {\n      schemaId: {\n        registryName: 'registryName',\n        schemaArn: 'schemaArn',\n        schemaName: 'schemaName',\n      },\n      schemaVersionId: 'schemaVersionId',\n      schemaVersionNumber: 123,\n    },\n    serdeInfo: {\n      name: 'name',\n      parameters: parameters,\n      serializationLibrary: 'serializationLibrary',\n    },\n    skewedInfo: {\n      skewedColumnNames: ['skewedColumnNames'],\n      skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n      skewedColumnValues: ['skewedColumnValues'],\n    },\n    sortColumns: [{\n      column: 'column',\n\n      // the properties below are optional\n      sortOrder: 123,\n    }],\n    storedAsSubDirectories: false,\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnPartition.PartitionInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnPartition.PartitionInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\ndeclare const skewedColumnValueLocationMaps: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst partitionInputProperty: glue.CfnPartition.PartitionInputProperty = {\n  values: ['values'],\n\n  // the properties below are optional\n  parameters: parameters,\n  storageDescriptor: {\n    bucketColumns: ['bucketColumns'],\n    columns: [{\n      name: 'name',\n\n      // the properties below are optional\n      comment: 'comment',\n      type: 'type',\n    }],\n    compressed: false,\n    inputFormat: 'inputFormat',\n    location: 'location',\n    numberOfBuckets: 123,\n    outputFormat: 'outputFormat',\n    parameters: parameters,\n    schemaReference: {\n      schemaId: {\n        registryName: 'registryName',\n        schemaArn: 'schemaArn',\n        schemaName: 'schemaName',\n      },\n      schemaVersionId: 'schemaVersionId',\n      schemaVersionNumber: 123,\n    },\n    serdeInfo: {\n      name: 'name',\n      parameters: parameters,\n      serializationLibrary: 'serializationLibrary',\n    },\n    skewedInfo: {\n      skewedColumnNames: ['skewedColumnNames'],\n      skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n      skewedColumnValues: ['skewedColumnValues'],\n    },\n    sortColumns: [{\n      column: 'column',\n\n      // the properties below are optional\n      sortOrder: 123,\n    }],\n    storedAsSubDirectories: false,\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 18,
        "75": 44,
        "91": 2,
        "125": 2,
        "130": 2,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 8,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 33,
        "290": 1
      },
      "fqnsFingerprint": "1fff0347383f43e53fe49e0a40f641e0536368a60c89e8289d3543b96d965f13"
    },
    "2fdd922241359fffdad892cea85d8071b83c92e44b4c51590c1fb4f2682c69b2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nschema_id_property = glue.CfnPartition.SchemaIdProperty(\n    registry_name=\"registryName\",\n    schema_arn=\"schemaArn\",\n    schema_name=\"schemaName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nSchemaIdProperty schemaIdProperty = new SchemaIdProperty {\n    RegistryName = \"registryName\",\n    SchemaArn = \"schemaArn\",\n    SchemaName = \"schemaName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nSchemaIdProperty schemaIdProperty = SchemaIdProperty.builder()\n        .registryName(\"registryName\")\n        .schemaArn(\"schemaArn\")\n        .schemaName(\"schemaName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nschemaIdProperty := &schemaIdProperty{\n\tregistryName: jsii.String(\"registryName\"),\n\tschemaArn: jsii.String(\"schemaArn\"),\n\tschemaName: jsii.String(\"schemaName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst schemaIdProperty: glue.CfnPartition.SchemaIdProperty = {\n  registryName: 'registryName',\n  schemaArn: 'schemaArn',\n  schemaName: 'schemaName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnPartition.SchemaIdProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnPartition.SchemaIdProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst schemaIdProperty: glue.CfnPartition.SchemaIdProperty = {\n  registryName: 'registryName',\n  schemaArn: 'schemaArn',\n  schemaName: 'schemaName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "11ea1e3fe46c8cd16db4efb5a14baa8ac42cceee3db247be85f4243e355873ae"
    },
    "01dae5e70f9c2ed0b167708603c828fa59c7bf4c39b85d1dba6673830a685686": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nschema_reference_property = glue.CfnPartition.SchemaReferenceProperty(\n    schema_id=glue.CfnPartition.SchemaIdProperty(\n        registry_name=\"registryName\",\n        schema_arn=\"schemaArn\",\n        schema_name=\"schemaName\"\n    ),\n    schema_version_id=\"schemaVersionId\",\n    schema_version_number=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nSchemaReferenceProperty schemaReferenceProperty = new SchemaReferenceProperty {\n    SchemaId = new SchemaIdProperty {\n        RegistryName = \"registryName\",\n        SchemaArn = \"schemaArn\",\n        SchemaName = \"schemaName\"\n    },\n    SchemaVersionId = \"schemaVersionId\",\n    SchemaVersionNumber = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nSchemaReferenceProperty schemaReferenceProperty = SchemaReferenceProperty.builder()\n        .schemaId(SchemaIdProperty.builder()\n                .registryName(\"registryName\")\n                .schemaArn(\"schemaArn\")\n                .schemaName(\"schemaName\")\n                .build())\n        .schemaVersionId(\"schemaVersionId\")\n        .schemaVersionNumber(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nschemaReferenceProperty := &schemaReferenceProperty{\n\tschemaId: &schemaIdProperty{\n\t\tregistryName: jsii.String(\"registryName\"),\n\t\tschemaArn: jsii.String(\"schemaArn\"),\n\t\tschemaName: jsii.String(\"schemaName\"),\n\t},\n\tschemaVersionId: jsii.String(\"schemaVersionId\"),\n\tschemaVersionNumber: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst schemaReferenceProperty: glue.CfnPartition.SchemaReferenceProperty = {\n  schemaId: {\n    registryName: 'registryName',\n    schemaArn: 'schemaArn',\n    schemaName: 'schemaName',\n  },\n  schemaVersionId: 'schemaVersionId',\n  schemaVersionNumber: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnPartition.SchemaReferenceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnPartition.SchemaReferenceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst schemaReferenceProperty: glue.CfnPartition.SchemaReferenceProperty = {\n  schemaId: {\n    registryName: 'registryName',\n    schemaArn: 'schemaArn',\n    schemaName: 'schemaName',\n  },\n  schemaVersionId: 'schemaVersionId',\n  schemaVersionNumber: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 5,
        "75": 11,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "3a905d23b8a8c7f923ab8464728d3e5dfd381655b970b2898557913b3b07d52d"
    },
    "df7f8bc699c5a683d3a8fb5b73b994dab70ec5b883809a49165c52f71b972c76": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# parameters: Any\n\nserde_info_property = glue.CfnPartition.SerdeInfoProperty(\n    name=\"name\",\n    parameters=parameters,\n    serialization_library=\"serializationLibrary\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar parameters;\n\nSerdeInfoProperty serdeInfoProperty = new SerdeInfoProperty {\n    Name = \"name\",\n    Parameters = parameters,\n    SerializationLibrary = \"serializationLibrary\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject parameters;\n\nSerdeInfoProperty serdeInfoProperty = SerdeInfoProperty.builder()\n        .name(\"name\")\n        .parameters(parameters)\n        .serializationLibrary(\"serializationLibrary\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar parameters interface{}\nserdeInfoProperty := &serdeInfoProperty{\n\tname: jsii.String(\"name\"),\n\tparameters: parameters,\n\tserializationLibrary: jsii.String(\"serializationLibrary\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\nconst serdeInfoProperty: glue.CfnPartition.SerdeInfoProperty = {\n  name: 'name',\n  parameters: parameters,\n  serializationLibrary: 'serializationLibrary',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnPartition.SerdeInfoProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnPartition.SerdeInfoProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst serdeInfoProperty: glue.CfnPartition.SerdeInfoProperty = {\n  name: 'name',\n  parameters: parameters,\n  serializationLibrary: 'serializationLibrary',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "1e35fdd22ef0d798587a37b63e2ce4519cbfb3b36b089619dcf88e2621894d45"
    },
    "92a368e2c34ba6a2cd727d83b9bfc6c19e3628c4fe034d88d16d14624feb473d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# skewed_column_value_location_maps: Any\n\nskewed_info_property = glue.CfnPartition.SkewedInfoProperty(\n    skewed_column_names=[\"skewedColumnNames\"],\n    skewed_column_value_location_maps=skewed_column_value_location_maps,\n    skewed_column_values=[\"skewedColumnValues\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar skewedColumnValueLocationMaps;\n\nSkewedInfoProperty skewedInfoProperty = new SkewedInfoProperty {\n    SkewedColumnNames = new [] { \"skewedColumnNames\" },\n    SkewedColumnValueLocationMaps = skewedColumnValueLocationMaps,\n    SkewedColumnValues = new [] { \"skewedColumnValues\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject skewedColumnValueLocationMaps;\n\nSkewedInfoProperty skewedInfoProperty = SkewedInfoProperty.builder()\n        .skewedColumnNames(List.of(\"skewedColumnNames\"))\n        .skewedColumnValueLocationMaps(skewedColumnValueLocationMaps)\n        .skewedColumnValues(List.of(\"skewedColumnValues\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar skewedColumnValueLocationMaps interface{}\nskewedInfoProperty := &skewedInfoProperty{\n\tskewedColumnNames: []*string{\n\t\tjsii.String(\"skewedColumnNames\"),\n\t},\n\tskewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n\tskewedColumnValues: []*string{\n\t\tjsii.String(\"skewedColumnValues\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const skewedColumnValueLocationMaps: any;\nconst skewedInfoProperty: glue.CfnPartition.SkewedInfoProperty = {\n  skewedColumnNames: ['skewedColumnNames'],\n  skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n  skewedColumnValues: ['skewedColumnValues'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnPartition.SkewedInfoProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnPartition.SkewedInfoProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const skewedColumnValueLocationMaps: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst skewedInfoProperty: glue.CfnPartition.SkewedInfoProperty = {\n  skewedColumnNames: ['skewedColumnNames'],\n  skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n  skewedColumnValues: ['skewedColumnValues'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "87d8d4c4cf6f438f152008ab679328ad6b0c157213b390395d9437f08ad3236a"
    },
    "50c0fa5f9ea301786526cfa0f366c00c9b2b82faaaf32e040bafb50d31b53790": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# parameters: Any\n# skewed_column_value_location_maps: Any\n\nstorage_descriptor_property = glue.CfnPartition.StorageDescriptorProperty(\n    bucket_columns=[\"bucketColumns\"],\n    columns=[glue.CfnPartition.ColumnProperty(\n        name=\"name\",\n\n        # the properties below are optional\n        comment=\"comment\",\n        type=\"type\"\n    )],\n    compressed=False,\n    input_format=\"inputFormat\",\n    location=\"location\",\n    number_of_buckets=123,\n    output_format=\"outputFormat\",\n    parameters=parameters,\n    schema_reference=glue.CfnPartition.SchemaReferenceProperty(\n        schema_id=glue.CfnPartition.SchemaIdProperty(\n            registry_name=\"registryName\",\n            schema_arn=\"schemaArn\",\n            schema_name=\"schemaName\"\n        ),\n        schema_version_id=\"schemaVersionId\",\n        schema_version_number=123\n    ),\n    serde_info=glue.CfnPartition.SerdeInfoProperty(\n        name=\"name\",\n        parameters=parameters,\n        serialization_library=\"serializationLibrary\"\n    ),\n    skewed_info=glue.CfnPartition.SkewedInfoProperty(\n        skewed_column_names=[\"skewedColumnNames\"],\n        skewed_column_value_location_maps=skewed_column_value_location_maps,\n        skewed_column_values=[\"skewedColumnValues\"]\n    ),\n    sort_columns=[glue.CfnPartition.OrderProperty(\n        column=\"column\",\n\n        # the properties below are optional\n        sort_order=123\n    )],\n    stored_as_sub_directories=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar parameters;\nvar skewedColumnValueLocationMaps;\n\nStorageDescriptorProperty storageDescriptorProperty = new StorageDescriptorProperty {\n    BucketColumns = new [] { \"bucketColumns\" },\n    Columns = new [] { new ColumnProperty {\n        Name = \"name\",\n\n        // the properties below are optional\n        Comment = \"comment\",\n        Type = \"type\"\n    } },\n    Compressed = false,\n    InputFormat = \"inputFormat\",\n    Location = \"location\",\n    NumberOfBuckets = 123,\n    OutputFormat = \"outputFormat\",\n    Parameters = parameters,\n    SchemaReference = new SchemaReferenceProperty {\n        SchemaId = new SchemaIdProperty {\n            RegistryName = \"registryName\",\n            SchemaArn = \"schemaArn\",\n            SchemaName = \"schemaName\"\n        },\n        SchemaVersionId = \"schemaVersionId\",\n        SchemaVersionNumber = 123\n    },\n    SerdeInfo = new SerdeInfoProperty {\n        Name = \"name\",\n        Parameters = parameters,\n        SerializationLibrary = \"serializationLibrary\"\n    },\n    SkewedInfo = new SkewedInfoProperty {\n        SkewedColumnNames = new [] { \"skewedColumnNames\" },\n        SkewedColumnValueLocationMaps = skewedColumnValueLocationMaps,\n        SkewedColumnValues = new [] { \"skewedColumnValues\" }\n    },\n    SortColumns = new [] { new OrderProperty {\n        Column = \"column\",\n\n        // the properties below are optional\n        SortOrder = 123\n    } },\n    StoredAsSubDirectories = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject parameters;\nObject skewedColumnValueLocationMaps;\n\nStorageDescriptorProperty storageDescriptorProperty = StorageDescriptorProperty.builder()\n        .bucketColumns(List.of(\"bucketColumns\"))\n        .columns(List.of(ColumnProperty.builder()\n                .name(\"name\")\n\n                // the properties below are optional\n                .comment(\"comment\")\n                .type(\"type\")\n                .build()))\n        .compressed(false)\n        .inputFormat(\"inputFormat\")\n        .location(\"location\")\n        .numberOfBuckets(123)\n        .outputFormat(\"outputFormat\")\n        .parameters(parameters)\n        .schemaReference(SchemaReferenceProperty.builder()\n                .schemaId(SchemaIdProperty.builder()\n                        .registryName(\"registryName\")\n                        .schemaArn(\"schemaArn\")\n                        .schemaName(\"schemaName\")\n                        .build())\n                .schemaVersionId(\"schemaVersionId\")\n                .schemaVersionNumber(123)\n                .build())\n        .serdeInfo(SerdeInfoProperty.builder()\n                .name(\"name\")\n                .parameters(parameters)\n                .serializationLibrary(\"serializationLibrary\")\n                .build())\n        .skewedInfo(SkewedInfoProperty.builder()\n                .skewedColumnNames(List.of(\"skewedColumnNames\"))\n                .skewedColumnValueLocationMaps(skewedColumnValueLocationMaps)\n                .skewedColumnValues(List.of(\"skewedColumnValues\"))\n                .build())\n        .sortColumns(List.of(OrderProperty.builder()\n                .column(\"column\")\n\n                // the properties below are optional\n                .sortOrder(123)\n                .build()))\n        .storedAsSubDirectories(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar parameters interface{}\nvar skewedColumnValueLocationMaps interface{}\nstorageDescriptorProperty := &storageDescriptorProperty{\n\tbucketColumns: []*string{\n\t\tjsii.String(\"bucketColumns\"),\n\t},\n\tcolumns: []interface{}{\n\t\t&columnProperty{\n\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t// the properties below are optional\n\t\t\tcomment: jsii.String(\"comment\"),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n\tcompressed: jsii.Boolean(false),\n\tinputFormat: jsii.String(\"inputFormat\"),\n\tlocation: jsii.String(\"location\"),\n\tnumberOfBuckets: jsii.Number(123),\n\toutputFormat: jsii.String(\"outputFormat\"),\n\tparameters: parameters,\n\tschemaReference: &schemaReferenceProperty{\n\t\tschemaId: &schemaIdProperty{\n\t\t\tregistryName: jsii.String(\"registryName\"),\n\t\t\tschemaArn: jsii.String(\"schemaArn\"),\n\t\t\tschemaName: jsii.String(\"schemaName\"),\n\t\t},\n\t\tschemaVersionId: jsii.String(\"schemaVersionId\"),\n\t\tschemaVersionNumber: jsii.Number(123),\n\t},\n\tserdeInfo: &serdeInfoProperty{\n\t\tname: jsii.String(\"name\"),\n\t\tparameters: parameters,\n\t\tserializationLibrary: jsii.String(\"serializationLibrary\"),\n\t},\n\tskewedInfo: &skewedInfoProperty{\n\t\tskewedColumnNames: []*string{\n\t\t\tjsii.String(\"skewedColumnNames\"),\n\t\t},\n\t\tskewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n\t\tskewedColumnValues: []*string{\n\t\t\tjsii.String(\"skewedColumnValues\"),\n\t\t},\n\t},\n\tsortColumns: []interface{}{\n\t\t&orderProperty{\n\t\t\tcolumn: jsii.String(\"column\"),\n\n\t\t\t// the properties below are optional\n\t\t\tsortOrder: jsii.Number(123),\n\t\t},\n\t},\n\tstoredAsSubDirectories: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\ndeclare const skewedColumnValueLocationMaps: any;\nconst storageDescriptorProperty: glue.CfnPartition.StorageDescriptorProperty = {\n  bucketColumns: ['bucketColumns'],\n  columns: [{\n    name: 'name',\n\n    // the properties below are optional\n    comment: 'comment',\n    type: 'type',\n  }],\n  compressed: false,\n  inputFormat: 'inputFormat',\n  location: 'location',\n  numberOfBuckets: 123,\n  outputFormat: 'outputFormat',\n  parameters: parameters,\n  schemaReference: {\n    schemaId: {\n      registryName: 'registryName',\n      schemaArn: 'schemaArn',\n      schemaName: 'schemaName',\n    },\n    schemaVersionId: 'schemaVersionId',\n    schemaVersionNumber: 123,\n  },\n  serdeInfo: {\n    name: 'name',\n    parameters: parameters,\n    serializationLibrary: 'serializationLibrary',\n  },\n  skewedInfo: {\n    skewedColumnNames: ['skewedColumnNames'],\n    skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n    skewedColumnValues: ['skewedColumnValues'],\n  },\n  sortColumns: [{\n    column: 'column',\n\n    // the properties below are optional\n    sortOrder: 123,\n  }],\n  storedAsSubDirectories: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnPartition.StorageDescriptorProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnPartition.StorageDescriptorProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\ndeclare const skewedColumnValueLocationMaps: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst storageDescriptorProperty: glue.CfnPartition.StorageDescriptorProperty = {\n  bucketColumns: ['bucketColumns'],\n  columns: [{\n    name: 'name',\n\n    // the properties below are optional\n    comment: 'comment',\n    type: 'type',\n  }],\n  compressed: false,\n  inputFormat: 'inputFormat',\n  location: 'location',\n  numberOfBuckets: 123,\n  outputFormat: 'outputFormat',\n  parameters: parameters,\n  schemaReference: {\n    schemaId: {\n      registryName: 'registryName',\n      schemaArn: 'schemaArn',\n      schemaName: 'schemaName',\n    },\n    schemaVersionId: 'schemaVersionId',\n    schemaVersionNumber: 123,\n  },\n  serdeInfo: {\n    name: 'name',\n    parameters: parameters,\n    serializationLibrary: 'serializationLibrary',\n  },\n  skewedInfo: {\n    skewedColumnNames: ['skewedColumnNames'],\n    skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n    skewedColumnValues: ['skewedColumnValues'],\n  },\n  sortColumns: [{\n    column: 'column',\n\n    // the properties below are optional\n    sortOrder: 123,\n  }],\n  storedAsSubDirectories: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 17,
        "75": 40,
        "91": 2,
        "125": 2,
        "130": 2,
        "153": 2,
        "169": 1,
        "192": 5,
        "193": 7,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 30,
        "290": 1
      },
      "fqnsFingerprint": "6c5ca827105c958a51b5e587dab1d5b34a398f0a9bbc2a19cea705e7227f608b"
    },
    "723a9b1fde41ec799b3a620d0429af141cfe50c6de937fa05d7c12d19acf9c4f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# parameters: Any\n# skewed_column_value_location_maps: Any\n\ncfn_partition_props = glue.CfnPartitionProps(\n    catalog_id=\"catalogId\",\n    database_name=\"databaseName\",\n    partition_input=glue.CfnPartition.PartitionInputProperty(\n        values=[\"values\"],\n\n        # the properties below are optional\n        parameters=parameters,\n        storage_descriptor=glue.CfnPartition.StorageDescriptorProperty(\n            bucket_columns=[\"bucketColumns\"],\n            columns=[glue.CfnPartition.ColumnProperty(\n                name=\"name\",\n\n                # the properties below are optional\n                comment=\"comment\",\n                type=\"type\"\n            )],\n            compressed=False,\n            input_format=\"inputFormat\",\n            location=\"location\",\n            number_of_buckets=123,\n            output_format=\"outputFormat\",\n            parameters=parameters,\n            schema_reference=glue.CfnPartition.SchemaReferenceProperty(\n                schema_id=glue.CfnPartition.SchemaIdProperty(\n                    registry_name=\"registryName\",\n                    schema_arn=\"schemaArn\",\n                    schema_name=\"schemaName\"\n                ),\n                schema_version_id=\"schemaVersionId\",\n                schema_version_number=123\n            ),\n            serde_info=glue.CfnPartition.SerdeInfoProperty(\n                name=\"name\",\n                parameters=parameters,\n                serialization_library=\"serializationLibrary\"\n            ),\n            skewed_info=glue.CfnPartition.SkewedInfoProperty(\n                skewed_column_names=[\"skewedColumnNames\"],\n                skewed_column_value_location_maps=skewed_column_value_location_maps,\n                skewed_column_values=[\"skewedColumnValues\"]\n            ),\n            sort_columns=[glue.CfnPartition.OrderProperty(\n                column=\"column\",\n\n                # the properties below are optional\n                sort_order=123\n            )],\n            stored_as_sub_directories=False\n        )\n    ),\n    table_name=\"tableName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar parameters;\nvar skewedColumnValueLocationMaps;\n\nCfnPartitionProps cfnPartitionProps = new CfnPartitionProps {\n    CatalogId = \"catalogId\",\n    DatabaseName = \"databaseName\",\n    PartitionInput = new PartitionInputProperty {\n        Values = new [] { \"values\" },\n\n        // the properties below are optional\n        Parameters = parameters,\n        StorageDescriptor = new StorageDescriptorProperty {\n            BucketColumns = new [] { \"bucketColumns\" },\n            Columns = new [] { new ColumnProperty {\n                Name = \"name\",\n\n                // the properties below are optional\n                Comment = \"comment\",\n                Type = \"type\"\n            } },\n            Compressed = false,\n            InputFormat = \"inputFormat\",\n            Location = \"location\",\n            NumberOfBuckets = 123,\n            OutputFormat = \"outputFormat\",\n            Parameters = parameters,\n            SchemaReference = new SchemaReferenceProperty {\n                SchemaId = new SchemaIdProperty {\n                    RegistryName = \"registryName\",\n                    SchemaArn = \"schemaArn\",\n                    SchemaName = \"schemaName\"\n                },\n                SchemaVersionId = \"schemaVersionId\",\n                SchemaVersionNumber = 123\n            },\n            SerdeInfo = new SerdeInfoProperty {\n                Name = \"name\",\n                Parameters = parameters,\n                SerializationLibrary = \"serializationLibrary\"\n            },\n            SkewedInfo = new SkewedInfoProperty {\n                SkewedColumnNames = new [] { \"skewedColumnNames\" },\n                SkewedColumnValueLocationMaps = skewedColumnValueLocationMaps,\n                SkewedColumnValues = new [] { \"skewedColumnValues\" }\n            },\n            SortColumns = new [] { new OrderProperty {\n                Column = \"column\",\n\n                // the properties below are optional\n                SortOrder = 123\n            } },\n            StoredAsSubDirectories = false\n        }\n    },\n    TableName = \"tableName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject parameters;\nObject skewedColumnValueLocationMaps;\n\nCfnPartitionProps cfnPartitionProps = CfnPartitionProps.builder()\n        .catalogId(\"catalogId\")\n        .databaseName(\"databaseName\")\n        .partitionInput(PartitionInputProperty.builder()\n                .values(List.of(\"values\"))\n\n                // the properties below are optional\n                .parameters(parameters)\n                .storageDescriptor(StorageDescriptorProperty.builder()\n                        .bucketColumns(List.of(\"bucketColumns\"))\n                        .columns(List.of(ColumnProperty.builder()\n                                .name(\"name\")\n\n                                // the properties below are optional\n                                .comment(\"comment\")\n                                .type(\"type\")\n                                .build()))\n                        .compressed(false)\n                        .inputFormat(\"inputFormat\")\n                        .location(\"location\")\n                        .numberOfBuckets(123)\n                        .outputFormat(\"outputFormat\")\n                        .parameters(parameters)\n                        .schemaReference(SchemaReferenceProperty.builder()\n                                .schemaId(SchemaIdProperty.builder()\n                                        .registryName(\"registryName\")\n                                        .schemaArn(\"schemaArn\")\n                                        .schemaName(\"schemaName\")\n                                        .build())\n                                .schemaVersionId(\"schemaVersionId\")\n                                .schemaVersionNumber(123)\n                                .build())\n                        .serdeInfo(SerdeInfoProperty.builder()\n                                .name(\"name\")\n                                .parameters(parameters)\n                                .serializationLibrary(\"serializationLibrary\")\n                                .build())\n                        .skewedInfo(SkewedInfoProperty.builder()\n                                .skewedColumnNames(List.of(\"skewedColumnNames\"))\n                                .skewedColumnValueLocationMaps(skewedColumnValueLocationMaps)\n                                .skewedColumnValues(List.of(\"skewedColumnValues\"))\n                                .build())\n                        .sortColumns(List.of(OrderProperty.builder()\n                                .column(\"column\")\n\n                                // the properties below are optional\n                                .sortOrder(123)\n                                .build()))\n                        .storedAsSubDirectories(false)\n                        .build())\n                .build())\n        .tableName(\"tableName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar parameters interface{}\nvar skewedColumnValueLocationMaps interface{}\ncfnPartitionProps := &cfnPartitionProps{\n\tcatalogId: jsii.String(\"catalogId\"),\n\tdatabaseName: jsii.String(\"databaseName\"),\n\tpartitionInput: &partitionInputProperty{\n\t\tvalues: []*string{\n\t\t\tjsii.String(\"values\"),\n\t\t},\n\n\t\t// the properties below are optional\n\t\tparameters: parameters,\n\t\tstorageDescriptor: &storageDescriptorProperty{\n\t\t\tbucketColumns: []*string{\n\t\t\t\tjsii.String(\"bucketColumns\"),\n\t\t\t},\n\t\t\tcolumns: []interface{}{\n\t\t\t\t&columnProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tcomment: jsii.String(\"comment\"),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tcompressed: jsii.Boolean(false),\n\t\t\tinputFormat: jsii.String(\"inputFormat\"),\n\t\t\tlocation: jsii.String(\"location\"),\n\t\t\tnumberOfBuckets: jsii.Number(123),\n\t\t\toutputFormat: jsii.String(\"outputFormat\"),\n\t\t\tparameters: parameters,\n\t\t\tschemaReference: &schemaReferenceProperty{\n\t\t\t\tschemaId: &schemaIdProperty{\n\t\t\t\t\tregistryName: jsii.String(\"registryName\"),\n\t\t\t\t\tschemaArn: jsii.String(\"schemaArn\"),\n\t\t\t\t\tschemaName: jsii.String(\"schemaName\"),\n\t\t\t\t},\n\t\t\t\tschemaVersionId: jsii.String(\"schemaVersionId\"),\n\t\t\t\tschemaVersionNumber: jsii.Number(123),\n\t\t\t},\n\t\t\tserdeInfo: &serdeInfoProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tparameters: parameters,\n\t\t\t\tserializationLibrary: jsii.String(\"serializationLibrary\"),\n\t\t\t},\n\t\t\tskewedInfo: &skewedInfoProperty{\n\t\t\t\tskewedColumnNames: []*string{\n\t\t\t\t\tjsii.String(\"skewedColumnNames\"),\n\t\t\t\t},\n\t\t\t\tskewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n\t\t\t\tskewedColumnValues: []*string{\n\t\t\t\t\tjsii.String(\"skewedColumnValues\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tsortColumns: []interface{}{\n\t\t\t\t&orderProperty{\n\t\t\t\t\tcolumn: jsii.String(\"column\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tsortOrder: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t\tstoredAsSubDirectories: jsii.Boolean(false),\n\t\t},\n\t},\n\ttableName: jsii.String(\"tableName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\ndeclare const skewedColumnValueLocationMaps: any;\nconst cfnPartitionProps: glue.CfnPartitionProps = {\n  catalogId: 'catalogId',\n  databaseName: 'databaseName',\n  partitionInput: {\n    values: ['values'],\n\n    // the properties below are optional\n    parameters: parameters,\n    storageDescriptor: {\n      bucketColumns: ['bucketColumns'],\n      columns: [{\n        name: 'name',\n\n        // the properties below are optional\n        comment: 'comment',\n        type: 'type',\n      }],\n      compressed: false,\n      inputFormat: 'inputFormat',\n      location: 'location',\n      numberOfBuckets: 123,\n      outputFormat: 'outputFormat',\n      parameters: parameters,\n      schemaReference: {\n        schemaId: {\n          registryName: 'registryName',\n          schemaArn: 'schemaArn',\n          schemaName: 'schemaName',\n        },\n        schemaVersionId: 'schemaVersionId',\n        schemaVersionNumber: 123,\n      },\n      serdeInfo: {\n        name: 'name',\n        parameters: parameters,\n        serializationLibrary: 'serializationLibrary',\n      },\n      skewedInfo: {\n        skewedColumnNames: ['skewedColumnNames'],\n        skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n        skewedColumnValues: ['skewedColumnValues'],\n      },\n      sortColumns: [{\n        column: 'column',\n\n        // the properties below are optional\n        sortOrder: 123,\n      }],\n      storedAsSubDirectories: false,\n    },\n  },\n  tableName: 'tableName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnPartitionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnPartitionProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\ndeclare const skewedColumnValueLocationMaps: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnPartitionProps: glue.CfnPartitionProps = {\n  catalogId: 'catalogId',\n  databaseName: 'databaseName',\n  partitionInput: {\n    values: ['values'],\n\n    // the properties below are optional\n    parameters: parameters,\n    storageDescriptor: {\n      bucketColumns: ['bucketColumns'],\n      columns: [{\n        name: 'name',\n\n        // the properties below are optional\n        comment: 'comment',\n        type: 'type',\n      }],\n      compressed: false,\n      inputFormat: 'inputFormat',\n      location: 'location',\n      numberOfBuckets: 123,\n      outputFormat: 'outputFormat',\n      parameters: parameters,\n      schemaReference: {\n        schemaId: {\n          registryName: 'registryName',\n          schemaArn: 'schemaArn',\n          schemaName: 'schemaName',\n        },\n        schemaVersionId: 'schemaVersionId',\n        schemaVersionNumber: 123,\n      },\n      serdeInfo: {\n        name: 'name',\n        parameters: parameters,\n        serializationLibrary: 'serializationLibrary',\n      },\n      skewedInfo: {\n        skewedColumnNames: ['skewedColumnNames'],\n        skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n        skewedColumnValues: ['skewedColumnValues'],\n      },\n      sortColumns: [{\n        column: 'column',\n\n        // the properties below are optional\n        sortOrder: 123,\n      }],\n      storedAsSubDirectories: false,\n    },\n  },\n  tableName: 'tableName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 21,
        "75": 47,
        "91": 2,
        "125": 2,
        "130": 2,
        "153": 1,
        "169": 1,
        "192": 6,
        "193": 9,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 37,
        "290": 1
      },
      "fqnsFingerprint": "a467427c7286d4c8989408821e9339c704f9cd053514d92f3fe6886077986957"
    },
    "a3f6d976584ead08409fc7a986de9f597e93aa86eaaec08146e580d101eba606": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncfn_registry = glue.CfnRegistry(self, \"MyCfnRegistry\",\n    name=\"name\",\n\n    # the properties below are optional\n    description=\"description\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCfnRegistry cfnRegistry = new CfnRegistry(this, \"MyCfnRegistry\", new CfnRegistryProps {\n    Name = \"name\",\n\n    // the properties below are optional\n    Description = \"description\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCfnRegistry cfnRegistry = CfnRegistry.Builder.create(this, \"MyCfnRegistry\")\n        .name(\"name\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncfnRegistry := glue.NewCfnRegistry(this, jsii.String(\"MyCfnRegistry\"), &cfnRegistryProps{\n\tname: jsii.String(\"name\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst cfnRegistry = new glue.CfnRegistry(this, 'MyCfnRegistry', {\n  name: 'name',\n\n  // the properties below are optional\n  description: 'description',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnRegistry"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnRegistry",
        "@aws-cdk/aws-glue.CfnRegistryProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRegistry = new glue.CfnRegistry(this, 'MyCfnRegistry', {\n  name: 'name',\n\n  // the properties below are optional\n  description: 'description',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 9,
        "104": 1,
        "192": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "d68ae87d7e7f62704f2e1a931663dc80313704352c3ed107aa560400929491c0"
    },
    "b3895f7c0a3c87e8bd4d092ed74bad643fa61e74281af43e29e2be0c2f91168d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncfn_registry_props = glue.CfnRegistryProps(\n    name=\"name\",\n\n    # the properties below are optional\n    description=\"description\",\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCfnRegistryProps cfnRegistryProps = new CfnRegistryProps {\n    Name = \"name\",\n\n    // the properties below are optional\n    Description = \"description\",\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCfnRegistryProps cfnRegistryProps = CfnRegistryProps.builder()\n        .name(\"name\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncfnRegistryProps := &cfnRegistryProps{\n\tname: jsii.String(\"name\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst cfnRegistryProps: glue.CfnRegistryProps = {\n  name: 'name',\n\n  // the properties below are optional\n  description: 'description',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnRegistryProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnRegistryProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnRegistryProps: glue.CfnRegistryProps = {\n  name: 'name',\n\n  // the properties below are optional\n  description: 'description',\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "afd838c52f526cdf0c8de6b433c2501746c8ea22ed985ee38633044f839ca61f"
    },
    "b19ef7796c41aec86cd9072c30fe0d0aef11c82504885238928ad0fb5dc05f52": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncfn_schema = glue.CfnSchema(self, \"MyCfnSchema\",\n    compatibility=\"compatibility\",\n    data_format=\"dataFormat\",\n    name=\"name\",\n    schema_definition=\"schemaDefinition\",\n\n    # the properties below are optional\n    checkpoint_version=glue.CfnSchema.SchemaVersionProperty(\n        is_latest=False,\n        version_number=123\n    ),\n    description=\"description\",\n    registry=glue.CfnSchema.RegistryProperty(\n        arn=\"arn\",\n        name=\"name\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCfnSchema cfnSchema = new CfnSchema(this, \"MyCfnSchema\", new CfnSchemaProps {\n    Compatibility = \"compatibility\",\n    DataFormat = \"dataFormat\",\n    Name = \"name\",\n    SchemaDefinition = \"schemaDefinition\",\n\n    // the properties below are optional\n    CheckpointVersion = new SchemaVersionProperty {\n        IsLatest = false,\n        VersionNumber = 123\n    },\n    Description = \"description\",\n    Registry = new RegistryProperty {\n        Arn = \"arn\",\n        Name = \"name\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCfnSchema cfnSchema = CfnSchema.Builder.create(this, \"MyCfnSchema\")\n        .compatibility(\"compatibility\")\n        .dataFormat(\"dataFormat\")\n        .name(\"name\")\n        .schemaDefinition(\"schemaDefinition\")\n\n        // the properties below are optional\n        .checkpointVersion(SchemaVersionProperty.builder()\n                .isLatest(false)\n                .versionNumber(123)\n                .build())\n        .description(\"description\")\n        .registry(RegistryProperty.builder()\n                .arn(\"arn\")\n                .name(\"name\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncfnSchema := glue.NewCfnSchema(this, jsii.String(\"MyCfnSchema\"), &cfnSchemaProps{\n\tcompatibility: jsii.String(\"compatibility\"),\n\tdataFormat: jsii.String(\"dataFormat\"),\n\tname: jsii.String(\"name\"),\n\tschemaDefinition: jsii.String(\"schemaDefinition\"),\n\n\t// the properties below are optional\n\tcheckpointVersion: &schemaVersionProperty{\n\t\tisLatest: jsii.Boolean(false),\n\t\tversionNumber: jsii.Number(123),\n\t},\n\tdescription: jsii.String(\"description\"),\n\tregistry: &registryProperty{\n\t\tarn: jsii.String(\"arn\"),\n\t\tname: jsii.String(\"name\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst cfnSchema = new glue.CfnSchema(this, 'MyCfnSchema', {\n  compatibility: 'compatibility',\n  dataFormat: 'dataFormat',\n  name: 'name',\n  schemaDefinition: 'schemaDefinition',\n\n  // the properties below are optional\n  checkpointVersion: {\n    isLatest: false,\n    versionNumber: 123,\n  },\n  description: 'description',\n  registry: {\n    arn: 'arn',\n    name: 'name',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnSchema"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnSchema",
        "@aws-cdk/aws-glue.CfnSchemaProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSchema = new glue.CfnSchema(this, 'MyCfnSchema', {\n  compatibility: 'compatibility',\n  dataFormat: 'dataFormat',\n  name: 'name',\n  schemaDefinition: 'schemaDefinition',\n\n  // the properties below are optional\n  checkpointVersion: {\n    isLatest: false,\n    versionNumber: 123,\n  },\n  description: 'description',\n  registry: {\n    arn: 'arn',\n    name: 'name',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 11,
        "75": 18,
        "91": 1,
        "104": 1,
        "192": 1,
        "193": 4,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 14,
        "290": 1
      },
      "fqnsFingerprint": "53167ce34e6823dfe631fdab0075f6cf15a023faadc45b8a6b2d700e8afe864c"
    },
    "e3ea70afa48a11ffa3cb5be8afc6bd8a8e873443424382b297bd156ab4d54130": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nregistry_property = glue.CfnSchema.RegistryProperty(\n    arn=\"arn\",\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nRegistryProperty registryProperty = new RegistryProperty {\n    Arn = \"arn\",\n    Name = \"name\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nRegistryProperty registryProperty = RegistryProperty.builder()\n        .arn(\"arn\")\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nregistryProperty := &registryProperty{\n\tarn: jsii.String(\"arn\"),\n\tname: jsii.String(\"name\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst registryProperty: glue.CfnSchema.RegistryProperty = {\n  arn: 'arn',\n  name: 'name',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnSchema.RegistryProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnSchema.RegistryProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst registryProperty: glue.CfnSchema.RegistryProperty = {\n  arn: 'arn',\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "b089576a17e7018836c7fd1a855ad0d0057ae299e71f98511538514cfbac82a8"
    },
    "f33526610830cd5e1fed261e670fb63c8527624ec59ab83b4892bc81645e0ee7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nschema_version_property = glue.CfnSchema.SchemaVersionProperty(\n    is_latest=False,\n    version_number=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nSchemaVersionProperty schemaVersionProperty = new SchemaVersionProperty {\n    IsLatest = false,\n    VersionNumber = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nSchemaVersionProperty schemaVersionProperty = SchemaVersionProperty.builder()\n        .isLatest(false)\n        .versionNumber(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nschemaVersionProperty := &schemaVersionProperty{\n\tisLatest: jsii.Boolean(false),\n\tversionNumber: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst schemaVersionProperty: glue.CfnSchema.SchemaVersionProperty = {\n  isLatest: false,\n  versionNumber: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnSchema.SchemaVersionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnSchema.SchemaVersionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst schemaVersionProperty: glue.CfnSchema.SchemaVersionProperty = {\n  isLatest: false,\n  versionNumber: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 7,
        "91": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "2ac564e79c2980fc067c551c269540618afc81a8b277aabea9e55bcc03ed7738"
    },
    "d12567b9fb8b0723a777a7c50b971a3d12f15c88c34ea47249f44e6b927bb417": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncfn_schema_props = glue.CfnSchemaProps(\n    compatibility=\"compatibility\",\n    data_format=\"dataFormat\",\n    name=\"name\",\n    schema_definition=\"schemaDefinition\",\n\n    # the properties below are optional\n    checkpoint_version=glue.CfnSchema.SchemaVersionProperty(\n        is_latest=False,\n        version_number=123\n    ),\n    description=\"description\",\n    registry=glue.CfnSchema.RegistryProperty(\n        arn=\"arn\",\n        name=\"name\"\n    ),\n    tags=[CfnTag(\n        key=\"key\",\n        value=\"value\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCfnSchemaProps cfnSchemaProps = new CfnSchemaProps {\n    Compatibility = \"compatibility\",\n    DataFormat = \"dataFormat\",\n    Name = \"name\",\n    SchemaDefinition = \"schemaDefinition\",\n\n    // the properties below are optional\n    CheckpointVersion = new SchemaVersionProperty {\n        IsLatest = false,\n        VersionNumber = 123\n    },\n    Description = \"description\",\n    Registry = new RegistryProperty {\n        Arn = \"arn\",\n        Name = \"name\"\n    },\n    Tags = new [] { new CfnTag {\n        Key = \"key\",\n        Value = \"value\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCfnSchemaProps cfnSchemaProps = CfnSchemaProps.builder()\n        .compatibility(\"compatibility\")\n        .dataFormat(\"dataFormat\")\n        .name(\"name\")\n        .schemaDefinition(\"schemaDefinition\")\n\n        // the properties below are optional\n        .checkpointVersion(SchemaVersionProperty.builder()\n                .isLatest(false)\n                .versionNumber(123)\n                .build())\n        .description(\"description\")\n        .registry(RegistryProperty.builder()\n                .arn(\"arn\")\n                .name(\"name\")\n                .build())\n        .tags(List.of(CfnTag.builder()\n                .key(\"key\")\n                .value(\"value\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncfnSchemaProps := &cfnSchemaProps{\n\tcompatibility: jsii.String(\"compatibility\"),\n\tdataFormat: jsii.String(\"dataFormat\"),\n\tname: jsii.String(\"name\"),\n\tschemaDefinition: jsii.String(\"schemaDefinition\"),\n\n\t// the properties below are optional\n\tcheckpointVersion: &schemaVersionProperty{\n\t\tisLatest: jsii.Boolean(false),\n\t\tversionNumber: jsii.Number(123),\n\t},\n\tdescription: jsii.String(\"description\"),\n\tregistry: &registryProperty{\n\t\tarn: jsii.String(\"arn\"),\n\t\tname: jsii.String(\"name\"),\n\t},\n\ttags: []cfnTag{\n\t\t&cfnTag{\n\t\t\tkey: jsii.String(\"key\"),\n\t\t\tvalue: jsii.String(\"value\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst cfnSchemaProps: glue.CfnSchemaProps = {\n  compatibility: 'compatibility',\n  dataFormat: 'dataFormat',\n  name: 'name',\n  schemaDefinition: 'schemaDefinition',\n\n  // the properties below are optional\n  checkpointVersion: {\n    isLatest: false,\n    versionNumber: 123,\n  },\n  description: 'description',\n  registry: {\n    arn: 'arn',\n    name: 'name',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnSchemaProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnSchemaProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSchemaProps: glue.CfnSchemaProps = {\n  compatibility: 'compatibility',\n  dataFormat: 'dataFormat',\n  name: 'name',\n  schemaDefinition: 'schemaDefinition',\n\n  // the properties below are optional\n  checkpointVersion: {\n    isLatest: false,\n    versionNumber: 123,\n  },\n  description: 'description',\n  registry: {\n    arn: 'arn',\n    name: 'name',\n  },\n  tags: [{\n    key: 'key',\n    value: 'value',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 10,
        "75": 18,
        "91": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 14,
        "290": 1
      },
      "fqnsFingerprint": "426dfb5b93a8fbb3383ca22ac77993eb7d1988d23fb19bfe46335b9b2def96dc"
    },
    "fde4057b6ad9b264b239e95c95d7e137a51f70e9c7c94bc9dd28d08d559287d5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncfn_schema_version = glue.CfnSchemaVersion(self, \"MyCfnSchemaVersion\",\n    schema=glue.CfnSchemaVersion.SchemaProperty(\n        registry_name=\"registryName\",\n        schema_arn=\"schemaArn\",\n        schema_name=\"schemaName\"\n    ),\n    schema_definition=\"schemaDefinition\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCfnSchemaVersion cfnSchemaVersion = new CfnSchemaVersion(this, \"MyCfnSchemaVersion\", new CfnSchemaVersionProps {\n    Schema = new SchemaProperty {\n        RegistryName = \"registryName\",\n        SchemaArn = \"schemaArn\",\n        SchemaName = \"schemaName\"\n    },\n    SchemaDefinition = \"schemaDefinition\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCfnSchemaVersion cfnSchemaVersion = CfnSchemaVersion.Builder.create(this, \"MyCfnSchemaVersion\")\n        .schema(SchemaProperty.builder()\n                .registryName(\"registryName\")\n                .schemaArn(\"schemaArn\")\n                .schemaName(\"schemaName\")\n                .build())\n        .schemaDefinition(\"schemaDefinition\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncfnSchemaVersion := glue.NewCfnSchemaVersion(this, jsii.String(\"MyCfnSchemaVersion\"), &cfnSchemaVersionProps{\n\tschema: &schemaProperty{\n\t\tregistryName: jsii.String(\"registryName\"),\n\t\tschemaArn: jsii.String(\"schemaArn\"),\n\t\tschemaName: jsii.String(\"schemaName\"),\n\t},\n\tschemaDefinition: jsii.String(\"schemaDefinition\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst cfnSchemaVersion = new glue.CfnSchemaVersion(this, 'MyCfnSchemaVersion', {\n  schema: {\n    registryName: 'registryName',\n    schemaArn: 'schemaArn',\n    schemaName: 'schemaName',\n  },\n  schemaDefinition: 'schemaDefinition',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnSchemaVersion"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnSchemaVersion",
        "@aws-cdk/aws-glue.CfnSchemaVersionProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSchemaVersion = new glue.CfnSchemaVersion(this, 'MyCfnSchemaVersion', {\n  schema: {\n    registryName: 'registryName',\n    schemaArn: 'schemaArn',\n    schemaName: 'schemaName',\n  },\n  schemaDefinition: 'schemaDefinition',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 9,
        "104": 1,
        "193": 2,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "bb454bcdba76159cabb01c15b60e4bb89fd2c93803627469f1d10d844aada528"
    },
    "8027ed555c7eb887d0cb792d8f0c96305166ad843984abff481bd682bb170e16": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nschema_property = glue.CfnSchemaVersion.SchemaProperty(\n    registry_name=\"registryName\",\n    schema_arn=\"schemaArn\",\n    schema_name=\"schemaName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nSchemaProperty schemaProperty = new SchemaProperty {\n    RegistryName = \"registryName\",\n    SchemaArn = \"schemaArn\",\n    SchemaName = \"schemaName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nSchemaProperty schemaProperty = SchemaProperty.builder()\n        .registryName(\"registryName\")\n        .schemaArn(\"schemaArn\")\n        .schemaName(\"schemaName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nschemaProperty := &schemaProperty{\n\tregistryName: jsii.String(\"registryName\"),\n\tschemaArn: jsii.String(\"schemaArn\"),\n\tschemaName: jsii.String(\"schemaName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst schemaProperty: glue.CfnSchemaVersion.SchemaProperty = {\n  registryName: 'registryName',\n  schemaArn: 'schemaArn',\n  schemaName: 'schemaName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnSchemaVersion.SchemaProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnSchemaVersion.SchemaProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst schemaProperty: glue.CfnSchemaVersion.SchemaProperty = {\n  registryName: 'registryName',\n  schemaArn: 'schemaArn',\n  schemaName: 'schemaName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "1990efb8da616e6ac56422b885fd7e0c9db2939be442bb9537c5c24474f35978"
    },
    "78649f540bd6be20bff61550c5e36f706fb720ba7f747d004372706dd37b92a9": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncfn_schema_version_metadata = glue.CfnSchemaVersionMetadata(self, \"MyCfnSchemaVersionMetadata\",\n    key=\"key\",\n    schema_version_id=\"schemaVersionId\",\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCfnSchemaVersionMetadata cfnSchemaVersionMetadata = new CfnSchemaVersionMetadata(this, \"MyCfnSchemaVersionMetadata\", new CfnSchemaVersionMetadataProps {\n    Key = \"key\",\n    SchemaVersionId = \"schemaVersionId\",\n    Value = \"value\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCfnSchemaVersionMetadata cfnSchemaVersionMetadata = CfnSchemaVersionMetadata.Builder.create(this, \"MyCfnSchemaVersionMetadata\")\n        .key(\"key\")\n        .schemaVersionId(\"schemaVersionId\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncfnSchemaVersionMetadata := glue.NewCfnSchemaVersionMetadata(this, jsii.String(\"MyCfnSchemaVersionMetadata\"), &cfnSchemaVersionMetadataProps{\n\tkey: jsii.String(\"key\"),\n\tschemaVersionId: jsii.String(\"schemaVersionId\"),\n\tvalue: jsii.String(\"value\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst cfnSchemaVersionMetadata = new glue.CfnSchemaVersionMetadata(this, 'MyCfnSchemaVersionMetadata', {\n  key: 'key',\n  schemaVersionId: 'schemaVersionId',\n  value: 'value',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnSchemaVersionMetadata"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnSchemaVersionMetadata",
        "@aws-cdk/aws-glue.CfnSchemaVersionMetadataProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSchemaVersionMetadata = new glue.CfnSchemaVersionMetadata(this, 'MyCfnSchemaVersionMetadata', {\n  key: 'key',\n  schemaVersionId: 'schemaVersionId',\n  value: 'value',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 7,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "0e80210ef85a568bc43a666b618c1d367663b3b43a2c6269f2bfce66a7b8c1c5"
    },
    "ab900d792067ce9d1a2044e6b79f3b981796fe0141f67adcd7284082d7a2a8a5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncfn_schema_version_metadata_props = glue.CfnSchemaVersionMetadataProps(\n    key=\"key\",\n    schema_version_id=\"schemaVersionId\",\n    value=\"value\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCfnSchemaVersionMetadataProps cfnSchemaVersionMetadataProps = new CfnSchemaVersionMetadataProps {\n    Key = \"key\",\n    SchemaVersionId = \"schemaVersionId\",\n    Value = \"value\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCfnSchemaVersionMetadataProps cfnSchemaVersionMetadataProps = CfnSchemaVersionMetadataProps.builder()\n        .key(\"key\")\n        .schemaVersionId(\"schemaVersionId\")\n        .value(\"value\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncfnSchemaVersionMetadataProps := &cfnSchemaVersionMetadataProps{\n\tkey: jsii.String(\"key\"),\n\tschemaVersionId: jsii.String(\"schemaVersionId\"),\n\tvalue: jsii.String(\"value\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst cfnSchemaVersionMetadataProps: glue.CfnSchemaVersionMetadataProps = {\n  key: 'key',\n  schemaVersionId: 'schemaVersionId',\n  value: 'value',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnSchemaVersionMetadataProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnSchemaVersionMetadataProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSchemaVersionMetadataProps: glue.CfnSchemaVersionMetadataProps = {\n  key: 'key',\n  schemaVersionId: 'schemaVersionId',\n  value: 'value',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 7,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "d6772a986b13c9fc56c6c847df63b9ae6f2a72e6baf3433136a12a041c3f6a07"
    },
    "c02095b091ace0515443eef3dfba1235d2904feaf9cdb7246399be81a69a5f01": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncfn_schema_version_props = glue.CfnSchemaVersionProps(\n    schema=glue.CfnSchemaVersion.SchemaProperty(\n        registry_name=\"registryName\",\n        schema_arn=\"schemaArn\",\n        schema_name=\"schemaName\"\n    ),\n    schema_definition=\"schemaDefinition\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCfnSchemaVersionProps cfnSchemaVersionProps = new CfnSchemaVersionProps {\n    Schema = new SchemaProperty {\n        RegistryName = \"registryName\",\n        SchemaArn = \"schemaArn\",\n        SchemaName = \"schemaName\"\n    },\n    SchemaDefinition = \"schemaDefinition\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCfnSchemaVersionProps cfnSchemaVersionProps = CfnSchemaVersionProps.builder()\n        .schema(SchemaProperty.builder()\n                .registryName(\"registryName\")\n                .schemaArn(\"schemaArn\")\n                .schemaName(\"schemaName\")\n                .build())\n        .schemaDefinition(\"schemaDefinition\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncfnSchemaVersionProps := &cfnSchemaVersionProps{\n\tschema: &schemaProperty{\n\t\tregistryName: jsii.String(\"registryName\"),\n\t\tschemaArn: jsii.String(\"schemaArn\"),\n\t\tschemaName: jsii.String(\"schemaName\"),\n\t},\n\tschemaDefinition: jsii.String(\"schemaDefinition\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst cfnSchemaVersionProps: glue.CfnSchemaVersionProps = {\n  schema: {\n    registryName: 'registryName',\n    schemaArn: 'schemaArn',\n    schemaName: 'schemaName',\n  },\n  schemaDefinition: 'schemaDefinition',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnSchemaVersionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnSchemaVersionProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSchemaVersionProps: glue.CfnSchemaVersionProps = {\n  schema: {\n    registryName: 'registryName',\n    schemaArn: 'schemaArn',\n    schemaName: 'schemaName',\n  },\n  schemaDefinition: 'schemaDefinition',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 5,
        "75": 9,
        "153": 1,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "e93b1ecdf695b92c8a16bd635589b728783d498e28db4339fc4c2a27e66715b4"
    },
    "630b4b9849c591470de57f5bb3899663ee9e78be908b701f2d1572df587ca53b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncfn_security_configuration = glue.CfnSecurityConfiguration(self, \"MyCfnSecurityConfiguration\",\n    encryption_configuration=glue.CfnSecurityConfiguration.EncryptionConfigurationProperty(\n        cloud_watch_encryption=glue.CfnSecurityConfiguration.CloudWatchEncryptionProperty(\n            cloud_watch_encryption_mode=\"cloudWatchEncryptionMode\",\n            kms_key_arn=\"kmsKeyArn\"\n        ),\n        job_bookmarks_encryption=glue.CfnSecurityConfiguration.JobBookmarksEncryptionProperty(\n            job_bookmarks_encryption_mode=\"jobBookmarksEncryptionMode\",\n            kms_key_arn=\"kmsKeyArn\"\n        ),\n        s3_encryptions=[glue.CfnSecurityConfiguration.S3EncryptionProperty(\n            kms_key_arn=\"kmsKeyArn\",\n            s3_encryption_mode=\"s3EncryptionMode\"\n        )]\n    ),\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCfnSecurityConfiguration cfnSecurityConfiguration = new CfnSecurityConfiguration(this, \"MyCfnSecurityConfiguration\", new CfnSecurityConfigurationProps {\n    EncryptionConfiguration = new EncryptionConfigurationProperty {\n        CloudWatchEncryption = new CloudWatchEncryptionProperty {\n            CloudWatchEncryptionMode = \"cloudWatchEncryptionMode\",\n            KmsKeyArn = \"kmsKeyArn\"\n        },\n        JobBookmarksEncryption = new JobBookmarksEncryptionProperty {\n            JobBookmarksEncryptionMode = \"jobBookmarksEncryptionMode\",\n            KmsKeyArn = \"kmsKeyArn\"\n        },\n        S3Encryptions = new [] { new S3EncryptionProperty {\n            KmsKeyArn = \"kmsKeyArn\",\n            S3EncryptionMode = \"s3EncryptionMode\"\n        } }\n    },\n    Name = \"name\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCfnSecurityConfiguration cfnSecurityConfiguration = CfnSecurityConfiguration.Builder.create(this, \"MyCfnSecurityConfiguration\")\n        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                .cloudWatchEncryption(CloudWatchEncryptionProperty.builder()\n                        .cloudWatchEncryptionMode(\"cloudWatchEncryptionMode\")\n                        .kmsKeyArn(\"kmsKeyArn\")\n                        .build())\n                .jobBookmarksEncryption(JobBookmarksEncryptionProperty.builder()\n                        .jobBookmarksEncryptionMode(\"jobBookmarksEncryptionMode\")\n                        .kmsKeyArn(\"kmsKeyArn\")\n                        .build())\n                .s3Encryptions(List.of(S3EncryptionProperty.builder()\n                        .kmsKeyArn(\"kmsKeyArn\")\n                        .s3EncryptionMode(\"s3EncryptionMode\")\n                        .build()))\n                .build())\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncfnSecurityConfiguration := glue.NewCfnSecurityConfiguration(this, jsii.String(\"MyCfnSecurityConfiguration\"), &cfnSecurityConfigurationProps{\n\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\tcloudWatchEncryption: &cloudWatchEncryptionProperty{\n\t\t\tcloudWatchEncryptionMode: jsii.String(\"cloudWatchEncryptionMode\"),\n\t\t\tkmsKeyArn: jsii.String(\"kmsKeyArn\"),\n\t\t},\n\t\tjobBookmarksEncryption: &jobBookmarksEncryptionProperty{\n\t\t\tjobBookmarksEncryptionMode: jsii.String(\"jobBookmarksEncryptionMode\"),\n\t\t\tkmsKeyArn: jsii.String(\"kmsKeyArn\"),\n\t\t},\n\t\ts3Encryptions: []interface{}{\n\t\t\t&s3EncryptionProperty{\n\t\t\t\tkmsKeyArn: jsii.String(\"kmsKeyArn\"),\n\t\t\t\ts3EncryptionMode: jsii.String(\"s3EncryptionMode\"),\n\t\t\t},\n\t\t},\n\t},\n\tname: jsii.String(\"name\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst cfnSecurityConfiguration = new glue.CfnSecurityConfiguration(this, 'MyCfnSecurityConfiguration', {\n  encryptionConfiguration: {\n    cloudWatchEncryption: {\n      cloudWatchEncryptionMode: 'cloudWatchEncryptionMode',\n      kmsKeyArn: 'kmsKeyArn',\n    },\n    jobBookmarksEncryption: {\n      jobBookmarksEncryptionMode: 'jobBookmarksEncryptionMode',\n      kmsKeyArn: 'kmsKeyArn',\n    },\n    s3Encryptions: [{\n      kmsKeyArn: 'kmsKeyArn',\n      s3EncryptionMode: 's3EncryptionMode',\n    }],\n  },\n  name: 'name',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnSecurityConfiguration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnSecurityConfiguration",
        "@aws-cdk/aws-glue.CfnSecurityConfigurationProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSecurityConfiguration = new glue.CfnSecurityConfiguration(this, 'MyCfnSecurityConfiguration', {\n  encryptionConfiguration: {\n    cloudWatchEncryption: {\n      cloudWatchEncryptionMode: 'cloudWatchEncryptionMode',\n      kmsKeyArn: 'kmsKeyArn',\n    },\n    jobBookmarksEncryption: {\n      jobBookmarksEncryptionMode: 'jobBookmarksEncryptionMode',\n      kmsKeyArn: 'kmsKeyArn',\n    },\n    s3Encryptions: [{\n      kmsKeyArn: 'kmsKeyArn',\n      s3EncryptionMode: 's3EncryptionMode',\n    }],\n  },\n  name: 'name',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 9,
        "75": 15,
        "104": 1,
        "192": 1,
        "193": 5,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "5e3b3a4f1b1f81dad54923a161d3125a2050b07b62b5d1b1784f3d42f201c29f"
    },
    "52a9a117b9e32813c3eec3cbea18690779b3c08d110370222498f4d79d07efe6": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncloud_watch_encryption_property = glue.CfnSecurityConfiguration.CloudWatchEncryptionProperty(\n    cloud_watch_encryption_mode=\"cloudWatchEncryptionMode\",\n    kms_key_arn=\"kmsKeyArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCloudWatchEncryptionProperty cloudWatchEncryptionProperty = new CloudWatchEncryptionProperty {\n    CloudWatchEncryptionMode = \"cloudWatchEncryptionMode\",\n    KmsKeyArn = \"kmsKeyArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCloudWatchEncryptionProperty cloudWatchEncryptionProperty = CloudWatchEncryptionProperty.builder()\n        .cloudWatchEncryptionMode(\"cloudWatchEncryptionMode\")\n        .kmsKeyArn(\"kmsKeyArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncloudWatchEncryptionProperty := &cloudWatchEncryptionProperty{\n\tcloudWatchEncryptionMode: jsii.String(\"cloudWatchEncryptionMode\"),\n\tkmsKeyArn: jsii.String(\"kmsKeyArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst cloudWatchEncryptionProperty: glue.CfnSecurityConfiguration.CloudWatchEncryptionProperty = {\n  cloudWatchEncryptionMode: 'cloudWatchEncryptionMode',\n  kmsKeyArn: 'kmsKeyArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnSecurityConfiguration.CloudWatchEncryptionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnSecurityConfiguration.CloudWatchEncryptionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cloudWatchEncryptionProperty: glue.CfnSecurityConfiguration.CloudWatchEncryptionProperty = {\n  cloudWatchEncryptionMode: 'cloudWatchEncryptionMode',\n  kmsKeyArn: 'kmsKeyArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "c4153aa747d5529b04d592fd813ad26c72b1a4c123e798d0de8a5cd1e6446a35"
    },
    "01a38add46d1ed0a8151e56d53e1bfd651528ecd3f51946a9251369c071cc9b1": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nencryption_configuration_property = glue.CfnSecurityConfiguration.EncryptionConfigurationProperty(\n    cloud_watch_encryption=glue.CfnSecurityConfiguration.CloudWatchEncryptionProperty(\n        cloud_watch_encryption_mode=\"cloudWatchEncryptionMode\",\n        kms_key_arn=\"kmsKeyArn\"\n    ),\n    job_bookmarks_encryption=glue.CfnSecurityConfiguration.JobBookmarksEncryptionProperty(\n        job_bookmarks_encryption_mode=\"jobBookmarksEncryptionMode\",\n        kms_key_arn=\"kmsKeyArn\"\n    ),\n    s3_encryptions=[glue.CfnSecurityConfiguration.S3EncryptionProperty(\n        kms_key_arn=\"kmsKeyArn\",\n        s3_encryption_mode=\"s3EncryptionMode\"\n    )]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nEncryptionConfigurationProperty encryptionConfigurationProperty = new EncryptionConfigurationProperty {\n    CloudWatchEncryption = new CloudWatchEncryptionProperty {\n        CloudWatchEncryptionMode = \"cloudWatchEncryptionMode\",\n        KmsKeyArn = \"kmsKeyArn\"\n    },\n    JobBookmarksEncryption = new JobBookmarksEncryptionProperty {\n        JobBookmarksEncryptionMode = \"jobBookmarksEncryptionMode\",\n        KmsKeyArn = \"kmsKeyArn\"\n    },\n    S3Encryptions = new [] { new S3EncryptionProperty {\n        KmsKeyArn = \"kmsKeyArn\",\n        S3EncryptionMode = \"s3EncryptionMode\"\n    } }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nEncryptionConfigurationProperty encryptionConfigurationProperty = EncryptionConfigurationProperty.builder()\n        .cloudWatchEncryption(CloudWatchEncryptionProperty.builder()\n                .cloudWatchEncryptionMode(\"cloudWatchEncryptionMode\")\n                .kmsKeyArn(\"kmsKeyArn\")\n                .build())\n        .jobBookmarksEncryption(JobBookmarksEncryptionProperty.builder()\n                .jobBookmarksEncryptionMode(\"jobBookmarksEncryptionMode\")\n                .kmsKeyArn(\"kmsKeyArn\")\n                .build())\n        .s3Encryptions(List.of(S3EncryptionProperty.builder()\n                .kmsKeyArn(\"kmsKeyArn\")\n                .s3EncryptionMode(\"s3EncryptionMode\")\n                .build()))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nencryptionConfigurationProperty := &encryptionConfigurationProperty{\n\tcloudWatchEncryption: &cloudWatchEncryptionProperty{\n\t\tcloudWatchEncryptionMode: jsii.String(\"cloudWatchEncryptionMode\"),\n\t\tkmsKeyArn: jsii.String(\"kmsKeyArn\"),\n\t},\n\tjobBookmarksEncryption: &jobBookmarksEncryptionProperty{\n\t\tjobBookmarksEncryptionMode: jsii.String(\"jobBookmarksEncryptionMode\"),\n\t\tkmsKeyArn: jsii.String(\"kmsKeyArn\"),\n\t},\n\ts3Encryptions: []interface{}{\n\t\t&s3EncryptionProperty{\n\t\t\tkmsKeyArn: jsii.String(\"kmsKeyArn\"),\n\t\t\ts3EncryptionMode: jsii.String(\"s3EncryptionMode\"),\n\t\t},\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst encryptionConfigurationProperty: glue.CfnSecurityConfiguration.EncryptionConfigurationProperty = {\n  cloudWatchEncryption: {\n    cloudWatchEncryptionMode: 'cloudWatchEncryptionMode',\n    kmsKeyArn: 'kmsKeyArn',\n  },\n  jobBookmarksEncryption: {\n    jobBookmarksEncryptionMode: 'jobBookmarksEncryptionMode',\n    kmsKeyArn: 'kmsKeyArn',\n  },\n  s3Encryptions: [{\n    kmsKeyArn: 'kmsKeyArn',\n    s3EncryptionMode: 's3EncryptionMode',\n  }],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnSecurityConfiguration.EncryptionConfigurationProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnSecurityConfiguration.EncryptionConfigurationProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst encryptionConfigurationProperty: glue.CfnSecurityConfiguration.EncryptionConfigurationProperty = {\n  cloudWatchEncryption: {\n    cloudWatchEncryptionMode: 'cloudWatchEncryptionMode',\n    kmsKeyArn: 'kmsKeyArn',\n  },\n  jobBookmarksEncryption: {\n    jobBookmarksEncryptionMode: 'jobBookmarksEncryptionMode',\n    kmsKeyArn: 'kmsKeyArn',\n  },\n  s3Encryptions: [{\n    kmsKeyArn: 'kmsKeyArn',\n    s3EncryptionMode: 's3EncryptionMode',\n  }],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 14,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 4,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 9,
        "290": 1
      },
      "fqnsFingerprint": "a58e103c9ccdcd8428d6f8ba9aa6e7015592e08df4736ad019de6b535c992e53"
    },
    "cf9fc203ce4765a14271fdca3cd1df3af01f0c0c60bd03d96e7c099e49f82757": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\njob_bookmarks_encryption_property = glue.CfnSecurityConfiguration.JobBookmarksEncryptionProperty(\n    job_bookmarks_encryption_mode=\"jobBookmarksEncryptionMode\",\n    kms_key_arn=\"kmsKeyArn\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nJobBookmarksEncryptionProperty jobBookmarksEncryptionProperty = new JobBookmarksEncryptionProperty {\n    JobBookmarksEncryptionMode = \"jobBookmarksEncryptionMode\",\n    KmsKeyArn = \"kmsKeyArn\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nJobBookmarksEncryptionProperty jobBookmarksEncryptionProperty = JobBookmarksEncryptionProperty.builder()\n        .jobBookmarksEncryptionMode(\"jobBookmarksEncryptionMode\")\n        .kmsKeyArn(\"kmsKeyArn\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\njobBookmarksEncryptionProperty := &jobBookmarksEncryptionProperty{\n\tjobBookmarksEncryptionMode: jsii.String(\"jobBookmarksEncryptionMode\"),\n\tkmsKeyArn: jsii.String(\"kmsKeyArn\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst jobBookmarksEncryptionProperty: glue.CfnSecurityConfiguration.JobBookmarksEncryptionProperty = {\n  jobBookmarksEncryptionMode: 'jobBookmarksEncryptionMode',\n  kmsKeyArn: 'kmsKeyArn',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnSecurityConfiguration.JobBookmarksEncryptionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnSecurityConfiguration.JobBookmarksEncryptionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jobBookmarksEncryptionProperty: glue.CfnSecurityConfiguration.JobBookmarksEncryptionProperty = {\n  jobBookmarksEncryptionMode: 'jobBookmarksEncryptionMode',\n  kmsKeyArn: 'kmsKeyArn',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "6970871d594a73bf21c30f1baafafd09644034db662c3c929a0be5f919b2a934"
    },
    "414aaf41bf432fa0b4c6c13bc1baf7101c638ee7a70af6adf7189895319f396b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ns3_encryption_property = glue.CfnSecurityConfiguration.S3EncryptionProperty(\n    kms_key_arn=\"kmsKeyArn\",\n    s3_encryption_mode=\"s3EncryptionMode\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nS3EncryptionProperty s3EncryptionProperty = new S3EncryptionProperty {\n    KmsKeyArn = \"kmsKeyArn\",\n    S3EncryptionMode = \"s3EncryptionMode\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nS3EncryptionProperty s3EncryptionProperty = S3EncryptionProperty.builder()\n        .kmsKeyArn(\"kmsKeyArn\")\n        .s3EncryptionMode(\"s3EncryptionMode\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ns3EncryptionProperty := &s3EncryptionProperty{\n\tkmsKeyArn: jsii.String(\"kmsKeyArn\"),\n\ts3EncryptionMode: jsii.String(\"s3EncryptionMode\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst s3EncryptionProperty: glue.CfnSecurityConfiguration.S3EncryptionProperty = {\n  kmsKeyArn: 'kmsKeyArn',\n  s3EncryptionMode: 's3EncryptionMode',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnSecurityConfiguration.S3EncryptionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnSecurityConfiguration.S3EncryptionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3EncryptionProperty: glue.CfnSecurityConfiguration.S3EncryptionProperty = {\n  kmsKeyArn: 'kmsKeyArn',\n  s3EncryptionMode: 's3EncryptionMode',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "88bb369f547ce2b36d4456c688307e2acd976d751a858ca14432c50a6ee978fb"
    },
    "8d9979cd4d36911b1e983f01a1211a03b6d3b01533cd8fd887565c3cdcf5d4be": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncfn_security_configuration_props = glue.CfnSecurityConfigurationProps(\n    encryption_configuration=glue.CfnSecurityConfiguration.EncryptionConfigurationProperty(\n        cloud_watch_encryption=glue.CfnSecurityConfiguration.CloudWatchEncryptionProperty(\n            cloud_watch_encryption_mode=\"cloudWatchEncryptionMode\",\n            kms_key_arn=\"kmsKeyArn\"\n        ),\n        job_bookmarks_encryption=glue.CfnSecurityConfiguration.JobBookmarksEncryptionProperty(\n            job_bookmarks_encryption_mode=\"jobBookmarksEncryptionMode\",\n            kms_key_arn=\"kmsKeyArn\"\n        ),\n        s3_encryptions=[glue.CfnSecurityConfiguration.S3EncryptionProperty(\n            kms_key_arn=\"kmsKeyArn\",\n            s3_encryption_mode=\"s3EncryptionMode\"\n        )]\n    ),\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCfnSecurityConfigurationProps cfnSecurityConfigurationProps = new CfnSecurityConfigurationProps {\n    EncryptionConfiguration = new EncryptionConfigurationProperty {\n        CloudWatchEncryption = new CloudWatchEncryptionProperty {\n            CloudWatchEncryptionMode = \"cloudWatchEncryptionMode\",\n            KmsKeyArn = \"kmsKeyArn\"\n        },\n        JobBookmarksEncryption = new JobBookmarksEncryptionProperty {\n            JobBookmarksEncryptionMode = \"jobBookmarksEncryptionMode\",\n            KmsKeyArn = \"kmsKeyArn\"\n        },\n        S3Encryptions = new [] { new S3EncryptionProperty {\n            KmsKeyArn = \"kmsKeyArn\",\n            S3EncryptionMode = \"s3EncryptionMode\"\n        } }\n    },\n    Name = \"name\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCfnSecurityConfigurationProps cfnSecurityConfigurationProps = CfnSecurityConfigurationProps.builder()\n        .encryptionConfiguration(EncryptionConfigurationProperty.builder()\n                .cloudWatchEncryption(CloudWatchEncryptionProperty.builder()\n                        .cloudWatchEncryptionMode(\"cloudWatchEncryptionMode\")\n                        .kmsKeyArn(\"kmsKeyArn\")\n                        .build())\n                .jobBookmarksEncryption(JobBookmarksEncryptionProperty.builder()\n                        .jobBookmarksEncryptionMode(\"jobBookmarksEncryptionMode\")\n                        .kmsKeyArn(\"kmsKeyArn\")\n                        .build())\n                .s3Encryptions(List.of(S3EncryptionProperty.builder()\n                        .kmsKeyArn(\"kmsKeyArn\")\n                        .s3EncryptionMode(\"s3EncryptionMode\")\n                        .build()))\n                .build())\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncfnSecurityConfigurationProps := &cfnSecurityConfigurationProps{\n\tencryptionConfiguration: &encryptionConfigurationProperty{\n\t\tcloudWatchEncryption: &cloudWatchEncryptionProperty{\n\t\t\tcloudWatchEncryptionMode: jsii.String(\"cloudWatchEncryptionMode\"),\n\t\t\tkmsKeyArn: jsii.String(\"kmsKeyArn\"),\n\t\t},\n\t\tjobBookmarksEncryption: &jobBookmarksEncryptionProperty{\n\t\t\tjobBookmarksEncryptionMode: jsii.String(\"jobBookmarksEncryptionMode\"),\n\t\t\tkmsKeyArn: jsii.String(\"kmsKeyArn\"),\n\t\t},\n\t\ts3Encryptions: []interface{}{\n\t\t\t&s3EncryptionProperty{\n\t\t\t\tkmsKeyArn: jsii.String(\"kmsKeyArn\"),\n\t\t\t\ts3EncryptionMode: jsii.String(\"s3EncryptionMode\"),\n\t\t\t},\n\t\t},\n\t},\n\tname: jsii.String(\"name\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst cfnSecurityConfigurationProps: glue.CfnSecurityConfigurationProps = {\n  encryptionConfiguration: {\n    cloudWatchEncryption: {\n      cloudWatchEncryptionMode: 'cloudWatchEncryptionMode',\n      kmsKeyArn: 'kmsKeyArn',\n    },\n    jobBookmarksEncryption: {\n      jobBookmarksEncryptionMode: 'jobBookmarksEncryptionMode',\n      kmsKeyArn: 'kmsKeyArn',\n    },\n    s3Encryptions: [{\n      kmsKeyArn: 'kmsKeyArn',\n      s3EncryptionMode: 's3EncryptionMode',\n    }],\n  },\n  name: 'name',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnSecurityConfigurationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnSecurityConfigurationProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnSecurityConfigurationProps: glue.CfnSecurityConfigurationProps = {\n  encryptionConfiguration: {\n    cloudWatchEncryption: {\n      cloudWatchEncryptionMode: 'cloudWatchEncryptionMode',\n      kmsKeyArn: 'kmsKeyArn',\n    },\n    jobBookmarksEncryption: {\n      jobBookmarksEncryptionMode: 'jobBookmarksEncryptionMode',\n      kmsKeyArn: 'kmsKeyArn',\n    },\n    s3Encryptions: [{\n      kmsKeyArn: 'kmsKeyArn',\n      s3EncryptionMode: 's3EncryptionMode',\n    }],\n  },\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 8,
        "75": 15,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 5,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "78017722c5ef6d70663a8de793bf2b4014c84ec93de56e41c8ee7326962fb18e"
    },
    "d1219fadda7772714ef4def82bcc5d96e6ab0a9bb2abbb8a15a4d50fe32159a3": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# parameters: Any\n# skewed_column_value_location_maps: Any\n\ncfn_table = glue.CfnTable(self, \"MyCfnTable\",\n    catalog_id=\"catalogId\",\n    database_name=\"databaseName\",\n    table_input=glue.CfnTable.TableInputProperty(\n        description=\"description\",\n        name=\"name\",\n        owner=\"owner\",\n        parameters=parameters,\n        partition_keys=[glue.CfnTable.ColumnProperty(\n            name=\"name\",\n\n            # the properties below are optional\n            comment=\"comment\",\n            type=\"type\"\n        )],\n        retention=123,\n        storage_descriptor=glue.CfnTable.StorageDescriptorProperty(\n            bucket_columns=[\"bucketColumns\"],\n            columns=[glue.CfnTable.ColumnProperty(\n                name=\"name\",\n\n                # the properties below are optional\n                comment=\"comment\",\n                type=\"type\"\n            )],\n            compressed=False,\n            input_format=\"inputFormat\",\n            location=\"location\",\n            number_of_buckets=123,\n            output_format=\"outputFormat\",\n            parameters=parameters,\n            schema_reference=glue.CfnTable.SchemaReferenceProperty(\n                schema_id=glue.CfnTable.SchemaIdProperty(\n                    registry_name=\"registryName\",\n                    schema_arn=\"schemaArn\",\n                    schema_name=\"schemaName\"\n                ),\n                schema_version_id=\"schemaVersionId\",\n                schema_version_number=123\n            ),\n            serde_info=glue.CfnTable.SerdeInfoProperty(\n                name=\"name\",\n                parameters=parameters,\n                serialization_library=\"serializationLibrary\"\n            ),\n            skewed_info=glue.CfnTable.SkewedInfoProperty(\n                skewed_column_names=[\"skewedColumnNames\"],\n                skewed_column_value_location_maps=skewed_column_value_location_maps,\n                skewed_column_values=[\"skewedColumnValues\"]\n            ),\n            sort_columns=[glue.CfnTable.OrderProperty(\n                column=\"column\",\n                sort_order=123\n            )],\n            stored_as_sub_directories=False\n        ),\n        table_type=\"tableType\",\n        target_table=glue.CfnTable.TableIdentifierProperty(\n            catalog_id=\"catalogId\",\n            database_name=\"databaseName\",\n            name=\"name\"\n        ),\n        view_expanded_text=\"viewExpandedText\",\n        view_original_text=\"viewOriginalText\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar parameters;\nvar skewedColumnValueLocationMaps;\n\nCfnTable cfnTable = new CfnTable(this, \"MyCfnTable\", new CfnTableProps {\n    CatalogId = \"catalogId\",\n    DatabaseName = \"databaseName\",\n    TableInput = new TableInputProperty {\n        Description = \"description\",\n        Name = \"name\",\n        Owner = \"owner\",\n        Parameters = parameters,\n        PartitionKeys = new [] { new ColumnProperty {\n            Name = \"name\",\n\n            // the properties below are optional\n            Comment = \"comment\",\n            Type = \"type\"\n        } },\n        Retention = 123,\n        StorageDescriptor = new StorageDescriptorProperty {\n            BucketColumns = new [] { \"bucketColumns\" },\n            Columns = new [] { new ColumnProperty {\n                Name = \"name\",\n\n                // the properties below are optional\n                Comment = \"comment\",\n                Type = \"type\"\n            } },\n            Compressed = false,\n            InputFormat = \"inputFormat\",\n            Location = \"location\",\n            NumberOfBuckets = 123,\n            OutputFormat = \"outputFormat\",\n            Parameters = parameters,\n            SchemaReference = new SchemaReferenceProperty {\n                SchemaId = new SchemaIdProperty {\n                    RegistryName = \"registryName\",\n                    SchemaArn = \"schemaArn\",\n                    SchemaName = \"schemaName\"\n                },\n                SchemaVersionId = \"schemaVersionId\",\n                SchemaVersionNumber = 123\n            },\n            SerdeInfo = new SerdeInfoProperty {\n                Name = \"name\",\n                Parameters = parameters,\n                SerializationLibrary = \"serializationLibrary\"\n            },\n            SkewedInfo = new SkewedInfoProperty {\n                SkewedColumnNames = new [] { \"skewedColumnNames\" },\n                SkewedColumnValueLocationMaps = skewedColumnValueLocationMaps,\n                SkewedColumnValues = new [] { \"skewedColumnValues\" }\n            },\n            SortColumns = new [] { new OrderProperty {\n                Column = \"column\",\n                SortOrder = 123\n            } },\n            StoredAsSubDirectories = false\n        },\n        TableType = \"tableType\",\n        TargetTable = new TableIdentifierProperty {\n            CatalogId = \"catalogId\",\n            DatabaseName = \"databaseName\",\n            Name = \"name\"\n        },\n        ViewExpandedText = \"viewExpandedText\",\n        ViewOriginalText = \"viewOriginalText\"\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject parameters;\nObject skewedColumnValueLocationMaps;\n\nCfnTable cfnTable = CfnTable.Builder.create(this, \"MyCfnTable\")\n        .catalogId(\"catalogId\")\n        .databaseName(\"databaseName\")\n        .tableInput(TableInputProperty.builder()\n                .description(\"description\")\n                .name(\"name\")\n                .owner(\"owner\")\n                .parameters(parameters)\n                .partitionKeys(List.of(ColumnProperty.builder()\n                        .name(\"name\")\n\n                        // the properties below are optional\n                        .comment(\"comment\")\n                        .type(\"type\")\n                        .build()))\n                .retention(123)\n                .storageDescriptor(StorageDescriptorProperty.builder()\n                        .bucketColumns(List.of(\"bucketColumns\"))\n                        .columns(List.of(ColumnProperty.builder()\n                                .name(\"name\")\n\n                                // the properties below are optional\n                                .comment(\"comment\")\n                                .type(\"type\")\n                                .build()))\n                        .compressed(false)\n                        .inputFormat(\"inputFormat\")\n                        .location(\"location\")\n                        .numberOfBuckets(123)\n                        .outputFormat(\"outputFormat\")\n                        .parameters(parameters)\n                        .schemaReference(SchemaReferenceProperty.builder()\n                                .schemaId(SchemaIdProperty.builder()\n                                        .registryName(\"registryName\")\n                                        .schemaArn(\"schemaArn\")\n                                        .schemaName(\"schemaName\")\n                                        .build())\n                                .schemaVersionId(\"schemaVersionId\")\n                                .schemaVersionNumber(123)\n                                .build())\n                        .serdeInfo(SerdeInfoProperty.builder()\n                                .name(\"name\")\n                                .parameters(parameters)\n                                .serializationLibrary(\"serializationLibrary\")\n                                .build())\n                        .skewedInfo(SkewedInfoProperty.builder()\n                                .skewedColumnNames(List.of(\"skewedColumnNames\"))\n                                .skewedColumnValueLocationMaps(skewedColumnValueLocationMaps)\n                                .skewedColumnValues(List.of(\"skewedColumnValues\"))\n                                .build())\n                        .sortColumns(List.of(OrderProperty.builder()\n                                .column(\"column\")\n                                .sortOrder(123)\n                                .build()))\n                        .storedAsSubDirectories(false)\n                        .build())\n                .tableType(\"tableType\")\n                .targetTable(TableIdentifierProperty.builder()\n                        .catalogId(\"catalogId\")\n                        .databaseName(\"databaseName\")\n                        .name(\"name\")\n                        .build())\n                .viewExpandedText(\"viewExpandedText\")\n                .viewOriginalText(\"viewOriginalText\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar parameters interface{}\nvar skewedColumnValueLocationMaps interface{}\ncfnTable := glue.NewCfnTable(this, jsii.String(\"MyCfnTable\"), &cfnTableProps{\n\tcatalogId: jsii.String(\"catalogId\"),\n\tdatabaseName: jsii.String(\"databaseName\"),\n\ttableInput: &tableInputProperty{\n\t\tdescription: jsii.String(\"description\"),\n\t\tname: jsii.String(\"name\"),\n\t\towner: jsii.String(\"owner\"),\n\t\tparameters: parameters,\n\t\tpartitionKeys: []interface{}{\n\t\t\t&columnProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcomment: jsii.String(\"comment\"),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\t\tretention: jsii.Number(123),\n\t\tstorageDescriptor: &storageDescriptorProperty{\n\t\t\tbucketColumns: []*string{\n\t\t\t\tjsii.String(\"bucketColumns\"),\n\t\t\t},\n\t\t\tcolumns: []interface{}{\n\t\t\t\t&columnProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tcomment: jsii.String(\"comment\"),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tcompressed: jsii.Boolean(false),\n\t\t\tinputFormat: jsii.String(\"inputFormat\"),\n\t\t\tlocation: jsii.String(\"location\"),\n\t\t\tnumberOfBuckets: jsii.Number(123),\n\t\t\toutputFormat: jsii.String(\"outputFormat\"),\n\t\t\tparameters: parameters,\n\t\t\tschemaReference: &schemaReferenceProperty{\n\t\t\t\tschemaId: &schemaIdProperty{\n\t\t\t\t\tregistryName: jsii.String(\"registryName\"),\n\t\t\t\t\tschemaArn: jsii.String(\"schemaArn\"),\n\t\t\t\t\tschemaName: jsii.String(\"schemaName\"),\n\t\t\t\t},\n\t\t\t\tschemaVersionId: jsii.String(\"schemaVersionId\"),\n\t\t\t\tschemaVersionNumber: jsii.Number(123),\n\t\t\t},\n\t\t\tserdeInfo: &serdeInfoProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tparameters: parameters,\n\t\t\t\tserializationLibrary: jsii.String(\"serializationLibrary\"),\n\t\t\t},\n\t\t\tskewedInfo: &skewedInfoProperty{\n\t\t\t\tskewedColumnNames: []*string{\n\t\t\t\t\tjsii.String(\"skewedColumnNames\"),\n\t\t\t\t},\n\t\t\t\tskewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n\t\t\t\tskewedColumnValues: []*string{\n\t\t\t\t\tjsii.String(\"skewedColumnValues\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tsortColumns: []interface{}{\n\t\t\t\t&orderProperty{\n\t\t\t\t\tcolumn: jsii.String(\"column\"),\n\t\t\t\t\tsortOrder: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t\tstoredAsSubDirectories: jsii.Boolean(false),\n\t\t},\n\t\ttableType: jsii.String(\"tableType\"),\n\t\ttargetTable: &tableIdentifierProperty{\n\t\t\tcatalogId: jsii.String(\"catalogId\"),\n\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\tname: jsii.String(\"name\"),\n\t\t},\n\t\tviewExpandedText: jsii.String(\"viewExpandedText\"),\n\t\tviewOriginalText: jsii.String(\"viewOriginalText\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\ndeclare const skewedColumnValueLocationMaps: any;\nconst cfnTable = new glue.CfnTable(this, 'MyCfnTable', {\n  catalogId: 'catalogId',\n  databaseName: 'databaseName',\n  tableInput: {\n    description: 'description',\n    name: 'name',\n    owner: 'owner',\n    parameters: parameters,\n    partitionKeys: [{\n      name: 'name',\n\n      // the properties below are optional\n      comment: 'comment',\n      type: 'type',\n    }],\n    retention: 123,\n    storageDescriptor: {\n      bucketColumns: ['bucketColumns'],\n      columns: [{\n        name: 'name',\n\n        // the properties below are optional\n        comment: 'comment',\n        type: 'type',\n      }],\n      compressed: false,\n      inputFormat: 'inputFormat',\n      location: 'location',\n      numberOfBuckets: 123,\n      outputFormat: 'outputFormat',\n      parameters: parameters,\n      schemaReference: {\n        schemaId: {\n          registryName: 'registryName',\n          schemaArn: 'schemaArn',\n          schemaName: 'schemaName',\n        },\n        schemaVersionId: 'schemaVersionId',\n        schemaVersionNumber: 123,\n      },\n      serdeInfo: {\n        name: 'name',\n        parameters: parameters,\n        serializationLibrary: 'serializationLibrary',\n      },\n      skewedInfo: {\n        skewedColumnNames: ['skewedColumnNames'],\n        skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n        skewedColumnValues: ['skewedColumnValues'],\n      },\n      sortColumns: [{\n        column: 'column',\n        sortOrder: 123,\n      }],\n      storedAsSubDirectories: false,\n    },\n    tableType: 'tableType',\n    targetTable: {\n      catalogId: 'catalogId',\n      databaseName: 'databaseName',\n      name: 'name',\n    },\n    viewExpandedText: 'viewExpandedText',\n    viewOriginalText: 'viewOriginalText',\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnTable"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnTable",
        "@aws-cdk/aws-glue.CfnTableProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\ndeclare const skewedColumnValueLocationMaps: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnTable = new glue.CfnTable(this, 'MyCfnTable', {\n  catalogId: 'catalogId',\n  databaseName: 'databaseName',\n  tableInput: {\n    description: 'description',\n    name: 'name',\n    owner: 'owner',\n    parameters: parameters,\n    partitionKeys: [{\n      name: 'name',\n\n      // the properties below are optional\n      comment: 'comment',\n      type: 'type',\n    }],\n    retention: 123,\n    storageDescriptor: {\n      bucketColumns: ['bucketColumns'],\n      columns: [{\n        name: 'name',\n\n        // the properties below are optional\n        comment: 'comment',\n        type: 'type',\n      }],\n      compressed: false,\n      inputFormat: 'inputFormat',\n      location: 'location',\n      numberOfBuckets: 123,\n      outputFormat: 'outputFormat',\n      parameters: parameters,\n      schemaReference: {\n        schemaId: {\n          registryName: 'registryName',\n          schemaArn: 'schemaArn',\n          schemaName: 'schemaName',\n        },\n        schemaVersionId: 'schemaVersionId',\n        schemaVersionNumber: 123,\n      },\n      serdeInfo: {\n        name: 'name',\n        parameters: parameters,\n        serializationLibrary: 'serializationLibrary',\n      },\n      skewedInfo: {\n        skewedColumnNames: ['skewedColumnNames'],\n        skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n        skewedColumnValues: ['skewedColumnValues'],\n      },\n      sortColumns: [{\n        column: 'column',\n        sortOrder: 123,\n      }],\n      storedAsSubDirectories: false,\n    },\n    tableType: 'tableType',\n    targetTable: {\n      catalogId: 'catalogId',\n      databaseName: 'databaseName',\n      name: 'name',\n    },\n    viewExpandedText: 'viewExpandedText',\n    viewOriginalText: 'viewOriginalText',\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 32,
        "75": 60,
        "91": 2,
        "104": 1,
        "125": 2,
        "130": 2,
        "192": 6,
        "193": 11,
        "194": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 50,
        "290": 1
      },
      "fqnsFingerprint": "3916df3a90c88a600d145e2c4004f20a8eca9533d719b503a1c6eb48611dda4b"
    },
    "e91321a531c00912cc0a3b2415a1949a01f766821c3deb5a7ab5afe531464a95": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncolumn_property = glue.CfnTable.ColumnProperty(\n    name=\"name\",\n\n    # the properties below are optional\n    comment=\"comment\",\n    type=\"type\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nColumnProperty columnProperty = new ColumnProperty {\n    Name = \"name\",\n\n    // the properties below are optional\n    Comment = \"comment\",\n    Type = \"type\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nColumnProperty columnProperty = ColumnProperty.builder()\n        .name(\"name\")\n\n        // the properties below are optional\n        .comment(\"comment\")\n        .type(\"type\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncolumnProperty := &columnProperty{\n\tname: jsii.String(\"name\"),\n\n\t// the properties below are optional\n\tcomment: jsii.String(\"comment\"),\n\ttype: jsii.String(\"type\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst columnProperty: glue.CfnTable.ColumnProperty = {\n  name: 'name',\n\n  // the properties below are optional\n  comment: 'comment',\n  type: 'type',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnTable.ColumnProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnTable.ColumnProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst columnProperty: glue.CfnTable.ColumnProperty = {\n  name: 'name',\n\n  // the properties below are optional\n  comment: 'comment',\n  type: 'type',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "8a7d29ee6a34bc7b1ccedbec7212e86a5d3d1867ae31ac2e45cd5cf50eb38d34"
    },
    "e111d04c9b22e4fb0ec38fbac988f16e7d5b32a315b568ae222c39254d3e578c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\norder_property = glue.CfnTable.OrderProperty(\n    column=\"column\",\n    sort_order=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nOrderProperty orderProperty = new OrderProperty {\n    Column = \"column\",\n    SortOrder = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nOrderProperty orderProperty = OrderProperty.builder()\n        .column(\"column\")\n        .sortOrder(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\norderProperty := &orderProperty{\n\tcolumn: jsii.String(\"column\"),\n\tsortOrder: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst orderProperty: glue.CfnTable.OrderProperty = {\n  column: 'column',\n  sortOrder: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnTable.OrderProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnTable.OrderProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst orderProperty: glue.CfnTable.OrderProperty = {\n  column: 'column',\n  sortOrder: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 2,
        "75": 7,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "92755d4f26a51563efb854294f94b2743e9a070a3a7eefcd6173c8e5e92e5585"
    },
    "cc7ff079e44fd81a18433b254d8c7217993fb490df1cbb73e72ad75f9fa75e0f": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nschema_id_property = glue.CfnTable.SchemaIdProperty(\n    registry_name=\"registryName\",\n    schema_arn=\"schemaArn\",\n    schema_name=\"schemaName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nSchemaIdProperty schemaIdProperty = new SchemaIdProperty {\n    RegistryName = \"registryName\",\n    SchemaArn = \"schemaArn\",\n    SchemaName = \"schemaName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nSchemaIdProperty schemaIdProperty = SchemaIdProperty.builder()\n        .registryName(\"registryName\")\n        .schemaArn(\"schemaArn\")\n        .schemaName(\"schemaName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nschemaIdProperty := &schemaIdProperty{\n\tregistryName: jsii.String(\"registryName\"),\n\tschemaArn: jsii.String(\"schemaArn\"),\n\tschemaName: jsii.String(\"schemaName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst schemaIdProperty: glue.CfnTable.SchemaIdProperty = {\n  registryName: 'registryName',\n  schemaArn: 'schemaArn',\n  schemaName: 'schemaName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnTable.SchemaIdProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnTable.SchemaIdProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst schemaIdProperty: glue.CfnTable.SchemaIdProperty = {\n  registryName: 'registryName',\n  schemaArn: 'schemaArn',\n  schemaName: 'schemaName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "8e975b01d5ff51e92d81763ca484228c40cc91cb051cf2bba007460592fb9f90"
    },
    "757cbad84b7d2ab516ccdcd3317fe53eab7deca673b869afd9e55e57ee081876": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nschema_reference_property = glue.CfnTable.SchemaReferenceProperty(\n    schema_id=glue.CfnTable.SchemaIdProperty(\n        registry_name=\"registryName\",\n        schema_arn=\"schemaArn\",\n        schema_name=\"schemaName\"\n    ),\n    schema_version_id=\"schemaVersionId\",\n    schema_version_number=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nSchemaReferenceProperty schemaReferenceProperty = new SchemaReferenceProperty {\n    SchemaId = new SchemaIdProperty {\n        RegistryName = \"registryName\",\n        SchemaArn = \"schemaArn\",\n        SchemaName = \"schemaName\"\n    },\n    SchemaVersionId = \"schemaVersionId\",\n    SchemaVersionNumber = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nSchemaReferenceProperty schemaReferenceProperty = SchemaReferenceProperty.builder()\n        .schemaId(SchemaIdProperty.builder()\n                .registryName(\"registryName\")\n                .schemaArn(\"schemaArn\")\n                .schemaName(\"schemaName\")\n                .build())\n        .schemaVersionId(\"schemaVersionId\")\n        .schemaVersionNumber(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nschemaReferenceProperty := &schemaReferenceProperty{\n\tschemaId: &schemaIdProperty{\n\t\tregistryName: jsii.String(\"registryName\"),\n\t\tschemaArn: jsii.String(\"schemaArn\"),\n\t\tschemaName: jsii.String(\"schemaName\"),\n\t},\n\tschemaVersionId: jsii.String(\"schemaVersionId\"),\n\tschemaVersionNumber: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst schemaReferenceProperty: glue.CfnTable.SchemaReferenceProperty = {\n  schemaId: {\n    registryName: 'registryName',\n    schemaArn: 'schemaArn',\n    schemaName: 'schemaName',\n  },\n  schemaVersionId: 'schemaVersionId',\n  schemaVersionNumber: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnTable.SchemaReferenceProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnTable.SchemaReferenceProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst schemaReferenceProperty: glue.CfnTable.SchemaReferenceProperty = {\n  schemaId: {\n    registryName: 'registryName',\n    schemaArn: 'schemaArn',\n    schemaName: 'schemaName',\n  },\n  schemaVersionId: 'schemaVersionId',\n  schemaVersionNumber: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 5,
        "75": 11,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "74df23b899a2c1043c0ed007cbcd0916dc18e30d235f7266831dd3125db642ab"
    },
    "9603bf9797bb30757e885660c8caf2a21d03c9053484afb1d52e9692b7342919": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# parameters: Any\n\nserde_info_property = glue.CfnTable.SerdeInfoProperty(\n    name=\"name\",\n    parameters=parameters,\n    serialization_library=\"serializationLibrary\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar parameters;\n\nSerdeInfoProperty serdeInfoProperty = new SerdeInfoProperty {\n    Name = \"name\",\n    Parameters = parameters,\n    SerializationLibrary = \"serializationLibrary\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject parameters;\n\nSerdeInfoProperty serdeInfoProperty = SerdeInfoProperty.builder()\n        .name(\"name\")\n        .parameters(parameters)\n        .serializationLibrary(\"serializationLibrary\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar parameters interface{}\nserdeInfoProperty := &serdeInfoProperty{\n\tname: jsii.String(\"name\"),\n\tparameters: parameters,\n\tserializationLibrary: jsii.String(\"serializationLibrary\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\nconst serdeInfoProperty: glue.CfnTable.SerdeInfoProperty = {\n  name: 'name',\n  parameters: parameters,\n  serializationLibrary: 'serializationLibrary',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnTable.SerdeInfoProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnTable.SerdeInfoProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst serdeInfoProperty: glue.CfnTable.SerdeInfoProperty = {\n  name: 'name',\n  parameters: parameters,\n  serializationLibrary: 'serializationLibrary',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "2aa5abc45f51ba28ca92f99a8f28c6716f4de82fd1190f20174265c76451e29a"
    },
    "030635c48a7335fb75bc42552e67a734057608f0a82e42e6635d2bd7d7e64420": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# skewed_column_value_location_maps: Any\n\nskewed_info_property = glue.CfnTable.SkewedInfoProperty(\n    skewed_column_names=[\"skewedColumnNames\"],\n    skewed_column_value_location_maps=skewed_column_value_location_maps,\n    skewed_column_values=[\"skewedColumnValues\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar skewedColumnValueLocationMaps;\n\nSkewedInfoProperty skewedInfoProperty = new SkewedInfoProperty {\n    SkewedColumnNames = new [] { \"skewedColumnNames\" },\n    SkewedColumnValueLocationMaps = skewedColumnValueLocationMaps,\n    SkewedColumnValues = new [] { \"skewedColumnValues\" }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject skewedColumnValueLocationMaps;\n\nSkewedInfoProperty skewedInfoProperty = SkewedInfoProperty.builder()\n        .skewedColumnNames(List.of(\"skewedColumnNames\"))\n        .skewedColumnValueLocationMaps(skewedColumnValueLocationMaps)\n        .skewedColumnValues(List.of(\"skewedColumnValues\"))\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar skewedColumnValueLocationMaps interface{}\nskewedInfoProperty := &skewedInfoProperty{\n\tskewedColumnNames: []*string{\n\t\tjsii.String(\"skewedColumnNames\"),\n\t},\n\tskewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n\tskewedColumnValues: []*string{\n\t\tjsii.String(\"skewedColumnValues\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const skewedColumnValueLocationMaps: any;\nconst skewedInfoProperty: glue.CfnTable.SkewedInfoProperty = {\n  skewedColumnNames: ['skewedColumnNames'],\n  skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n  skewedColumnValues: ['skewedColumnValues'],\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnTable.SkewedInfoProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnTable.SkewedInfoProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const skewedColumnValueLocationMaps: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst skewedInfoProperty: glue.CfnTable.SkewedInfoProperty = {\n  skewedColumnNames: ['skewedColumnNames'],\n  skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n  skewedColumnValues: ['skewedColumnValues'],\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 10,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "192": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "59188ba15dd8cffa44740d8c8e879e01874eb9373d542c504c0e94ac0bb1a20c"
    },
    "56780376bbca6f53cf45f6ea05c331ddcc19270f4eb1086a1a78b0d331fc4235": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# parameters: Any\n# skewed_column_value_location_maps: Any\n\nstorage_descriptor_property = glue.CfnTable.StorageDescriptorProperty(\n    bucket_columns=[\"bucketColumns\"],\n    columns=[glue.CfnTable.ColumnProperty(\n        name=\"name\",\n\n        # the properties below are optional\n        comment=\"comment\",\n        type=\"type\"\n    )],\n    compressed=False,\n    input_format=\"inputFormat\",\n    location=\"location\",\n    number_of_buckets=123,\n    output_format=\"outputFormat\",\n    parameters=parameters,\n    schema_reference=glue.CfnTable.SchemaReferenceProperty(\n        schema_id=glue.CfnTable.SchemaIdProperty(\n            registry_name=\"registryName\",\n            schema_arn=\"schemaArn\",\n            schema_name=\"schemaName\"\n        ),\n        schema_version_id=\"schemaVersionId\",\n        schema_version_number=123\n    ),\n    serde_info=glue.CfnTable.SerdeInfoProperty(\n        name=\"name\",\n        parameters=parameters,\n        serialization_library=\"serializationLibrary\"\n    ),\n    skewed_info=glue.CfnTable.SkewedInfoProperty(\n        skewed_column_names=[\"skewedColumnNames\"],\n        skewed_column_value_location_maps=skewed_column_value_location_maps,\n        skewed_column_values=[\"skewedColumnValues\"]\n    ),\n    sort_columns=[glue.CfnTable.OrderProperty(\n        column=\"column\",\n        sort_order=123\n    )],\n    stored_as_sub_directories=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar parameters;\nvar skewedColumnValueLocationMaps;\n\nStorageDescriptorProperty storageDescriptorProperty = new StorageDescriptorProperty {\n    BucketColumns = new [] { \"bucketColumns\" },\n    Columns = new [] { new ColumnProperty {\n        Name = \"name\",\n\n        // the properties below are optional\n        Comment = \"comment\",\n        Type = \"type\"\n    } },\n    Compressed = false,\n    InputFormat = \"inputFormat\",\n    Location = \"location\",\n    NumberOfBuckets = 123,\n    OutputFormat = \"outputFormat\",\n    Parameters = parameters,\n    SchemaReference = new SchemaReferenceProperty {\n        SchemaId = new SchemaIdProperty {\n            RegistryName = \"registryName\",\n            SchemaArn = \"schemaArn\",\n            SchemaName = \"schemaName\"\n        },\n        SchemaVersionId = \"schemaVersionId\",\n        SchemaVersionNumber = 123\n    },\n    SerdeInfo = new SerdeInfoProperty {\n        Name = \"name\",\n        Parameters = parameters,\n        SerializationLibrary = \"serializationLibrary\"\n    },\n    SkewedInfo = new SkewedInfoProperty {\n        SkewedColumnNames = new [] { \"skewedColumnNames\" },\n        SkewedColumnValueLocationMaps = skewedColumnValueLocationMaps,\n        SkewedColumnValues = new [] { \"skewedColumnValues\" }\n    },\n    SortColumns = new [] { new OrderProperty {\n        Column = \"column\",\n        SortOrder = 123\n    } },\n    StoredAsSubDirectories = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject parameters;\nObject skewedColumnValueLocationMaps;\n\nStorageDescriptorProperty storageDescriptorProperty = StorageDescriptorProperty.builder()\n        .bucketColumns(List.of(\"bucketColumns\"))\n        .columns(List.of(ColumnProperty.builder()\n                .name(\"name\")\n\n                // the properties below are optional\n                .comment(\"comment\")\n                .type(\"type\")\n                .build()))\n        .compressed(false)\n        .inputFormat(\"inputFormat\")\n        .location(\"location\")\n        .numberOfBuckets(123)\n        .outputFormat(\"outputFormat\")\n        .parameters(parameters)\n        .schemaReference(SchemaReferenceProperty.builder()\n                .schemaId(SchemaIdProperty.builder()\n                        .registryName(\"registryName\")\n                        .schemaArn(\"schemaArn\")\n                        .schemaName(\"schemaName\")\n                        .build())\n                .schemaVersionId(\"schemaVersionId\")\n                .schemaVersionNumber(123)\n                .build())\n        .serdeInfo(SerdeInfoProperty.builder()\n                .name(\"name\")\n                .parameters(parameters)\n                .serializationLibrary(\"serializationLibrary\")\n                .build())\n        .skewedInfo(SkewedInfoProperty.builder()\n                .skewedColumnNames(List.of(\"skewedColumnNames\"))\n                .skewedColumnValueLocationMaps(skewedColumnValueLocationMaps)\n                .skewedColumnValues(List.of(\"skewedColumnValues\"))\n                .build())\n        .sortColumns(List.of(OrderProperty.builder()\n                .column(\"column\")\n                .sortOrder(123)\n                .build()))\n        .storedAsSubDirectories(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar parameters interface{}\nvar skewedColumnValueLocationMaps interface{}\nstorageDescriptorProperty := &storageDescriptorProperty{\n\tbucketColumns: []*string{\n\t\tjsii.String(\"bucketColumns\"),\n\t},\n\tcolumns: []interface{}{\n\t\t&columnProperty{\n\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t// the properties below are optional\n\t\t\tcomment: jsii.String(\"comment\"),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n\tcompressed: jsii.Boolean(false),\n\tinputFormat: jsii.String(\"inputFormat\"),\n\tlocation: jsii.String(\"location\"),\n\tnumberOfBuckets: jsii.Number(123),\n\toutputFormat: jsii.String(\"outputFormat\"),\n\tparameters: parameters,\n\tschemaReference: &schemaReferenceProperty{\n\t\tschemaId: &schemaIdProperty{\n\t\t\tregistryName: jsii.String(\"registryName\"),\n\t\t\tschemaArn: jsii.String(\"schemaArn\"),\n\t\t\tschemaName: jsii.String(\"schemaName\"),\n\t\t},\n\t\tschemaVersionId: jsii.String(\"schemaVersionId\"),\n\t\tschemaVersionNumber: jsii.Number(123),\n\t},\n\tserdeInfo: &serdeInfoProperty{\n\t\tname: jsii.String(\"name\"),\n\t\tparameters: parameters,\n\t\tserializationLibrary: jsii.String(\"serializationLibrary\"),\n\t},\n\tskewedInfo: &skewedInfoProperty{\n\t\tskewedColumnNames: []*string{\n\t\t\tjsii.String(\"skewedColumnNames\"),\n\t\t},\n\t\tskewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n\t\tskewedColumnValues: []*string{\n\t\t\tjsii.String(\"skewedColumnValues\"),\n\t\t},\n\t},\n\tsortColumns: []interface{}{\n\t\t&orderProperty{\n\t\t\tcolumn: jsii.String(\"column\"),\n\t\t\tsortOrder: jsii.Number(123),\n\t\t},\n\t},\n\tstoredAsSubDirectories: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\ndeclare const skewedColumnValueLocationMaps: any;\nconst storageDescriptorProperty: glue.CfnTable.StorageDescriptorProperty = {\n  bucketColumns: ['bucketColumns'],\n  columns: [{\n    name: 'name',\n\n    // the properties below are optional\n    comment: 'comment',\n    type: 'type',\n  }],\n  compressed: false,\n  inputFormat: 'inputFormat',\n  location: 'location',\n  numberOfBuckets: 123,\n  outputFormat: 'outputFormat',\n  parameters: parameters,\n  schemaReference: {\n    schemaId: {\n      registryName: 'registryName',\n      schemaArn: 'schemaArn',\n      schemaName: 'schemaName',\n    },\n    schemaVersionId: 'schemaVersionId',\n    schemaVersionNumber: 123,\n  },\n  serdeInfo: {\n    name: 'name',\n    parameters: parameters,\n    serializationLibrary: 'serializationLibrary',\n  },\n  skewedInfo: {\n    skewedColumnNames: ['skewedColumnNames'],\n    skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n    skewedColumnValues: ['skewedColumnValues'],\n  },\n  sortColumns: [{\n    column: 'column',\n    sortOrder: 123,\n  }],\n  storedAsSubDirectories: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnTable.StorageDescriptorProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnTable.StorageDescriptorProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\ndeclare const skewedColumnValueLocationMaps: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst storageDescriptorProperty: glue.CfnTable.StorageDescriptorProperty = {\n  bucketColumns: ['bucketColumns'],\n  columns: [{\n    name: 'name',\n\n    // the properties below are optional\n    comment: 'comment',\n    type: 'type',\n  }],\n  compressed: false,\n  inputFormat: 'inputFormat',\n  location: 'location',\n  numberOfBuckets: 123,\n  outputFormat: 'outputFormat',\n  parameters: parameters,\n  schemaReference: {\n    schemaId: {\n      registryName: 'registryName',\n      schemaArn: 'schemaArn',\n      schemaName: 'schemaName',\n    },\n    schemaVersionId: 'schemaVersionId',\n    schemaVersionNumber: 123,\n  },\n  serdeInfo: {\n    name: 'name',\n    parameters: parameters,\n    serializationLibrary: 'serializationLibrary',\n  },\n  skewedInfo: {\n    skewedColumnNames: ['skewedColumnNames'],\n    skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n    skewedColumnValues: ['skewedColumnValues'],\n  },\n  sortColumns: [{\n    column: 'column',\n    sortOrder: 123,\n  }],\n  storedAsSubDirectories: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 3,
        "10": 17,
        "75": 40,
        "91": 2,
        "125": 2,
        "130": 2,
        "153": 2,
        "169": 1,
        "192": 5,
        "193": 7,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 30,
        "290": 1
      },
      "fqnsFingerprint": "aa69f700bdab056f21b2c0f66786da232b3b1128675347792727292440cc900b"
    },
    "ab274d95210f5053b0f7402d27095b2099bbaf04900a706261c724a352e2b858": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ntable_identifier_property = glue.CfnTable.TableIdentifierProperty(\n    catalog_id=\"catalogId\",\n    database_name=\"databaseName\",\n    name=\"name\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nTableIdentifierProperty tableIdentifierProperty = new TableIdentifierProperty {\n    CatalogId = \"catalogId\",\n    DatabaseName = \"databaseName\",\n    Name = \"name\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nTableIdentifierProperty tableIdentifierProperty = TableIdentifierProperty.builder()\n        .catalogId(\"catalogId\")\n        .databaseName(\"databaseName\")\n        .name(\"name\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ntableIdentifierProperty := &tableIdentifierProperty{\n\tcatalogId: jsii.String(\"catalogId\"),\n\tdatabaseName: jsii.String(\"databaseName\"),\n\tname: jsii.String(\"name\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst tableIdentifierProperty: glue.CfnTable.TableIdentifierProperty = {\n  catalogId: 'catalogId',\n  databaseName: 'databaseName',\n  name: 'name',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnTable.TableIdentifierProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnTable.TableIdentifierProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst tableIdentifierProperty: glue.CfnTable.TableIdentifierProperty = {\n  catalogId: 'catalogId',\n  databaseName: 'databaseName',\n  name: 'name',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "8878d2b0b529247f2015b0b2415fcc6657fe1ad8f5d7249299612f0dee7caeb3"
    },
    "9a908bd91b8999e97955201c85fa07cbf2838e22cd130859f525c7ec5f8e1dd8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# parameters: Any\n# skewed_column_value_location_maps: Any\n\ntable_input_property = glue.CfnTable.TableInputProperty(\n    description=\"description\",\n    name=\"name\",\n    owner=\"owner\",\n    parameters=parameters,\n    partition_keys=[glue.CfnTable.ColumnProperty(\n        name=\"name\",\n\n        # the properties below are optional\n        comment=\"comment\",\n        type=\"type\"\n    )],\n    retention=123,\n    storage_descriptor=glue.CfnTable.StorageDescriptorProperty(\n        bucket_columns=[\"bucketColumns\"],\n        columns=[glue.CfnTable.ColumnProperty(\n            name=\"name\",\n\n            # the properties below are optional\n            comment=\"comment\",\n            type=\"type\"\n        )],\n        compressed=False,\n        input_format=\"inputFormat\",\n        location=\"location\",\n        number_of_buckets=123,\n        output_format=\"outputFormat\",\n        parameters=parameters,\n        schema_reference=glue.CfnTable.SchemaReferenceProperty(\n            schema_id=glue.CfnTable.SchemaIdProperty(\n                registry_name=\"registryName\",\n                schema_arn=\"schemaArn\",\n                schema_name=\"schemaName\"\n            ),\n            schema_version_id=\"schemaVersionId\",\n            schema_version_number=123\n        ),\n        serde_info=glue.CfnTable.SerdeInfoProperty(\n            name=\"name\",\n            parameters=parameters,\n            serialization_library=\"serializationLibrary\"\n        ),\n        skewed_info=glue.CfnTable.SkewedInfoProperty(\n            skewed_column_names=[\"skewedColumnNames\"],\n            skewed_column_value_location_maps=skewed_column_value_location_maps,\n            skewed_column_values=[\"skewedColumnValues\"]\n        ),\n        sort_columns=[glue.CfnTable.OrderProperty(\n            column=\"column\",\n            sort_order=123\n        )],\n        stored_as_sub_directories=False\n    ),\n    table_type=\"tableType\",\n    target_table=glue.CfnTable.TableIdentifierProperty(\n        catalog_id=\"catalogId\",\n        database_name=\"databaseName\",\n        name=\"name\"\n    ),\n    view_expanded_text=\"viewExpandedText\",\n    view_original_text=\"viewOriginalText\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar parameters;\nvar skewedColumnValueLocationMaps;\n\nTableInputProperty tableInputProperty = new TableInputProperty {\n    Description = \"description\",\n    Name = \"name\",\n    Owner = \"owner\",\n    Parameters = parameters,\n    PartitionKeys = new [] { new ColumnProperty {\n        Name = \"name\",\n\n        // the properties below are optional\n        Comment = \"comment\",\n        Type = \"type\"\n    } },\n    Retention = 123,\n    StorageDescriptor = new StorageDescriptorProperty {\n        BucketColumns = new [] { \"bucketColumns\" },\n        Columns = new [] { new ColumnProperty {\n            Name = \"name\",\n\n            // the properties below are optional\n            Comment = \"comment\",\n            Type = \"type\"\n        } },\n        Compressed = false,\n        InputFormat = \"inputFormat\",\n        Location = \"location\",\n        NumberOfBuckets = 123,\n        OutputFormat = \"outputFormat\",\n        Parameters = parameters,\n        SchemaReference = new SchemaReferenceProperty {\n            SchemaId = new SchemaIdProperty {\n                RegistryName = \"registryName\",\n                SchemaArn = \"schemaArn\",\n                SchemaName = \"schemaName\"\n            },\n            SchemaVersionId = \"schemaVersionId\",\n            SchemaVersionNumber = 123\n        },\n        SerdeInfo = new SerdeInfoProperty {\n            Name = \"name\",\n            Parameters = parameters,\n            SerializationLibrary = \"serializationLibrary\"\n        },\n        SkewedInfo = new SkewedInfoProperty {\n            SkewedColumnNames = new [] { \"skewedColumnNames\" },\n            SkewedColumnValueLocationMaps = skewedColumnValueLocationMaps,\n            SkewedColumnValues = new [] { \"skewedColumnValues\" }\n        },\n        SortColumns = new [] { new OrderProperty {\n            Column = \"column\",\n            SortOrder = 123\n        } },\n        StoredAsSubDirectories = false\n    },\n    TableType = \"tableType\",\n    TargetTable = new TableIdentifierProperty {\n        CatalogId = \"catalogId\",\n        DatabaseName = \"databaseName\",\n        Name = \"name\"\n    },\n    ViewExpandedText = \"viewExpandedText\",\n    ViewOriginalText = \"viewOriginalText\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject parameters;\nObject skewedColumnValueLocationMaps;\n\nTableInputProperty tableInputProperty = TableInputProperty.builder()\n        .description(\"description\")\n        .name(\"name\")\n        .owner(\"owner\")\n        .parameters(parameters)\n        .partitionKeys(List.of(ColumnProperty.builder()\n                .name(\"name\")\n\n                // the properties below are optional\n                .comment(\"comment\")\n                .type(\"type\")\n                .build()))\n        .retention(123)\n        .storageDescriptor(StorageDescriptorProperty.builder()\n                .bucketColumns(List.of(\"bucketColumns\"))\n                .columns(List.of(ColumnProperty.builder()\n                        .name(\"name\")\n\n                        // the properties below are optional\n                        .comment(\"comment\")\n                        .type(\"type\")\n                        .build()))\n                .compressed(false)\n                .inputFormat(\"inputFormat\")\n                .location(\"location\")\n                .numberOfBuckets(123)\n                .outputFormat(\"outputFormat\")\n                .parameters(parameters)\n                .schemaReference(SchemaReferenceProperty.builder()\n                        .schemaId(SchemaIdProperty.builder()\n                                .registryName(\"registryName\")\n                                .schemaArn(\"schemaArn\")\n                                .schemaName(\"schemaName\")\n                                .build())\n                        .schemaVersionId(\"schemaVersionId\")\n                        .schemaVersionNumber(123)\n                        .build())\n                .serdeInfo(SerdeInfoProperty.builder()\n                        .name(\"name\")\n                        .parameters(parameters)\n                        .serializationLibrary(\"serializationLibrary\")\n                        .build())\n                .skewedInfo(SkewedInfoProperty.builder()\n                        .skewedColumnNames(List.of(\"skewedColumnNames\"))\n                        .skewedColumnValueLocationMaps(skewedColumnValueLocationMaps)\n                        .skewedColumnValues(List.of(\"skewedColumnValues\"))\n                        .build())\n                .sortColumns(List.of(OrderProperty.builder()\n                        .column(\"column\")\n                        .sortOrder(123)\n                        .build()))\n                .storedAsSubDirectories(false)\n                .build())\n        .tableType(\"tableType\")\n        .targetTable(TableIdentifierProperty.builder()\n                .catalogId(\"catalogId\")\n                .databaseName(\"databaseName\")\n                .name(\"name\")\n                .build())\n        .viewExpandedText(\"viewExpandedText\")\n        .viewOriginalText(\"viewOriginalText\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar parameters interface{}\nvar skewedColumnValueLocationMaps interface{}\ntableInputProperty := &tableInputProperty{\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\towner: jsii.String(\"owner\"),\n\tparameters: parameters,\n\tpartitionKeys: []interface{}{\n\t\t&columnProperty{\n\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t// the properties below are optional\n\t\t\tcomment: jsii.String(\"comment\"),\n\t\t\ttype: jsii.String(\"type\"),\n\t\t},\n\t},\n\tretention: jsii.Number(123),\n\tstorageDescriptor: &storageDescriptorProperty{\n\t\tbucketColumns: []*string{\n\t\t\tjsii.String(\"bucketColumns\"),\n\t\t},\n\t\tcolumns: []interface{}{\n\t\t\t&columnProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcomment: jsii.String(\"comment\"),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\t\tcompressed: jsii.Boolean(false),\n\t\tinputFormat: jsii.String(\"inputFormat\"),\n\t\tlocation: jsii.String(\"location\"),\n\t\tnumberOfBuckets: jsii.Number(123),\n\t\toutputFormat: jsii.String(\"outputFormat\"),\n\t\tparameters: parameters,\n\t\tschemaReference: &schemaReferenceProperty{\n\t\t\tschemaId: &schemaIdProperty{\n\t\t\t\tregistryName: jsii.String(\"registryName\"),\n\t\t\t\tschemaArn: jsii.String(\"schemaArn\"),\n\t\t\t\tschemaName: jsii.String(\"schemaName\"),\n\t\t\t},\n\t\t\tschemaVersionId: jsii.String(\"schemaVersionId\"),\n\t\t\tschemaVersionNumber: jsii.Number(123),\n\t\t},\n\t\tserdeInfo: &serdeInfoProperty{\n\t\t\tname: jsii.String(\"name\"),\n\t\t\tparameters: parameters,\n\t\t\tserializationLibrary: jsii.String(\"serializationLibrary\"),\n\t\t},\n\t\tskewedInfo: &skewedInfoProperty{\n\t\t\tskewedColumnNames: []*string{\n\t\t\t\tjsii.String(\"skewedColumnNames\"),\n\t\t\t},\n\t\t\tskewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n\t\t\tskewedColumnValues: []*string{\n\t\t\t\tjsii.String(\"skewedColumnValues\"),\n\t\t\t},\n\t\t},\n\t\tsortColumns: []interface{}{\n\t\t\t&orderProperty{\n\t\t\t\tcolumn: jsii.String(\"column\"),\n\t\t\t\tsortOrder: jsii.Number(123),\n\t\t\t},\n\t\t},\n\t\tstoredAsSubDirectories: jsii.Boolean(false),\n\t},\n\ttableType: jsii.String(\"tableType\"),\n\ttargetTable: &tableIdentifierProperty{\n\t\tcatalogId: jsii.String(\"catalogId\"),\n\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\tname: jsii.String(\"name\"),\n\t},\n\tviewExpandedText: jsii.String(\"viewExpandedText\"),\n\tviewOriginalText: jsii.String(\"viewOriginalText\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\ndeclare const skewedColumnValueLocationMaps: any;\nconst tableInputProperty: glue.CfnTable.TableInputProperty = {\n  description: 'description',\n  name: 'name',\n  owner: 'owner',\n  parameters: parameters,\n  partitionKeys: [{\n    name: 'name',\n\n    // the properties below are optional\n    comment: 'comment',\n    type: 'type',\n  }],\n  retention: 123,\n  storageDescriptor: {\n    bucketColumns: ['bucketColumns'],\n    columns: [{\n      name: 'name',\n\n      // the properties below are optional\n      comment: 'comment',\n      type: 'type',\n    }],\n    compressed: false,\n    inputFormat: 'inputFormat',\n    location: 'location',\n    numberOfBuckets: 123,\n    outputFormat: 'outputFormat',\n    parameters: parameters,\n    schemaReference: {\n      schemaId: {\n        registryName: 'registryName',\n        schemaArn: 'schemaArn',\n        schemaName: 'schemaName',\n      },\n      schemaVersionId: 'schemaVersionId',\n      schemaVersionNumber: 123,\n    },\n    serdeInfo: {\n      name: 'name',\n      parameters: parameters,\n      serializationLibrary: 'serializationLibrary',\n    },\n    skewedInfo: {\n      skewedColumnNames: ['skewedColumnNames'],\n      skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n      skewedColumnValues: ['skewedColumnValues'],\n    },\n    sortColumns: [{\n      column: 'column',\n      sortOrder: 123,\n    }],\n    storedAsSubDirectories: false,\n  },\n  tableType: 'tableType',\n  targetTable: {\n    catalogId: 'catalogId',\n    databaseName: 'databaseName',\n    name: 'name',\n  },\n  viewExpandedText: 'viewExpandedText',\n  viewOriginalText: 'viewOriginalText',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnTable.TableInputProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnTable.TableInputProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\ndeclare const skewedColumnValueLocationMaps: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst tableInputProperty: glue.CfnTable.TableInputProperty = {\n  description: 'description',\n  name: 'name',\n  owner: 'owner',\n  parameters: parameters,\n  partitionKeys: [{\n    name: 'name',\n\n    // the properties below are optional\n    comment: 'comment',\n    type: 'type',\n  }],\n  retention: 123,\n  storageDescriptor: {\n    bucketColumns: ['bucketColumns'],\n    columns: [{\n      name: 'name',\n\n      // the properties below are optional\n      comment: 'comment',\n      type: 'type',\n    }],\n    compressed: false,\n    inputFormat: 'inputFormat',\n    location: 'location',\n    numberOfBuckets: 123,\n    outputFormat: 'outputFormat',\n    parameters: parameters,\n    schemaReference: {\n      schemaId: {\n        registryName: 'registryName',\n        schemaArn: 'schemaArn',\n        schemaName: 'schemaName',\n      },\n      schemaVersionId: 'schemaVersionId',\n      schemaVersionNumber: 123,\n    },\n    serdeInfo: {\n      name: 'name',\n      parameters: parameters,\n      serializationLibrary: 'serializationLibrary',\n    },\n    skewedInfo: {\n      skewedColumnNames: ['skewedColumnNames'],\n      skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n      skewedColumnValues: ['skewedColumnValues'],\n    },\n    sortColumns: [{\n      column: 'column',\n      sortOrder: 123,\n    }],\n    storedAsSubDirectories: false,\n  },\n  tableType: 'tableType',\n  targetTable: {\n    catalogId: 'catalogId',\n    databaseName: 'databaseName',\n    name: 'name',\n  },\n  viewExpandedText: 'viewExpandedText',\n  viewOriginalText: 'viewOriginalText',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 29,
        "75": 58,
        "91": 2,
        "125": 2,
        "130": 2,
        "153": 2,
        "169": 1,
        "192": 6,
        "193": 10,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 47,
        "290": 1
      },
      "fqnsFingerprint": "ccbe07a4c01a1ef300f702983af011c8339a21aab463d646764934aa8881520d"
    },
    "7d33e9d97a82cde26f473506f7adc892009806159824b25d237689ee9c7272a8": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# parameters: Any\n# skewed_column_value_location_maps: Any\n\ncfn_table_props = glue.CfnTableProps(\n    catalog_id=\"catalogId\",\n    database_name=\"databaseName\",\n    table_input=glue.CfnTable.TableInputProperty(\n        description=\"description\",\n        name=\"name\",\n        owner=\"owner\",\n        parameters=parameters,\n        partition_keys=[glue.CfnTable.ColumnProperty(\n            name=\"name\",\n\n            # the properties below are optional\n            comment=\"comment\",\n            type=\"type\"\n        )],\n        retention=123,\n        storage_descriptor=glue.CfnTable.StorageDescriptorProperty(\n            bucket_columns=[\"bucketColumns\"],\n            columns=[glue.CfnTable.ColumnProperty(\n                name=\"name\",\n\n                # the properties below are optional\n                comment=\"comment\",\n                type=\"type\"\n            )],\n            compressed=False,\n            input_format=\"inputFormat\",\n            location=\"location\",\n            number_of_buckets=123,\n            output_format=\"outputFormat\",\n            parameters=parameters,\n            schema_reference=glue.CfnTable.SchemaReferenceProperty(\n                schema_id=glue.CfnTable.SchemaIdProperty(\n                    registry_name=\"registryName\",\n                    schema_arn=\"schemaArn\",\n                    schema_name=\"schemaName\"\n                ),\n                schema_version_id=\"schemaVersionId\",\n                schema_version_number=123\n            ),\n            serde_info=glue.CfnTable.SerdeInfoProperty(\n                name=\"name\",\n                parameters=parameters,\n                serialization_library=\"serializationLibrary\"\n            ),\n            skewed_info=glue.CfnTable.SkewedInfoProperty(\n                skewed_column_names=[\"skewedColumnNames\"],\n                skewed_column_value_location_maps=skewed_column_value_location_maps,\n                skewed_column_values=[\"skewedColumnValues\"]\n            ),\n            sort_columns=[glue.CfnTable.OrderProperty(\n                column=\"column\",\n                sort_order=123\n            )],\n            stored_as_sub_directories=False\n        ),\n        table_type=\"tableType\",\n        target_table=glue.CfnTable.TableIdentifierProperty(\n            catalog_id=\"catalogId\",\n            database_name=\"databaseName\",\n            name=\"name\"\n        ),\n        view_expanded_text=\"viewExpandedText\",\n        view_original_text=\"viewOriginalText\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar parameters;\nvar skewedColumnValueLocationMaps;\n\nCfnTableProps cfnTableProps = new CfnTableProps {\n    CatalogId = \"catalogId\",\n    DatabaseName = \"databaseName\",\n    TableInput = new TableInputProperty {\n        Description = \"description\",\n        Name = \"name\",\n        Owner = \"owner\",\n        Parameters = parameters,\n        PartitionKeys = new [] { new ColumnProperty {\n            Name = \"name\",\n\n            // the properties below are optional\n            Comment = \"comment\",\n            Type = \"type\"\n        } },\n        Retention = 123,\n        StorageDescriptor = new StorageDescriptorProperty {\n            BucketColumns = new [] { \"bucketColumns\" },\n            Columns = new [] { new ColumnProperty {\n                Name = \"name\",\n\n                // the properties below are optional\n                Comment = \"comment\",\n                Type = \"type\"\n            } },\n            Compressed = false,\n            InputFormat = \"inputFormat\",\n            Location = \"location\",\n            NumberOfBuckets = 123,\n            OutputFormat = \"outputFormat\",\n            Parameters = parameters,\n            SchemaReference = new SchemaReferenceProperty {\n                SchemaId = new SchemaIdProperty {\n                    RegistryName = \"registryName\",\n                    SchemaArn = \"schemaArn\",\n                    SchemaName = \"schemaName\"\n                },\n                SchemaVersionId = \"schemaVersionId\",\n                SchemaVersionNumber = 123\n            },\n            SerdeInfo = new SerdeInfoProperty {\n                Name = \"name\",\n                Parameters = parameters,\n                SerializationLibrary = \"serializationLibrary\"\n            },\n            SkewedInfo = new SkewedInfoProperty {\n                SkewedColumnNames = new [] { \"skewedColumnNames\" },\n                SkewedColumnValueLocationMaps = skewedColumnValueLocationMaps,\n                SkewedColumnValues = new [] { \"skewedColumnValues\" }\n            },\n            SortColumns = new [] { new OrderProperty {\n                Column = \"column\",\n                SortOrder = 123\n            } },\n            StoredAsSubDirectories = false\n        },\n        TableType = \"tableType\",\n        TargetTable = new TableIdentifierProperty {\n            CatalogId = \"catalogId\",\n            DatabaseName = \"databaseName\",\n            Name = \"name\"\n        },\n        ViewExpandedText = \"viewExpandedText\",\n        ViewOriginalText = \"viewOriginalText\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject parameters;\nObject skewedColumnValueLocationMaps;\n\nCfnTableProps cfnTableProps = CfnTableProps.builder()\n        .catalogId(\"catalogId\")\n        .databaseName(\"databaseName\")\n        .tableInput(TableInputProperty.builder()\n                .description(\"description\")\n                .name(\"name\")\n                .owner(\"owner\")\n                .parameters(parameters)\n                .partitionKeys(List.of(ColumnProperty.builder()\n                        .name(\"name\")\n\n                        // the properties below are optional\n                        .comment(\"comment\")\n                        .type(\"type\")\n                        .build()))\n                .retention(123)\n                .storageDescriptor(StorageDescriptorProperty.builder()\n                        .bucketColumns(List.of(\"bucketColumns\"))\n                        .columns(List.of(ColumnProperty.builder()\n                                .name(\"name\")\n\n                                // the properties below are optional\n                                .comment(\"comment\")\n                                .type(\"type\")\n                                .build()))\n                        .compressed(false)\n                        .inputFormat(\"inputFormat\")\n                        .location(\"location\")\n                        .numberOfBuckets(123)\n                        .outputFormat(\"outputFormat\")\n                        .parameters(parameters)\n                        .schemaReference(SchemaReferenceProperty.builder()\n                                .schemaId(SchemaIdProperty.builder()\n                                        .registryName(\"registryName\")\n                                        .schemaArn(\"schemaArn\")\n                                        .schemaName(\"schemaName\")\n                                        .build())\n                                .schemaVersionId(\"schemaVersionId\")\n                                .schemaVersionNumber(123)\n                                .build())\n                        .serdeInfo(SerdeInfoProperty.builder()\n                                .name(\"name\")\n                                .parameters(parameters)\n                                .serializationLibrary(\"serializationLibrary\")\n                                .build())\n                        .skewedInfo(SkewedInfoProperty.builder()\n                                .skewedColumnNames(List.of(\"skewedColumnNames\"))\n                                .skewedColumnValueLocationMaps(skewedColumnValueLocationMaps)\n                                .skewedColumnValues(List.of(\"skewedColumnValues\"))\n                                .build())\n                        .sortColumns(List.of(OrderProperty.builder()\n                                .column(\"column\")\n                                .sortOrder(123)\n                                .build()))\n                        .storedAsSubDirectories(false)\n                        .build())\n                .tableType(\"tableType\")\n                .targetTable(TableIdentifierProperty.builder()\n                        .catalogId(\"catalogId\")\n                        .databaseName(\"databaseName\")\n                        .name(\"name\")\n                        .build())\n                .viewExpandedText(\"viewExpandedText\")\n                .viewOriginalText(\"viewOriginalText\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar parameters interface{}\nvar skewedColumnValueLocationMaps interface{}\ncfnTableProps := &cfnTableProps{\n\tcatalogId: jsii.String(\"catalogId\"),\n\tdatabaseName: jsii.String(\"databaseName\"),\n\ttableInput: &tableInputProperty{\n\t\tdescription: jsii.String(\"description\"),\n\t\tname: jsii.String(\"name\"),\n\t\towner: jsii.String(\"owner\"),\n\t\tparameters: parameters,\n\t\tpartitionKeys: []interface{}{\n\t\t\t&columnProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t\t// the properties below are optional\n\t\t\t\tcomment: jsii.String(\"comment\"),\n\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t},\n\t\t},\n\t\tretention: jsii.Number(123),\n\t\tstorageDescriptor: &storageDescriptorProperty{\n\t\t\tbucketColumns: []*string{\n\t\t\t\tjsii.String(\"bucketColumns\"),\n\t\t\t},\n\t\t\tcolumns: []interface{}{\n\t\t\t\t&columnProperty{\n\t\t\t\t\tname: jsii.String(\"name\"),\n\n\t\t\t\t\t// the properties below are optional\n\t\t\t\t\tcomment: jsii.String(\"comment\"),\n\t\t\t\t\ttype: jsii.String(\"type\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tcompressed: jsii.Boolean(false),\n\t\t\tinputFormat: jsii.String(\"inputFormat\"),\n\t\t\tlocation: jsii.String(\"location\"),\n\t\t\tnumberOfBuckets: jsii.Number(123),\n\t\t\toutputFormat: jsii.String(\"outputFormat\"),\n\t\t\tparameters: parameters,\n\t\t\tschemaReference: &schemaReferenceProperty{\n\t\t\t\tschemaId: &schemaIdProperty{\n\t\t\t\t\tregistryName: jsii.String(\"registryName\"),\n\t\t\t\t\tschemaArn: jsii.String(\"schemaArn\"),\n\t\t\t\t\tschemaName: jsii.String(\"schemaName\"),\n\t\t\t\t},\n\t\t\t\tschemaVersionId: jsii.String(\"schemaVersionId\"),\n\t\t\t\tschemaVersionNumber: jsii.Number(123),\n\t\t\t},\n\t\t\tserdeInfo: &serdeInfoProperty{\n\t\t\t\tname: jsii.String(\"name\"),\n\t\t\t\tparameters: parameters,\n\t\t\t\tserializationLibrary: jsii.String(\"serializationLibrary\"),\n\t\t\t},\n\t\t\tskewedInfo: &skewedInfoProperty{\n\t\t\t\tskewedColumnNames: []*string{\n\t\t\t\t\tjsii.String(\"skewedColumnNames\"),\n\t\t\t\t},\n\t\t\t\tskewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n\t\t\t\tskewedColumnValues: []*string{\n\t\t\t\t\tjsii.String(\"skewedColumnValues\"),\n\t\t\t\t},\n\t\t\t},\n\t\t\tsortColumns: []interface{}{\n\t\t\t\t&orderProperty{\n\t\t\t\t\tcolumn: jsii.String(\"column\"),\n\t\t\t\t\tsortOrder: jsii.Number(123),\n\t\t\t\t},\n\t\t\t},\n\t\t\tstoredAsSubDirectories: jsii.Boolean(false),\n\t\t},\n\t\ttableType: jsii.String(\"tableType\"),\n\t\ttargetTable: &tableIdentifierProperty{\n\t\t\tcatalogId: jsii.String(\"catalogId\"),\n\t\t\tdatabaseName: jsii.String(\"databaseName\"),\n\t\t\tname: jsii.String(\"name\"),\n\t\t},\n\t\tviewExpandedText: jsii.String(\"viewExpandedText\"),\n\t\tviewOriginalText: jsii.String(\"viewOriginalText\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\ndeclare const skewedColumnValueLocationMaps: any;\nconst cfnTableProps: glue.CfnTableProps = {\n  catalogId: 'catalogId',\n  databaseName: 'databaseName',\n  tableInput: {\n    description: 'description',\n    name: 'name',\n    owner: 'owner',\n    parameters: parameters,\n    partitionKeys: [{\n      name: 'name',\n\n      // the properties below are optional\n      comment: 'comment',\n      type: 'type',\n    }],\n    retention: 123,\n    storageDescriptor: {\n      bucketColumns: ['bucketColumns'],\n      columns: [{\n        name: 'name',\n\n        // the properties below are optional\n        comment: 'comment',\n        type: 'type',\n      }],\n      compressed: false,\n      inputFormat: 'inputFormat',\n      location: 'location',\n      numberOfBuckets: 123,\n      outputFormat: 'outputFormat',\n      parameters: parameters,\n      schemaReference: {\n        schemaId: {\n          registryName: 'registryName',\n          schemaArn: 'schemaArn',\n          schemaName: 'schemaName',\n        },\n        schemaVersionId: 'schemaVersionId',\n        schemaVersionNumber: 123,\n      },\n      serdeInfo: {\n        name: 'name',\n        parameters: parameters,\n        serializationLibrary: 'serializationLibrary',\n      },\n      skewedInfo: {\n        skewedColumnNames: ['skewedColumnNames'],\n        skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n        skewedColumnValues: ['skewedColumnValues'],\n      },\n      sortColumns: [{\n        column: 'column',\n        sortOrder: 123,\n      }],\n      storedAsSubDirectories: false,\n    },\n    tableType: 'tableType',\n    targetTable: {\n      catalogId: 'catalogId',\n      databaseName: 'databaseName',\n      name: 'name',\n    },\n    viewExpandedText: 'viewExpandedText',\n    viewOriginalText: 'viewOriginalText',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnTableProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnTableProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const parameters: any;\ndeclare const skewedColumnValueLocationMaps: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnTableProps: glue.CfnTableProps = {\n  catalogId: 'catalogId',\n  databaseName: 'databaseName',\n  tableInput: {\n    description: 'description',\n    name: 'name',\n    owner: 'owner',\n    parameters: parameters,\n    partitionKeys: [{\n      name: 'name',\n\n      // the properties below are optional\n      comment: 'comment',\n      type: 'type',\n    }],\n    retention: 123,\n    storageDescriptor: {\n      bucketColumns: ['bucketColumns'],\n      columns: [{\n        name: 'name',\n\n        // the properties below are optional\n        comment: 'comment',\n        type: 'type',\n      }],\n      compressed: false,\n      inputFormat: 'inputFormat',\n      location: 'location',\n      numberOfBuckets: 123,\n      outputFormat: 'outputFormat',\n      parameters: parameters,\n      schemaReference: {\n        schemaId: {\n          registryName: 'registryName',\n          schemaArn: 'schemaArn',\n          schemaName: 'schemaName',\n        },\n        schemaVersionId: 'schemaVersionId',\n        schemaVersionNumber: 123,\n      },\n      serdeInfo: {\n        name: 'name',\n        parameters: parameters,\n        serializationLibrary: 'serializationLibrary',\n      },\n      skewedInfo: {\n        skewedColumnNames: ['skewedColumnNames'],\n        skewedColumnValueLocationMaps: skewedColumnValueLocationMaps,\n        skewedColumnValues: ['skewedColumnValues'],\n      },\n      sortColumns: [{\n        column: 'column',\n        sortOrder: 123,\n      }],\n      storedAsSubDirectories: false,\n    },\n    tableType: 'tableType',\n    targetTable: {\n      catalogId: 'catalogId',\n      databaseName: 'databaseName',\n      name: 'name',\n    },\n    viewExpandedText: 'viewExpandedText',\n    viewOriginalText: 'viewOriginalText',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 4,
        "10": 31,
        "75": 60,
        "91": 2,
        "125": 2,
        "130": 2,
        "153": 1,
        "169": 1,
        "192": 6,
        "193": 11,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 50,
        "290": 1
      },
      "fqnsFingerprint": "20b775e6a4765badf56347aac3d3369999658656149348e5b9d71798d000efaf"
    },
    "bb03e8c2f97f75d78115e41da3f2b5d19c6fa60e3b7820cf7c3149d07f0c9106": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# arguments_: Any\n# tags: Any\n\ncfn_trigger = glue.CfnTrigger(self, \"MyCfnTrigger\",\n    actions=[glue.CfnTrigger.ActionProperty(\n        arguments=arguments_,\n        crawler_name=\"crawlerName\",\n        job_name=\"jobName\",\n        notification_property=glue.CfnTrigger.NotificationPropertyProperty(\n            notify_delay_after=123\n        ),\n        security_configuration=\"securityConfiguration\",\n        timeout=123\n    )],\n    type=\"type\",\n\n    # the properties below are optional\n    description=\"description\",\n    name=\"name\",\n    predicate=glue.CfnTrigger.PredicateProperty(\n        conditions=[glue.CfnTrigger.ConditionProperty(\n            crawler_name=\"crawlerName\",\n            crawl_state=\"crawlState\",\n            job_name=\"jobName\",\n            logical_operator=\"logicalOperator\",\n            state=\"state\"\n        )],\n        logical=\"logical\"\n    ),\n    schedule=\"schedule\",\n    start_on_creation=False,\n    tags=tags,\n    workflow_name=\"workflowName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar arguments_;\nvar tags;\n\nCfnTrigger cfnTrigger = new CfnTrigger(this, \"MyCfnTrigger\", new CfnTriggerProps {\n    Actions = new [] { new ActionProperty {\n        Arguments = arguments_,\n        CrawlerName = \"crawlerName\",\n        JobName = \"jobName\",\n        NotificationProperty = new NotificationPropertyProperty {\n            NotifyDelayAfter = 123\n        },\n        SecurityConfiguration = \"securityConfiguration\",\n        Timeout = 123\n    } },\n    Type = \"type\",\n\n    // the properties below are optional\n    Description = \"description\",\n    Name = \"name\",\n    Predicate = new PredicateProperty {\n        Conditions = new [] { new ConditionProperty {\n            CrawlerName = \"crawlerName\",\n            CrawlState = \"crawlState\",\n            JobName = \"jobName\",\n            LogicalOperator = \"logicalOperator\",\n            State = \"state\"\n        } },\n        Logical = \"logical\"\n    },\n    Schedule = \"schedule\",\n    StartOnCreation = false,\n    Tags = tags,\n    WorkflowName = \"workflowName\"\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject arguments_;\nObject tags;\n\nCfnTrigger cfnTrigger = CfnTrigger.Builder.create(this, \"MyCfnTrigger\")\n        .actions(List.of(ActionProperty.builder()\n                .arguments(arguments_)\n                .crawlerName(\"crawlerName\")\n                .jobName(\"jobName\")\n                .notificationProperty(NotificationPropertyProperty.builder()\n                        .notifyDelayAfter(123)\n                        .build())\n                .securityConfiguration(\"securityConfiguration\")\n                .timeout(123)\n                .build()))\n        .type(\"type\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .name(\"name\")\n        .predicate(PredicateProperty.builder()\n                .conditions(List.of(ConditionProperty.builder()\n                        .crawlerName(\"crawlerName\")\n                        .crawlState(\"crawlState\")\n                        .jobName(\"jobName\")\n                        .logicalOperator(\"logicalOperator\")\n                        .state(\"state\")\n                        .build()))\n                .logical(\"logical\")\n                .build())\n        .schedule(\"schedule\")\n        .startOnCreation(false)\n        .tags(tags)\n        .workflowName(\"workflowName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar arguments_ interface{}\nvar tags interface{}\ncfnTrigger := glue.NewCfnTrigger(this, jsii.String(\"MyCfnTrigger\"), &cfnTriggerProps{\n\tactions: []interface{}{\n\t\t&actionProperty{\n\t\t\targuments: arguments_,\n\t\t\tcrawlerName: jsii.String(\"crawlerName\"),\n\t\t\tjobName: jsii.String(\"jobName\"),\n\t\t\tnotificationProperty: &notificationPropertyProperty{\n\t\t\t\tnotifyDelayAfter: jsii.Number(123),\n\t\t\t},\n\t\t\tsecurityConfiguration: jsii.String(\"securityConfiguration\"),\n\t\t\ttimeout: jsii.Number(123),\n\t\t},\n\t},\n\ttype: jsii.String(\"type\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\tpredicate: &predicateProperty{\n\t\tconditions: []interface{}{\n\t\t\t&conditionProperty{\n\t\t\t\tcrawlerName: jsii.String(\"crawlerName\"),\n\t\t\t\tcrawlState: jsii.String(\"crawlState\"),\n\t\t\t\tjobName: jsii.String(\"jobName\"),\n\t\t\t\tlogicalOperator: jsii.String(\"logicalOperator\"),\n\t\t\t\tstate: jsii.String(\"state\"),\n\t\t\t},\n\t\t},\n\t\tlogical: jsii.String(\"logical\"),\n\t},\n\tschedule: jsii.String(\"schedule\"),\n\tstartOnCreation: jsii.Boolean(false),\n\ttags: tags,\n\tworkflowName: jsii.String(\"workflowName\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const arguments_: any;\ndeclare const tags: any;\nconst cfnTrigger = new glue.CfnTrigger(this, 'MyCfnTrigger', {\n  actions: [{\n    arguments: arguments_,\n    crawlerName: 'crawlerName',\n    jobName: 'jobName',\n    notificationProperty: {\n      notifyDelayAfter: 123,\n    },\n    securityConfiguration: 'securityConfiguration',\n    timeout: 123,\n  }],\n  type: 'type',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  predicate: {\n    conditions: [{\n      crawlerName: 'crawlerName',\n      crawlState: 'crawlState',\n      jobName: 'jobName',\n      logicalOperator: 'logicalOperator',\n      state: 'state',\n    }],\n    logical: 'logical',\n  },\n  schedule: 'schedule',\n  startOnCreation: false,\n  tags: tags,\n  workflowName: 'workflowName',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnTrigger"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnTrigger",
        "@aws-cdk/aws-glue.CfnTriggerProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const arguments_: any;\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnTrigger = new glue.CfnTrigger(this, 'MyCfnTrigger', {\n  actions: [{\n    arguments: arguments_,\n    crawlerName: 'crawlerName',\n    jobName: 'jobName',\n    notificationProperty: {\n      notifyDelayAfter: 123,\n    },\n    securityConfiguration: 'securityConfiguration',\n    timeout: 123,\n  }],\n  type: 'type',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  predicate: {\n    conditions: [{\n      crawlerName: 'crawlerName',\n      crawlState: 'crawlState',\n      jobName: 'jobName',\n      logicalOperator: 'logicalOperator',\n      state: 'state',\n    }],\n    logical: 'logical',\n  },\n  schedule: 'schedule',\n  startOnCreation: false,\n  tags: tags,\n  workflowName: 'workflowName',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 16,
        "75": 31,
        "91": 1,
        "104": 1,
        "125": 2,
        "130": 2,
        "192": 2,
        "193": 5,
        "194": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 23,
        "290": 1
      },
      "fqnsFingerprint": "af4000b899341b5d4db9f65d6980a596a85dd6f7a936fb45049cc18c832320b1"
    },
    "e4c38c348281803115d8b8648c7e671d82da892fb14a829b3254312cd629bf79": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# arguments_: Any\n\naction_property = glue.CfnTrigger.ActionProperty(\n    arguments=arguments_,\n    crawler_name=\"crawlerName\",\n    job_name=\"jobName\",\n    notification_property=glue.CfnTrigger.NotificationPropertyProperty(\n        notify_delay_after=123\n    ),\n    security_configuration=\"securityConfiguration\",\n    timeout=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar arguments_;\n\nActionProperty actionProperty = new ActionProperty {\n    Arguments = arguments_,\n    CrawlerName = \"crawlerName\",\n    JobName = \"jobName\",\n    NotificationProperty = new NotificationPropertyProperty {\n        NotifyDelayAfter = 123\n    },\n    SecurityConfiguration = \"securityConfiguration\",\n    Timeout = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject arguments_;\n\nActionProperty actionProperty = ActionProperty.builder()\n        .arguments(arguments_)\n        .crawlerName(\"crawlerName\")\n        .jobName(\"jobName\")\n        .notificationProperty(NotificationPropertyProperty.builder()\n                .notifyDelayAfter(123)\n                .build())\n        .securityConfiguration(\"securityConfiguration\")\n        .timeout(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar arguments_ interface{}\nactionProperty := &actionProperty{\n\targuments: arguments_,\n\tcrawlerName: jsii.String(\"crawlerName\"),\n\tjobName: jsii.String(\"jobName\"),\n\tnotificationProperty: &notificationPropertyProperty{\n\t\tnotifyDelayAfter: jsii.Number(123),\n\t},\n\tsecurityConfiguration: jsii.String(\"securityConfiguration\"),\n\ttimeout: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const arguments_: any;\nconst actionProperty: glue.CfnTrigger.ActionProperty = {\n  arguments: arguments_,\n  crawlerName: 'crawlerName',\n  jobName: 'jobName',\n  notificationProperty: {\n    notifyDelayAfter: 123,\n  },\n  securityConfiguration: 'securityConfiguration',\n  timeout: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnTrigger.ActionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnTrigger.ActionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const arguments_: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst actionProperty: glue.CfnTrigger.ActionProperty = {\n  arguments: arguments_,\n  crawlerName: 'crawlerName',\n  jobName: 'jobName',\n  notificationProperty: {\n    notifyDelayAfter: 123,\n  },\n  securityConfiguration: 'securityConfiguration',\n  timeout: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 4,
        "75": 14,
        "125": 1,
        "130": 1,
        "153": 2,
        "169": 1,
        "193": 2,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "803163db13239cfd6dc76d587a1562c7e0cb192d9d774860f2bdfec62e5c7db2"
    },
    "1138d4e314760b614876f8133a200d79a1ea12d0c84518c99042d842762a24cf": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncondition_property = glue.CfnTrigger.ConditionProperty(\n    crawler_name=\"crawlerName\",\n    crawl_state=\"crawlState\",\n    job_name=\"jobName\",\n    logical_operator=\"logicalOperator\",\n    state=\"state\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nConditionProperty conditionProperty = new ConditionProperty {\n    CrawlerName = \"crawlerName\",\n    CrawlState = \"crawlState\",\n    JobName = \"jobName\",\n    LogicalOperator = \"logicalOperator\",\n    State = \"state\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nConditionProperty conditionProperty = ConditionProperty.builder()\n        .crawlerName(\"crawlerName\")\n        .crawlState(\"crawlState\")\n        .jobName(\"jobName\")\n        .logicalOperator(\"logicalOperator\")\n        .state(\"state\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nconditionProperty := &conditionProperty{\n\tcrawlerName: jsii.String(\"crawlerName\"),\n\tcrawlState: jsii.String(\"crawlState\"),\n\tjobName: jsii.String(\"jobName\"),\n\tlogicalOperator: jsii.String(\"logicalOperator\"),\n\tstate: jsii.String(\"state\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst conditionProperty: glue.CfnTrigger.ConditionProperty = {\n  crawlerName: 'crawlerName',\n  crawlState: 'crawlState',\n  jobName: 'jobName',\n  logicalOperator: 'logicalOperator',\n  state: 'state',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnTrigger.ConditionProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnTrigger.ConditionProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst conditionProperty: glue.CfnTrigger.ConditionProperty = {\n  crawlerName: 'crawlerName',\n  crawlState: 'crawlState',\n  jobName: 'jobName',\n  logicalOperator: 'logicalOperator',\n  state: 'state',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 10,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "1fa220e88b026ad5222605c1cc8d2232e154af9a68d700855ec8e3f6ad24cf80"
    },
    "e39728177560f3e4ec2687e7baa1b33cccd37295b1e7f399d5fbfa4fcdcb14f7": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nnotification_property_property = glue.CfnTrigger.NotificationPropertyProperty(\n    notify_delay_after=123\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nNotificationPropertyProperty notificationPropertyProperty = new NotificationPropertyProperty {\n    NotifyDelayAfter = 123\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nNotificationPropertyProperty notificationPropertyProperty = NotificationPropertyProperty.builder()\n        .notifyDelayAfter(123)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nnotificationPropertyProperty := &notificationPropertyProperty{\n\tnotifyDelayAfter: jsii.Number(123),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst notificationPropertyProperty: glue.CfnTrigger.NotificationPropertyProperty = {\n  notifyDelayAfter: 123,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnTrigger.NotificationPropertyProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnTrigger.NotificationPropertyProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst notificationPropertyProperty: glue.CfnTrigger.NotificationPropertyProperty = {\n  notifyDelayAfter: 123,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 1,
        "10": 1,
        "75": 6,
        "153": 2,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 1,
        "290": 1
      },
      "fqnsFingerprint": "47a382ac970877893e968f23311ee1b80ae8eb49c4efe62e5a4273e8ff3021ed"
    },
    "f9d8f354969568d658f6450d15bd31baae50494541c95a0ce8c706a528b6aeb5": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\npredicate_property = glue.CfnTrigger.PredicateProperty(\n    conditions=[glue.CfnTrigger.ConditionProperty(\n        crawler_name=\"crawlerName\",\n        crawl_state=\"crawlState\",\n        job_name=\"jobName\",\n        logical_operator=\"logicalOperator\",\n        state=\"state\"\n    )],\n    logical=\"logical\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nPredicateProperty predicateProperty = new PredicateProperty {\n    Conditions = new [] { new ConditionProperty {\n        CrawlerName = \"crawlerName\",\n        CrawlState = \"crawlState\",\n        JobName = \"jobName\",\n        LogicalOperator = \"logicalOperator\",\n        State = \"state\"\n    } },\n    Logical = \"logical\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nPredicateProperty predicateProperty = PredicateProperty.builder()\n        .conditions(List.of(ConditionProperty.builder()\n                .crawlerName(\"crawlerName\")\n                .crawlState(\"crawlState\")\n                .jobName(\"jobName\")\n                .logicalOperator(\"logicalOperator\")\n                .state(\"state\")\n                .build()))\n        .logical(\"logical\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\npredicateProperty := &predicateProperty{\n\tconditions: []interface{}{\n\t\t&conditionProperty{\n\t\t\tcrawlerName: jsii.String(\"crawlerName\"),\n\t\t\tcrawlState: jsii.String(\"crawlState\"),\n\t\t\tjobName: jsii.String(\"jobName\"),\n\t\t\tlogicalOperator: jsii.String(\"logicalOperator\"),\n\t\t\tstate: jsii.String(\"state\"),\n\t\t},\n\t},\n\tlogical: jsii.String(\"logical\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst predicateProperty: glue.CfnTrigger.PredicateProperty = {\n  conditions: [{\n    crawlerName: 'crawlerName',\n    crawlState: 'crawlState',\n    jobName: 'jobName',\n    logicalOperator: 'logicalOperator',\n    state: 'state',\n  }],\n  logical: 'logical',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnTrigger.PredicateProperty"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnTrigger.PredicateProperty"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst predicateProperty: glue.CfnTrigger.PredicateProperty = {\n  conditions: [{\n    crawlerName: 'crawlerName',\n    crawlState: 'crawlState',\n    jobName: 'jobName',\n    logicalOperator: 'logicalOperator',\n    state: 'state',\n  }],\n  logical: 'logical',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 7,
        "75": 12,
        "153": 2,
        "169": 1,
        "192": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "52edcd141d1d18bd304608acb3c803c02e0fb0b631c9e4b60636086694e54656"
    },
    "4f489e91417c6c1307fef3fa9016b8ab28701cb1482e243da265ea8362b959d0": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# arguments_: Any\n# tags: Any\n\ncfn_trigger_props = glue.CfnTriggerProps(\n    actions=[glue.CfnTrigger.ActionProperty(\n        arguments=arguments_,\n        crawler_name=\"crawlerName\",\n        job_name=\"jobName\",\n        notification_property=glue.CfnTrigger.NotificationPropertyProperty(\n            notify_delay_after=123\n        ),\n        security_configuration=\"securityConfiguration\",\n        timeout=123\n    )],\n    type=\"type\",\n\n    # the properties below are optional\n    description=\"description\",\n    name=\"name\",\n    predicate=glue.CfnTrigger.PredicateProperty(\n        conditions=[glue.CfnTrigger.ConditionProperty(\n            crawler_name=\"crawlerName\",\n            crawl_state=\"crawlState\",\n            job_name=\"jobName\",\n            logical_operator=\"logicalOperator\",\n            state=\"state\"\n        )],\n        logical=\"logical\"\n    ),\n    schedule=\"schedule\",\n    start_on_creation=False,\n    tags=tags,\n    workflow_name=\"workflowName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar arguments_;\nvar tags;\n\nCfnTriggerProps cfnTriggerProps = new CfnTriggerProps {\n    Actions = new [] { new ActionProperty {\n        Arguments = arguments_,\n        CrawlerName = \"crawlerName\",\n        JobName = \"jobName\",\n        NotificationProperty = new NotificationPropertyProperty {\n            NotifyDelayAfter = 123\n        },\n        SecurityConfiguration = \"securityConfiguration\",\n        Timeout = 123\n    } },\n    Type = \"type\",\n\n    // the properties below are optional\n    Description = \"description\",\n    Name = \"name\",\n    Predicate = new PredicateProperty {\n        Conditions = new [] { new ConditionProperty {\n            CrawlerName = \"crawlerName\",\n            CrawlState = \"crawlState\",\n            JobName = \"jobName\",\n            LogicalOperator = \"logicalOperator\",\n            State = \"state\"\n        } },\n        Logical = \"logical\"\n    },\n    Schedule = \"schedule\",\n    StartOnCreation = false,\n    Tags = tags,\n    WorkflowName = \"workflowName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject arguments_;\nObject tags;\n\nCfnTriggerProps cfnTriggerProps = CfnTriggerProps.builder()\n        .actions(List.of(ActionProperty.builder()\n                .arguments(arguments_)\n                .crawlerName(\"crawlerName\")\n                .jobName(\"jobName\")\n                .notificationProperty(NotificationPropertyProperty.builder()\n                        .notifyDelayAfter(123)\n                        .build())\n                .securityConfiguration(\"securityConfiguration\")\n                .timeout(123)\n                .build()))\n        .type(\"type\")\n\n        // the properties below are optional\n        .description(\"description\")\n        .name(\"name\")\n        .predicate(PredicateProperty.builder()\n                .conditions(List.of(ConditionProperty.builder()\n                        .crawlerName(\"crawlerName\")\n                        .crawlState(\"crawlState\")\n                        .jobName(\"jobName\")\n                        .logicalOperator(\"logicalOperator\")\n                        .state(\"state\")\n                        .build()))\n                .logical(\"logical\")\n                .build())\n        .schedule(\"schedule\")\n        .startOnCreation(false)\n        .tags(tags)\n        .workflowName(\"workflowName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar arguments_ interface{}\nvar tags interface{}\ncfnTriggerProps := &cfnTriggerProps{\n\tactions: []interface{}{\n\t\t&actionProperty{\n\t\t\targuments: arguments_,\n\t\t\tcrawlerName: jsii.String(\"crawlerName\"),\n\t\t\tjobName: jsii.String(\"jobName\"),\n\t\t\tnotificationProperty: &notificationPropertyProperty{\n\t\t\t\tnotifyDelayAfter: jsii.Number(123),\n\t\t\t},\n\t\t\tsecurityConfiguration: jsii.String(\"securityConfiguration\"),\n\t\t\ttimeout: jsii.Number(123),\n\t\t},\n\t},\n\ttype: jsii.String(\"type\"),\n\n\t// the properties below are optional\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\tpredicate: &predicateProperty{\n\t\tconditions: []interface{}{\n\t\t\t&conditionProperty{\n\t\t\t\tcrawlerName: jsii.String(\"crawlerName\"),\n\t\t\t\tcrawlState: jsii.String(\"crawlState\"),\n\t\t\t\tjobName: jsii.String(\"jobName\"),\n\t\t\t\tlogicalOperator: jsii.String(\"logicalOperator\"),\n\t\t\t\tstate: jsii.String(\"state\"),\n\t\t\t},\n\t\t},\n\t\tlogical: jsii.String(\"logical\"),\n\t},\n\tschedule: jsii.String(\"schedule\"),\n\tstartOnCreation: jsii.Boolean(false),\n\ttags: tags,\n\tworkflowName: jsii.String(\"workflowName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const arguments_: any;\ndeclare const tags: any;\nconst cfnTriggerProps: glue.CfnTriggerProps = {\n  actions: [{\n    arguments: arguments_,\n    crawlerName: 'crawlerName',\n    jobName: 'jobName',\n    notificationProperty: {\n      notifyDelayAfter: 123,\n    },\n    securityConfiguration: 'securityConfiguration',\n    timeout: 123,\n  }],\n  type: 'type',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  predicate: {\n    conditions: [{\n      crawlerName: 'crawlerName',\n      crawlState: 'crawlState',\n      jobName: 'jobName',\n      logicalOperator: 'logicalOperator',\n      state: 'state',\n    }],\n    logical: 'logical',\n  },\n  schedule: 'schedule',\n  startOnCreation: false,\n  tags: tags,\n  workflowName: 'workflowName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnTriggerProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnTriggerProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const arguments_: any;\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnTriggerProps: glue.CfnTriggerProps = {\n  actions: [{\n    arguments: arguments_,\n    crawlerName: 'crawlerName',\n    jobName: 'jobName',\n    notificationProperty: {\n      notifyDelayAfter: 123,\n    },\n    securityConfiguration: 'securityConfiguration',\n    timeout: 123,\n  }],\n  type: 'type',\n\n  // the properties below are optional\n  description: 'description',\n  name: 'name',\n  predicate: {\n    conditions: [{\n      crawlerName: 'crawlerName',\n      crawlState: 'crawlState',\n      jobName: 'jobName',\n      logicalOperator: 'logicalOperator',\n      state: 'state',\n    }],\n    logical: 'logical',\n  },\n  schedule: 'schedule',\n  startOnCreation: false,\n  tags: tags,\n  workflowName: 'workflowName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "8": 2,
        "10": 15,
        "75": 31,
        "91": 1,
        "125": 2,
        "130": 2,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 5,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 23,
        "290": 1
      },
      "fqnsFingerprint": "34b52b631b2a2f16345b796522d765fd70bd2ad9913a17e42dedfa763f430c3e"
    },
    "86446f48a0564af02e459def0cfe225571e27fb51081012b3678343e816bd363": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# default_run_properties: Any\n# tags: Any\n\ncfn_workflow = glue.CfnWorkflow(self, \"MyCfnWorkflow\",\n    default_run_properties=default_run_properties,\n    description=\"description\",\n    name=\"name\",\n    tags=tags\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar defaultRunProperties;\nvar tags;\n\nCfnWorkflow cfnWorkflow = new CfnWorkflow(this, \"MyCfnWorkflow\", new CfnWorkflowProps {\n    DefaultRunProperties = defaultRunProperties,\n    Description = \"description\",\n    Name = \"name\",\n    Tags = tags\n});",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject defaultRunProperties;\nObject tags;\n\nCfnWorkflow cfnWorkflow = CfnWorkflow.Builder.create(this, \"MyCfnWorkflow\")\n        .defaultRunProperties(defaultRunProperties)\n        .description(\"description\")\n        .name(\"name\")\n        .tags(tags)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar defaultRunProperties interface{}\nvar tags interface{}\ncfnWorkflow := glue.NewCfnWorkflow(this, jsii.String(\"MyCfnWorkflow\"), &cfnWorkflowProps{\n\tdefaultRunProperties: defaultRunProperties,\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\ttags: tags,\n})",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const defaultRunProperties: any;\ndeclare const tags: any;\nconst cfnWorkflow = new glue.CfnWorkflow(this, 'MyCfnWorkflow', /* all optional props */ {\n  defaultRunProperties: defaultRunProperties,\n  description: 'description',\n  name: 'name',\n  tags: tags,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnWorkflow"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnWorkflow",
        "@aws-cdk/aws-glue.CfnWorkflowProps",
        "@aws-cdk/core.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const defaultRunProperties: any;\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnWorkflow = new glue.CfnWorkflow(this, 'MyCfnWorkflow', /* all optional props */ {\n  defaultRunProperties: defaultRunProperties,\n  description: 'description',\n  name: 'name',\n  tags: tags,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 12,
        "104": 1,
        "125": 2,
        "130": 2,
        "193": 1,
        "194": 1,
        "197": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "9573b977b178da14eee80f05f31405f34aee95fd2748a8731f41b87c7a6f1848"
    },
    "6d7f29ea812179b643f48771e4a9315afac1680731693efcfd49f3ee8ae94238": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# default_run_properties: Any\n# tags: Any\n\ncfn_workflow_props = glue.CfnWorkflowProps(\n    default_run_properties=default_run_properties,\n    description=\"description\",\n    name=\"name\",\n    tags=tags\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nvar defaultRunProperties;\nvar tags;\n\nCfnWorkflowProps cfnWorkflowProps = new CfnWorkflowProps {\n    DefaultRunProperties = defaultRunProperties,\n    Description = \"description\",\n    Name = \"name\",\n    Tags = tags\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nObject defaultRunProperties;\nObject tags;\n\nCfnWorkflowProps cfnWorkflowProps = CfnWorkflowProps.builder()\n        .defaultRunProperties(defaultRunProperties)\n        .description(\"description\")\n        .name(\"name\")\n        .tags(tags)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar defaultRunProperties interface{}\nvar tags interface{}\ncfnWorkflowProps := &cfnWorkflowProps{\n\tdefaultRunProperties: defaultRunProperties,\n\tdescription: jsii.String(\"description\"),\n\tname: jsii.String(\"name\"),\n\ttags: tags,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const defaultRunProperties: any;\ndeclare const tags: any;\nconst cfnWorkflowProps: glue.CfnWorkflowProps = {\n  defaultRunProperties: defaultRunProperties,\n  description: 'description',\n  name: 'name',\n  tags: tags,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CfnWorkflowProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CfnWorkflowProps"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const defaultRunProperties: any;\ndeclare const tags: any;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst cfnWorkflowProps: glue.CfnWorkflowProps = {\n  defaultRunProperties: defaultRunProperties,\n  description: 'description',\n  name: 'name',\n  tags: tags,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 12,
        "125": 2,
        "130": 2,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "8d3489de95f26daf49f7c36f1d4a82ff960c691a28714ccb319b7e76d600ee60"
    },
    "b224829b8a722c0ffdabee6ed0af51c1df7663f5c99156a6b3434b9d5906bf68": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nclassification_string = glue.ClassificationString.AVRO",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nClassificationString classificationString = ClassificationString.AVRO;",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nClassificationString classificationString = ClassificationString.AVRO;",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nclassificationString := glue.classificationString_AVRO()",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst classificationString = glue.ClassificationString.AVRO;",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.ClassificationString"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.ClassificationString",
        "@aws-cdk/aws-glue.ClassificationString#AVRO"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst classificationString = glue.ClassificationString.AVRO;\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 5,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "29257f7c7e4c9f40384c5276d01926246a1fc3a23219891e0366090c51d47086"
    },
    "c4ee7333395cec579e44a73fc4e61f2e6100aba39dd59362d281a1e6bf3cc687": {
      "translations": {
        "python": {
          "source": "glue.SecurityConfiguration(self, \"MySecurityConfiguration\",\n    security_configuration_name=\"name\",\n    cloud_watch_encryption=glue.CloudWatchEncryption(\n        mode=glue.CloudWatchEncryptionMode.KMS\n    ),\n    job_bookmarks_encryption=glue.JobBookmarksEncryption(\n        mode=glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    ),\n    s3_encryption=glue.S3Encryption(\n        mode=glue.S3EncryptionMode.KMS\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new SecurityConfiguration(this, \"MySecurityConfiguration\", new SecurityConfigurationProps {\n    SecurityConfigurationName = \"name\",\n    CloudWatchEncryption = new CloudWatchEncryption {\n        Mode = CloudWatchEncryptionMode.KMS\n    },\n    JobBookmarksEncryption = new JobBookmarksEncryption {\n        Mode = JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    },\n    S3Encryption = new S3Encryption {\n        Mode = S3EncryptionMode.KMS\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "SecurityConfiguration.Builder.create(this, \"MySecurityConfiguration\")\n        .securityConfigurationName(\"name\")\n        .cloudWatchEncryption(CloudWatchEncryption.builder()\n                .mode(CloudWatchEncryptionMode.KMS)\n                .build())\n        .jobBookmarksEncryption(JobBookmarksEncryption.builder()\n                .mode(JobBookmarksEncryptionMode.CLIENT_SIDE_KMS)\n                .build())\n        .s3Encryption(S3Encryption.builder()\n                .mode(S3EncryptionMode.KMS)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "glue.NewSecurityConfiguration(this, jsii.String(\"MySecurityConfiguration\"), &securityConfigurationProps{\n\tsecurityConfigurationName: jsii.String(\"name\"),\n\tcloudWatchEncryption: &cloudWatchEncryption{\n\t\tmode: glue.cloudWatchEncryptionMode_KMS,\n\t},\n\tjobBookmarksEncryption: &jobBookmarksEncryption{\n\t\tmode: glue.jobBookmarksEncryptionMode_CLIENT_SIDE_KMS,\n\t},\n\ts3Encryption: &s3Encryption{\n\t\tmode: glue.s3EncryptionMode_KMS,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "new glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CloudWatchEncryption"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CloudWatchEncryption",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode#KMS",
        "@aws-cdk/aws-glue.JobBookmarksEncryption",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode#CLIENT_SIDE_KMS",
        "@aws-cdk/aws-glue.S3Encryption",
        "@aws-cdk/aws-glue.S3EncryptionMode",
        "@aws-cdk/aws-glue.S3EncryptionMode#KMS",
        "@aws-cdk/aws-glue.SecurityConfiguration",
        "@aws-cdk/aws-glue.SecurityConfigurationProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 18,
        "104": 1,
        "193": 4,
        "194": 7,
        "197": 1,
        "226": 1,
        "281": 7
      },
      "fqnsFingerprint": "c7cd61f9ca64e3a86fc7eb84139957d1d9fe135142c6ea30a7793e9d4764635e"
    },
    "a4e1ff8436d7c9a60b44f29a3859ed48e97fd10ff0185de7bb71298dfec009d2": {
      "translations": {
        "python": {
          "source": "glue.SecurityConfiguration(self, \"MySecurityConfiguration\",\n    security_configuration_name=\"name\",\n    cloud_watch_encryption=glue.CloudWatchEncryption(\n        mode=glue.CloudWatchEncryptionMode.KMS\n    ),\n    job_bookmarks_encryption=glue.JobBookmarksEncryption(\n        mode=glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    ),\n    s3_encryption=glue.S3Encryption(\n        mode=glue.S3EncryptionMode.KMS\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new SecurityConfiguration(this, \"MySecurityConfiguration\", new SecurityConfigurationProps {\n    SecurityConfigurationName = \"name\",\n    CloudWatchEncryption = new CloudWatchEncryption {\n        Mode = CloudWatchEncryptionMode.KMS\n    },\n    JobBookmarksEncryption = new JobBookmarksEncryption {\n        Mode = JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    },\n    S3Encryption = new S3Encryption {\n        Mode = S3EncryptionMode.KMS\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "SecurityConfiguration.Builder.create(this, \"MySecurityConfiguration\")\n        .securityConfigurationName(\"name\")\n        .cloudWatchEncryption(CloudWatchEncryption.builder()\n                .mode(CloudWatchEncryptionMode.KMS)\n                .build())\n        .jobBookmarksEncryption(JobBookmarksEncryption.builder()\n                .mode(JobBookmarksEncryptionMode.CLIENT_SIDE_KMS)\n                .build())\n        .s3Encryption(S3Encryption.builder()\n                .mode(S3EncryptionMode.KMS)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "glue.NewSecurityConfiguration(this, jsii.String(\"MySecurityConfiguration\"), &securityConfigurationProps{\n\tsecurityConfigurationName: jsii.String(\"name\"),\n\tcloudWatchEncryption: &cloudWatchEncryption{\n\t\tmode: glue.cloudWatchEncryptionMode_KMS,\n\t},\n\tjobBookmarksEncryption: &jobBookmarksEncryption{\n\t\tmode: glue.jobBookmarksEncryptionMode_CLIENT_SIDE_KMS,\n\t},\n\ts3Encryption: &s3Encryption{\n\t\tmode: glue.s3EncryptionMode_KMS,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "new glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CloudWatchEncryptionMode"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CloudWatchEncryption",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode#KMS",
        "@aws-cdk/aws-glue.JobBookmarksEncryption",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode#CLIENT_SIDE_KMS",
        "@aws-cdk/aws-glue.S3Encryption",
        "@aws-cdk/aws-glue.S3EncryptionMode",
        "@aws-cdk/aws-glue.S3EncryptionMode#KMS",
        "@aws-cdk/aws-glue.SecurityConfiguration",
        "@aws-cdk/aws-glue.SecurityConfigurationProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 18,
        "104": 1,
        "193": 4,
        "194": 7,
        "197": 1,
        "226": 1,
        "281": 7
      },
      "fqnsFingerprint": "c7cd61f9ca64e3a86fc7eb84139957d1d9fe135142c6ea30a7793e9d4764635e"
    },
    "4487aefd2fb62b354420dc32a069a07d2ee8b517d9f41417f00cdda3edc42841": {
      "translations": {
        "python": {
          "source": "# bucket: s3.Bucket\n\nglue.Job(self, \"PythonShellJob\",\n    executable=glue.JobExecutable.python_shell(\n        glue_version=glue.GlueVersion.V1_0,\n        python_version=glue.PythonVersion.THREE,\n        script=glue.Code.from_bucket(bucket, \"script.py\")\n    ),\n    description=\"an example Python Shell job\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket;\n\nnew Job(this, \"PythonShellJob\", new JobProps {\n    Executable = JobExecutable.PythonShell(new PythonShellExecutableProps {\n        GlueVersion = GlueVersion.V1_0,\n        PythonVersion = PythonVersion.THREE,\n        Script = Code.FromBucket(bucket, \"script.py\")\n    }),\n    Description = \"an example Python Shell job\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket;\n\nJob.Builder.create(this, \"PythonShellJob\")\n        .executable(JobExecutable.pythonShell(PythonShellExecutableProps.builder()\n                .glueVersion(GlueVersion.V1_0)\n                .pythonVersion(PythonVersion.THREE)\n                .script(Code.fromBucket(bucket, \"script.py\"))\n                .build()))\n        .description(\"an example Python Shell job\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var bucket bucket\nglue.NewJob(this, jsii.String(\"PythonShellJob\"), &jobProps{\n\texecutable: glue.jobExecutable.pythonShell(&pythonShellExecutableProps{\n\t\tglueVersion: glue.glueVersion_V1_0(),\n\t\tpythonVersion: glue.pythonVersion_THREE,\n\t\tscript: glue.code.fromBucket(bucket, jsii.String(\"script.py\")),\n\t}),\n\tdescription: jsii.String(\"an example Python Shell job\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const bucket: s3.Bucket;\nnew glue.Job(this, 'PythonShellJob', {\n  executable: glue.JobExecutable.pythonShell({\n    glueVersion: glue.GlueVersion.V1_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromBucket(bucket, 'script.py'),\n  }),\n  description: 'an example Python Shell job',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.Code"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.Code",
        "@aws-cdk/aws-glue.Code#fromBucket",
        "@aws-cdk/aws-glue.GlueVersion",
        "@aws-cdk/aws-glue.GlueVersion#V1_0",
        "@aws-cdk/aws-glue.Job",
        "@aws-cdk/aws-glue.JobExecutable",
        "@aws-cdk/aws-glue.JobExecutable#pythonShell",
        "@aws-cdk/aws-glue.JobProps",
        "@aws-cdk/aws-glue.PythonShellExecutableProps",
        "@aws-cdk/aws-glue.PythonVersion",
        "@aws-cdk/aws-glue.PythonVersion#THREE",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Job(this, 'PythonShellJob', {\n  executable: glue.JobExecutable.pythonShell({\n    glueVersion: glue.GlueVersion.V1_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromBucket(bucket, 'script.py'),\n  }),\n  description: 'an example Python Shell job',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 23,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 9,
        "196": 2,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "f4db3ad70afb1a025f6eb2c778539d099a36c20790a03b2badd556eb57fd15d4"
    },
    "fd62c499f7130c6d0d2e44e139b52982de75be6cbd4acacbf920d6438cb80e3e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncode_config = glue.CodeConfig(\n    s3_location=Location(\n        bucket_name=\"bucketName\",\n        object_key=\"objectKey\",\n\n        # the properties below are optional\n        object_version=\"objectVersion\"\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCodeConfig codeConfig = new CodeConfig {\n    S3Location = new Location {\n        BucketName = \"bucketName\",\n        ObjectKey = \"objectKey\",\n\n        // the properties below are optional\n        ObjectVersion = \"objectVersion\"\n    }\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCodeConfig codeConfig = CodeConfig.builder()\n        .s3Location(Location.builder()\n                .bucketName(\"bucketName\")\n                .objectKey(\"objectKey\")\n\n                // the properties below are optional\n                .objectVersion(\"objectVersion\")\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncodeConfig := &codeConfig{\n\ts3Location: &location{\n\t\tbucketName: jsii.String(\"bucketName\"),\n\t\tobjectKey: jsii.String(\"objectKey\"),\n\n\t\t// the properties below are optional\n\t\tobjectVersion: jsii.String(\"objectVersion\"),\n\t},\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst codeConfig: glue.CodeConfig = {\n  s3Location: {\n    bucketName: 'bucketName',\n    objectKey: 'objectKey',\n\n    // the properties below are optional\n    objectVersion: 'objectVersion',\n  },\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.CodeConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CodeConfig",
        "@aws-cdk/aws-s3.Location"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst codeConfig: glue.CodeConfig = {\n  s3Location: {\n    bucketName: 'bucketName',\n    objectKey: 'objectKey',\n\n    // the properties below are optional\n    objectVersion: 'objectVersion',\n  },\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 8,
        "153": 1,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "53d8de0e3dbff49e9a996267128dab9d94365757e07c3b4f523786ee4d08bdbd"
    },
    "6e917d6666fdc10ba60cbd125bf9caa4facbf7a3a4c85b455c79042f22cf8d0d": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ncolumn = glue.Column(\n    name=\"name\",\n    type=glue.Type(\n        input_string=\"inputString\",\n        is_primitive=False\n    ),\n\n    # the properties below are optional\n    comment=\"comment\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nColumn column = new Column {\n    Name = \"name\",\n    Type = new Type {\n        InputString = \"inputString\",\n        IsPrimitive = false\n    },\n\n    // the properties below are optional\n    Comment = \"comment\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nColumn column = Column.builder()\n        .name(\"name\")\n        .type(Type.builder()\n                .inputString(\"inputString\")\n                .isPrimitive(false)\n                .build())\n\n        // the properties below are optional\n        .comment(\"comment\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ncolumn := &column{\n\tname: jsii.String(\"name\"),\n\ttype: &type{\n\t\tinputString: jsii.String(\"inputString\"),\n\t\tisPrimitive: jsii.Boolean(false),\n\t},\n\n\t// the properties below are optional\n\tcomment: jsii.String(\"comment\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst column: glue.Column = {\n  name: 'name',\n  type: {\n    inputString: 'inputString',\n    isPrimitive: false,\n  },\n\n  // the properties below are optional\n  comment: 'comment',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.Column"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.Column",
        "@aws-cdk/aws-glue.Type"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst column: glue.Column = {\n  name: 'name',\n  type: {\n    inputString: 'inputString',\n    isPrimitive: false,\n  },\n\n  // the properties below are optional\n  comment: 'comment',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 9,
        "91": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "d452706371ff1d31112558d7bb0a67be27408de94f385b77f78a7cd2abcdc125"
    },
    "5328123ea0301a29be77afda2d463ab053168cfeb568ea6dfde6dbe146a46508": {
      "translations": {
        "python": {
          "source": "# security_group: ec2.SecurityGroup\n# subnet: ec2.Subnet\n\nglue.Connection(self, \"MyConnection\",\n    type=glue.ConnectionType.NETWORK,\n    # The security groups granting AWS Glue inbound access to the data source within the VPC\n    security_groups=[security_group],\n    # The VPC subnet which contains the data source\n    subnet=subnet\n)",
          "version": "2"
        },
        "csharp": {
          "source": "SecurityGroup securityGroup;\nSubnet subnet;\n\nnew Connection(this, \"MyConnection\", new ConnectionProps {\n    Type = ConnectionType.NETWORK,\n    // The security groups granting AWS Glue inbound access to the data source within the VPC\n    SecurityGroups = new [] { securityGroup },\n    // The VPC subnet which contains the data source\n    Subnet = subnet\n});",
          "version": "1"
        },
        "java": {
          "source": "SecurityGroup securityGroup;\nSubnet subnet;\n\nConnection.Builder.create(this, \"MyConnection\")\n        .type(ConnectionType.NETWORK)\n        // The security groups granting AWS Glue inbound access to the data source within the VPC\n        .securityGroups(List.of(securityGroup))\n        // The VPC subnet which contains the data source\n        .subnet(subnet)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var securityGroup securityGroup\nvar subnet subnet\nglue.NewConnection(this, jsii.String(\"MyConnection\"), &connectionProps{\n\ttype: glue.connectionType_NETWORK(),\n\t// The security groups granting AWS Glue inbound access to the data source within the VPC\n\tsecurityGroups: []iSecurityGroup{\n\t\tsecurityGroup,\n\t},\n\t// The VPC subnet which contains the data source\n\tsubnet: subnet,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\nnew glue.Connection(this, 'MyConnection', {\n  type: glue.ConnectionType.NETWORK,\n  // The security groups granting AWS Glue inbound access to the data source within the VPC\n  securityGroups: [securityGroup],\n  // The VPC subnet which contains the data source\n  subnet,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.Connection"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.ISubnet",
        "@aws-cdk/aws-glue.Connection",
        "@aws-cdk/aws-glue.ConnectionProps",
        "@aws-cdk/aws-glue.ConnectionType",
        "@aws-cdk/aws-glue.ConnectionType#NETWORK",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Connection(this, 'MyConnection', {\n  type: glue.ConnectionType.NETWORK,\n  // The security groups granting AWS Glue inbound access to the data source within the VPC\n  securityGroups: [securityGroup],\n  // The VPC subnet which contains the data source\n  subnet,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 15,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 2,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "20b4e280eb6c79bf6fd78afc9fd8d939fd41546b2ba7cf3a23a69be4dc5edabf"
    },
    "096b449ba3ff74230ad0182e37a7b44b1986bcf8090bd9d422f797faebc91484": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_ec2 as ec2\nimport aws_cdk.aws_glue as glue\n\n# security_group: ec2.SecurityGroup\n# subnet: ec2.Subnet\n\nconnection_options = glue.ConnectionOptions(\n    connection_name=\"connectionName\",\n    description=\"description\",\n    match_criteria=[\"matchCriteria\"],\n    properties={\n        \"properties_key\": \"properties\"\n    },\n    security_groups=[security_group],\n    subnet=subnet\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.EC2;\nusing Amazon.CDK.AWS.Glue;\n\nSecurityGroup securityGroup;\nSubnet subnet;\n\nConnectionOptions connectionOptions = new ConnectionOptions {\n    ConnectionName = \"connectionName\",\n    Description = \"description\",\n    MatchCriteria = new [] { \"matchCriteria\" },\n    Properties = new Dictionary<string, string> {\n        { \"propertiesKey\", \"properties\" }\n    },\n    SecurityGroups = new [] { securityGroup },\n    Subnet = subnet\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.ec2.*;\nimport software.amazon.awscdk.services.glue.*;\n\nSecurityGroup securityGroup;\nSubnet subnet;\n\nConnectionOptions connectionOptions = ConnectionOptions.builder()\n        .connectionName(\"connectionName\")\n        .description(\"description\")\n        .matchCriteria(List.of(\"matchCriteria\"))\n        .properties(Map.of(\n                \"propertiesKey\", \"properties\"))\n        .securityGroups(List.of(securityGroup))\n        .subnet(subnet)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import ec2 \"github.com/aws-samples/dummy/awscdkawsec2\"import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar securityGroup securityGroup\nvar subnet subnet\nconnectionOptions := &connectionOptions{\n\tconnectionName: jsii.String(\"connectionName\"),\n\tdescription: jsii.String(\"description\"),\n\tmatchCriteria: []*string{\n\t\tjsii.String(\"matchCriteria\"),\n\t},\n\tproperties: map[string]*string{\n\t\t\"propertiesKey\": jsii.String(\"properties\"),\n\t},\n\tsecurityGroups: []iSecurityGroup{\n\t\tsecurityGroup,\n\t},\n\tsubnet: subnet,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\nconst connectionOptions: glue.ConnectionOptions = {\n  connectionName: 'connectionName',\n  description: 'description',\n  matchCriteria: ['matchCriteria'],\n  properties: {\n    propertiesKey: 'properties',\n  },\n  securityGroups: [securityGroup],\n  subnet: subnet,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.ConnectionOptions"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.ISubnet",
        "@aws-cdk/aws-glue.ConnectionOptions"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst connectionOptions: glue.ConnectionOptions = {\n  connectionName: 'connectionName',\n  description: 'description',\n  matchCriteria: ['matchCriteria'],\n  properties: {\n    propertiesKey: 'properties',\n  },\n  securityGroups: [securityGroup],\n  subnet: subnet,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 6,
        "75": 20,
        "130": 2,
        "153": 3,
        "169": 3,
        "192": 2,
        "193": 2,
        "225": 3,
        "242": 3,
        "243": 3,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "76866837ef095f4c5d42d73acf83571073b04ac086011c70c113ac6c6b88ea35"
    },
    "e89d5cfd026864264082d353a6f6b801c35184f6d63176172ac627a910069d56": {
      "translations": {
        "python": {
          "source": "# security_group: ec2.SecurityGroup\n# subnet: ec2.Subnet\n\nglue.Connection(self, \"MyConnection\",\n    type=glue.ConnectionType.NETWORK,\n    # The security groups granting AWS Glue inbound access to the data source within the VPC\n    security_groups=[security_group],\n    # The VPC subnet which contains the data source\n    subnet=subnet\n)",
          "version": "2"
        },
        "csharp": {
          "source": "SecurityGroup securityGroup;\nSubnet subnet;\n\nnew Connection(this, \"MyConnection\", new ConnectionProps {\n    Type = ConnectionType.NETWORK,\n    // The security groups granting AWS Glue inbound access to the data source within the VPC\n    SecurityGroups = new [] { securityGroup },\n    // The VPC subnet which contains the data source\n    Subnet = subnet\n});",
          "version": "1"
        },
        "java": {
          "source": "SecurityGroup securityGroup;\nSubnet subnet;\n\nConnection.Builder.create(this, \"MyConnection\")\n        .type(ConnectionType.NETWORK)\n        // The security groups granting AWS Glue inbound access to the data source within the VPC\n        .securityGroups(List.of(securityGroup))\n        // The VPC subnet which contains the data source\n        .subnet(subnet)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var securityGroup securityGroup\nvar subnet subnet\nglue.NewConnection(this, jsii.String(\"MyConnection\"), &connectionProps{\n\ttype: glue.connectionType_NETWORK(),\n\t// The security groups granting AWS Glue inbound access to the data source within the VPC\n\tsecurityGroups: []iSecurityGroup{\n\t\tsecurityGroup,\n\t},\n\t// The VPC subnet which contains the data source\n\tsubnet: subnet,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\nnew glue.Connection(this, 'MyConnection', {\n  type: glue.ConnectionType.NETWORK,\n  // The security groups granting AWS Glue inbound access to the data source within the VPC\n  securityGroups: [securityGroup],\n  // The VPC subnet which contains the data source\n  subnet,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.ConnectionProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.ISubnet",
        "@aws-cdk/aws-glue.Connection",
        "@aws-cdk/aws-glue.ConnectionProps",
        "@aws-cdk/aws-glue.ConnectionType",
        "@aws-cdk/aws-glue.ConnectionType#NETWORK",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Connection(this, 'MyConnection', {\n  type: glue.ConnectionType.NETWORK,\n  // The security groups granting AWS Glue inbound access to the data source within the VPC\n  securityGroups: [securityGroup],\n  // The VPC subnet which contains the data source\n  subnet,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 15,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 2,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "20b4e280eb6c79bf6fd78afc9fd8d939fd41546b2ba7cf3a23a69be4dc5edabf"
    },
    "66dca098c89338ddf9aea1f760fc1518ef4818576f1ba5e28c68ff9d0e7299ea": {
      "translations": {
        "python": {
          "source": "# security_group: ec2.SecurityGroup\n# subnet: ec2.Subnet\n\nglue.Connection(self, \"MyConnection\",\n    type=glue.ConnectionType.NETWORK,\n    # The security groups granting AWS Glue inbound access to the data source within the VPC\n    security_groups=[security_group],\n    # The VPC subnet which contains the data source\n    subnet=subnet\n)",
          "version": "2"
        },
        "csharp": {
          "source": "SecurityGroup securityGroup;\nSubnet subnet;\n\nnew Connection(this, \"MyConnection\", new ConnectionProps {\n    Type = ConnectionType.NETWORK,\n    // The security groups granting AWS Glue inbound access to the data source within the VPC\n    SecurityGroups = new [] { securityGroup },\n    // The VPC subnet which contains the data source\n    Subnet = subnet\n});",
          "version": "1"
        },
        "java": {
          "source": "SecurityGroup securityGroup;\nSubnet subnet;\n\nConnection.Builder.create(this, \"MyConnection\")\n        .type(ConnectionType.NETWORK)\n        // The security groups granting AWS Glue inbound access to the data source within the VPC\n        .securityGroups(List.of(securityGroup))\n        // The VPC subnet which contains the data source\n        .subnet(subnet)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var securityGroup securityGroup\nvar subnet subnet\nglue.NewConnection(this, jsii.String(\"MyConnection\"), &connectionProps{\n\ttype: glue.connectionType_NETWORK(),\n\t// The security groups granting AWS Glue inbound access to the data source within the VPC\n\tsecurityGroups: []iSecurityGroup{\n\t\tsecurityGroup,\n\t},\n\t// The VPC subnet which contains the data source\n\tsubnet: subnet,\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\nnew glue.Connection(this, 'MyConnection', {\n  type: glue.ConnectionType.NETWORK,\n  // The security groups granting AWS Glue inbound access to the data source within the VPC\n  securityGroups: [securityGroup],\n  // The VPC subnet which contains the data source\n  subnet,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.ConnectionType"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-ec2.ISubnet",
        "@aws-cdk/aws-glue.Connection",
        "@aws-cdk/aws-glue.ConnectionProps",
        "@aws-cdk/aws-glue.ConnectionType",
        "@aws-cdk/aws-glue.ConnectionType#NETWORK",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const securityGroup: ec2.SecurityGroup;\ndeclare const subnet: ec2.Subnet;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Connection(this, 'MyConnection', {\n  type: glue.ConnectionType.NETWORK,\n  // The security groups granting AWS Glue inbound access to the data source within the VPC\n  securityGroups: [securityGroup],\n  // The VPC subnet which contains the data source\n  subnet,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 1,
        "75": 15,
        "104": 1,
        "130": 2,
        "153": 2,
        "169": 2,
        "192": 1,
        "193": 1,
        "194": 3,
        "197": 1,
        "225": 2,
        "226": 1,
        "242": 2,
        "243": 2,
        "281": 2,
        "282": 1,
        "290": 1
      },
      "fqnsFingerprint": "20b4e280eb6c79bf6fd78afc9fd8d939fd41546b2ba7cf3a23a69be4dc5edabf"
    },
    "b4af35fb48d342f4bba50da1916881291b514d0e59809d18b42a73976636c69e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\nimport aws_cdk.aws_logs as logs\n\n# log_group: logs.LogGroup\n\ncontinuous_logging_props = glue.ContinuousLoggingProps(\n    enabled=False,\n\n    # the properties below are optional\n    conversion_pattern=\"conversionPattern\",\n    log_group=log_group,\n    log_stream_prefix=\"logStreamPrefix\",\n    quiet=False\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\nusing Amazon.CDK.AWS.Logs;\n\nLogGroup logGroup;\n\nContinuousLoggingProps continuousLoggingProps = new ContinuousLoggingProps {\n    Enabled = false,\n\n    // the properties below are optional\n    ConversionPattern = \"conversionPattern\",\n    LogGroup = logGroup,\n    LogStreamPrefix = \"logStreamPrefix\",\n    Quiet = false\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\nimport software.amazon.awscdk.services.logs.*;\n\nLogGroup logGroup;\n\nContinuousLoggingProps continuousLoggingProps = ContinuousLoggingProps.builder()\n        .enabled(false)\n\n        // the properties below are optional\n        .conversionPattern(\"conversionPattern\")\n        .logGroup(logGroup)\n        .logStreamPrefix(\"logStreamPrefix\")\n        .quiet(false)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"import logs \"github.com/aws-samples/dummy/awscdkawslogs\"\n\nvar logGroup logGroup\ncontinuousLoggingProps := &continuousLoggingProps{\n\tenabled: jsii.Boolean(false),\n\n\t// the properties below are optional\n\tconversionPattern: jsii.String(\"conversionPattern\"),\n\tlogGroup: logGroup,\n\tlogStreamPrefix: jsii.String(\"logStreamPrefix\"),\n\tquiet: jsii.Boolean(false),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const logGroup: logs.LogGroup;\nconst continuousLoggingProps: glue.ContinuousLoggingProps = {\n  enabled: false,\n\n  // the properties below are optional\n  conversionPattern: 'conversionPattern',\n  logGroup: logGroup,\n  logStreamPrefix: 'logStreamPrefix',\n  quiet: false,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.ContinuousLoggingProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.ContinuousLoggingProps",
        "@aws-cdk/aws-logs.ILogGroup"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as logs from '@aws-cdk/aws-logs';\n\ndeclare const logGroup: logs.LogGroup;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst continuousLoggingProps: glue.ContinuousLoggingProps = {\n  enabled: false,\n\n  // the properties below are optional\n  conversionPattern: 'conversionPattern',\n  logGroup: logGroup,\n  logStreamPrefix: 'logStreamPrefix',\n  quiet: false,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 4,
        "75": 14,
        "91": 2,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "7329c86cc60cf27fa88c61efaa0cdd9755338dda82c498f785ffe55ef86734d2"
    },
    "1ce4da699eb585ad9fc80fde8a86f11ed2e34e115db778f37a96fdb3fe07a21a": {
      "translations": {
        "python": {
          "source": "# my_database: glue.Database\n\nglue.Table(self, \"MyTable\",\n    database=my_database,\n    table_name=\"my_table\",\n    columns=[glue.Column(\n        name=\"col1\",\n        type=glue.Schema.STRING\n    )],\n    partition_keys=[glue.Column(\n        name=\"year\",\n        type=glue.Schema.SMALL_INT\n    ), glue.Column(\n        name=\"month\",\n        type=glue.Schema.SMALL_INT\n    )],\n    data_format=glue.DataFormat.JSON\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Database myDatabase;\n\nnew Table(this, \"MyTable\", new TableProps {\n    Database = myDatabase,\n    TableName = \"my_table\",\n    Columns = new [] { new Column {\n        Name = \"col1\",\n        Type = Schema.STRING\n    } },\n    PartitionKeys = new [] { new Column {\n        Name = \"year\",\n        Type = Schema.SMALL_INT\n    }, new Column {\n        Name = \"month\",\n        Type = Schema.SMALL_INT\n    } },\n    DataFormat = DataFormat.JSON\n});",
          "version": "1"
        },
        "java": {
          "source": "Database myDatabase;\n\nTable.Builder.create(this, \"MyTable\")\n        .database(myDatabase)\n        .tableName(\"my_table\")\n        .columns(List.of(Column.builder()\n                .name(\"col1\")\n                .type(Schema.STRING)\n                .build()))\n        .partitionKeys(List.of(Column.builder()\n                .name(\"year\")\n                .type(Schema.SMALL_INT)\n                .build(), Column.builder()\n                .name(\"month\")\n                .type(Schema.SMALL_INT)\n                .build()))\n        .dataFormat(DataFormat.JSON)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var myDatabase database\nglue.NewTable(this, jsii.String(\"MyTable\"), &tableProps{\n\tdatabase: myDatabase,\n\ttableName: jsii.String(\"my_table\"),\n\tcolumns: []column{\n\t\t&column{\n\t\t\tname: jsii.String(\"col1\"),\n\t\t\ttype: glue.schema_STRING(),\n\t\t},\n\t},\n\tpartitionKeys: []*column{\n\t\t&column{\n\t\t\tname: jsii.String(\"year\"),\n\t\t\ttype: glue.*schema_SMALL_INT(),\n\t\t},\n\t\t&column{\n\t\t\tname: jsii.String(\"month\"),\n\t\t\ttype: glue.*schema_SMALL_INT(),\n\t\t},\n\t},\n\tdataFormat: glue.dataFormat_JSON(),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myDatabase: glue.Database;\nnew glue.Table(this, 'MyTable', {\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.DataFormat"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.DataFormat",
        "@aws-cdk/aws-glue.DataFormat#JSON",
        "@aws-cdk/aws-glue.IDatabase",
        "@aws-cdk/aws-glue.Schema",
        "@aws-cdk/aws-glue.Schema#SMALL_INT",
        "@aws-cdk/aws-glue.Schema#STRING",
        "@aws-cdk/aws-glue.Table",
        "@aws-cdk/aws-glue.TableProps",
        "@aws-cdk/aws-glue.Type",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myDatabase: glue.Database;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Table(this, 'MyTable', {\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 29,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 4,
        "194": 9,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "b95524d87731a58f5408c90f84d888c5d6b1c00b593b93f691483749430f37a4"
    },
    "ec0e04ec8862ef7d77f00238076308cf8fecc15bf17900fd69c3f313a43a4812": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# classification_string: glue.ClassificationString\n# input_format: glue.InputFormat\n# output_format: glue.OutputFormat\n# serialization_library: glue.SerializationLibrary\n\ndata_format_props = glue.DataFormatProps(\n    input_format=input_format,\n    output_format=output_format,\n    serialization_library=serialization_library,\n\n    # the properties below are optional\n    classification_string=classification_string\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nClassificationString classificationString;\nInputFormat inputFormat;\nOutputFormat outputFormat;\nSerializationLibrary serializationLibrary;\n\nDataFormatProps dataFormatProps = new DataFormatProps {\n    InputFormat = inputFormat,\n    OutputFormat = outputFormat,\n    SerializationLibrary = serializationLibrary,\n\n    // the properties below are optional\n    ClassificationString = classificationString\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nClassificationString classificationString;\nInputFormat inputFormat;\nOutputFormat outputFormat;\nSerializationLibrary serializationLibrary;\n\nDataFormatProps dataFormatProps = DataFormatProps.builder()\n        .inputFormat(inputFormat)\n        .outputFormat(outputFormat)\n        .serializationLibrary(serializationLibrary)\n\n        // the properties below are optional\n        .classificationString(classificationString)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar classificationString classificationString\nvar inputFormat inputFormat\nvar outputFormat outputFormat\nvar serializationLibrary serializationLibrary\ndataFormatProps := &dataFormatProps{\n\tinputFormat: inputFormat,\n\toutputFormat: outputFormat,\n\tserializationLibrary: serializationLibrary,\n\n\t// the properties below are optional\n\tclassificationString: classificationString,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const classificationString: glue.ClassificationString;\ndeclare const inputFormat: glue.InputFormat;\ndeclare const outputFormat: glue.OutputFormat;\ndeclare const serializationLibrary: glue.SerializationLibrary;\nconst dataFormatProps: glue.DataFormatProps = {\n  inputFormat: inputFormat,\n  outputFormat: outputFormat,\n  serializationLibrary: serializationLibrary,\n\n  // the properties below are optional\n  classificationString: classificationString,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.DataFormatProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.ClassificationString",
        "@aws-cdk/aws-glue.DataFormatProps",
        "@aws-cdk/aws-glue.InputFormat",
        "@aws-cdk/aws-glue.OutputFormat",
        "@aws-cdk/aws-glue.SerializationLibrary"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const classificationString: glue.ClassificationString;\ndeclare const inputFormat: glue.InputFormat;\ndeclare const outputFormat: glue.OutputFormat;\ndeclare const serializationLibrary: glue.SerializationLibrary;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst dataFormatProps: glue.DataFormatProps = {\n  inputFormat: inputFormat,\n  outputFormat: outputFormat,\n  serializationLibrary: serializationLibrary,\n\n  // the properties below are optional\n  classificationString: classificationString,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 24,
        "130": 4,
        "153": 5,
        "169": 5,
        "193": 1,
        "225": 5,
        "242": 5,
        "243": 5,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 4,
        "290": 1
      },
      "fqnsFingerprint": "f80ed451f6fb92d161842b55fff547a1301198943d25ea6406ccc69f4e97c9e5"
    },
    "9883e90a16bebef0ddc139d3d0678976b905ff62237f007657557e062036bff0": {
      "translations": {
        "python": {
          "source": "glue.Database(self, \"MyDatabase\",\n    database_name=\"my_database\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Database(this, \"MyDatabase\", new DatabaseProps {\n    DatabaseName = \"my_database\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Database.Builder.create(this, \"MyDatabase\")\n        .databaseName(\"my_database\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "glue.NewDatabase(this, jsii.String(\"MyDatabase\"), &databaseProps{\n\tdatabaseName: jsii.String(\"my_database\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "new glue.Database(this, 'MyDatabase', {\n  databaseName: 'my_database',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.Database"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.Database",
        "@aws-cdk/aws-glue.DatabaseProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew glue.Database(this, 'MyDatabase', {\n  databaseName: 'my_database',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 3,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 1
      },
      "fqnsFingerprint": "128e978528713814c452f9d87b02dd6791940e8bb731863f1e11b26b40900d1d"
    },
    "009a30dc51b11e2e47ddb0b13e77fc3f50aed8fd704c00e3cd0b9941f14eb43c": {
      "translations": {
        "python": {
          "source": "glue.Database(self, \"MyDatabase\",\n    database_name=\"my_database\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Database(this, \"MyDatabase\", new DatabaseProps {\n    DatabaseName = \"my_database\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Database.Builder.create(this, \"MyDatabase\")\n        .databaseName(\"my_database\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "glue.NewDatabase(this, jsii.String(\"MyDatabase\"), &databaseProps{\n\tdatabaseName: jsii.String(\"my_database\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "new glue.Database(this, 'MyDatabase', {\n  databaseName: 'my_database',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.DatabaseProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.Database",
        "@aws-cdk/aws-glue.DatabaseProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew glue.Database(this, 'MyDatabase', {\n  databaseName: 'my_database',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 3,
        "104": 1,
        "193": 1,
        "194": 1,
        "197": 1,
        "226": 1,
        "281": 1
      },
      "fqnsFingerprint": "128e978528713814c452f9d87b02dd6791940e8bb731863f1e11b26b40900d1d"
    },
    "2386400782ca6f23b0c2700eda922c3c0981eae8d26842f73c6f20cb5b6da3e4": {
      "translations": {
        "python": {
          "source": "# bucket: s3.Bucket\n\nglue.Job(self, \"PythonShellJob\",\n    executable=glue.JobExecutable.python_shell(\n        glue_version=glue.GlueVersion.V1_0,\n        python_version=glue.PythonVersion.THREE,\n        script=glue.Code.from_bucket(bucket, \"script.py\")\n    ),\n    description=\"an example Python Shell job\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket;\n\nnew Job(this, \"PythonShellJob\", new JobProps {\n    Executable = JobExecutable.PythonShell(new PythonShellExecutableProps {\n        GlueVersion = GlueVersion.V1_0,\n        PythonVersion = PythonVersion.THREE,\n        Script = Code.FromBucket(bucket, \"script.py\")\n    }),\n    Description = \"an example Python Shell job\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket;\n\nJob.Builder.create(this, \"PythonShellJob\")\n        .executable(JobExecutable.pythonShell(PythonShellExecutableProps.builder()\n                .glueVersion(GlueVersion.V1_0)\n                .pythonVersion(PythonVersion.THREE)\n                .script(Code.fromBucket(bucket, \"script.py\"))\n                .build()))\n        .description(\"an example Python Shell job\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var bucket bucket\nglue.NewJob(this, jsii.String(\"PythonShellJob\"), &jobProps{\n\texecutable: glue.jobExecutable.pythonShell(&pythonShellExecutableProps{\n\t\tglueVersion: glue.glueVersion_V1_0(),\n\t\tpythonVersion: glue.pythonVersion_THREE,\n\t\tscript: glue.code.fromBucket(bucket, jsii.String(\"script.py\")),\n\t}),\n\tdescription: jsii.String(\"an example Python Shell job\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const bucket: s3.Bucket;\nnew glue.Job(this, 'PythonShellJob', {\n  executable: glue.JobExecutable.pythonShell({\n    glueVersion: glue.GlueVersion.V1_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromBucket(bucket, 'script.py'),\n  }),\n  description: 'an example Python Shell job',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.GlueVersion"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.Code",
        "@aws-cdk/aws-glue.Code#fromBucket",
        "@aws-cdk/aws-glue.GlueVersion",
        "@aws-cdk/aws-glue.GlueVersion#V1_0",
        "@aws-cdk/aws-glue.Job",
        "@aws-cdk/aws-glue.JobExecutable",
        "@aws-cdk/aws-glue.JobExecutable#pythonShell",
        "@aws-cdk/aws-glue.JobProps",
        "@aws-cdk/aws-glue.PythonShellExecutableProps",
        "@aws-cdk/aws-glue.PythonVersion",
        "@aws-cdk/aws-glue.PythonVersion#THREE",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Job(this, 'PythonShellJob', {\n  executable: glue.JobExecutable.pythonShell({\n    glueVersion: glue.GlueVersion.V1_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromBucket(bucket, 'script.py'),\n  }),\n  description: 'an example Python Shell job',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 23,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 9,
        "196": 2,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "f4db3ad70afb1a025f6eb2c778539d099a36c20790a03b2badd556eb57fd15d4"
    },
    "28c0d07a1493aa79a6e4430f4d6bd0abd444c93c337df1bb741b3d548caa086c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ninput_format = glue.InputFormat.AVRO",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nInputFormat inputFormat = InputFormat.AVRO;",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nInputFormat inputFormat = InputFormat.AVRO;",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ninputFormat := glue.inputFormat_AVRO()",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst inputFormat = glue.InputFormat.AVRO;",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.InputFormat"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.InputFormat",
        "@aws-cdk/aws-glue.InputFormat#AVRO"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst inputFormat = glue.InputFormat.AVRO;\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 5,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "b85dc8ce656af60feb6fef4388b34edf7bd5f3d4f3db42500e3686bf3753d4a6"
    },
    "429ea5c1058accddb1ff798d7cac51371eb22add6ad491bf53600b129f2ab472": {
      "translations": {
        "python": {
          "source": "# bucket: s3.Bucket\n\nglue.Job(self, \"PythonShellJob\",\n    executable=glue.JobExecutable.python_shell(\n        glue_version=glue.GlueVersion.V1_0,\n        python_version=glue.PythonVersion.THREE,\n        script=glue.Code.from_bucket(bucket, \"script.py\")\n    ),\n    description=\"an example Python Shell job\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket;\n\nnew Job(this, \"PythonShellJob\", new JobProps {\n    Executable = JobExecutable.PythonShell(new PythonShellExecutableProps {\n        GlueVersion = GlueVersion.V1_0,\n        PythonVersion = PythonVersion.THREE,\n        Script = Code.FromBucket(bucket, \"script.py\")\n    }),\n    Description = \"an example Python Shell job\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket;\n\nJob.Builder.create(this, \"PythonShellJob\")\n        .executable(JobExecutable.pythonShell(PythonShellExecutableProps.builder()\n                .glueVersion(GlueVersion.V1_0)\n                .pythonVersion(PythonVersion.THREE)\n                .script(Code.fromBucket(bucket, \"script.py\"))\n                .build()))\n        .description(\"an example Python Shell job\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var bucket bucket\nglue.NewJob(this, jsii.String(\"PythonShellJob\"), &jobProps{\n\texecutable: glue.jobExecutable.pythonShell(&pythonShellExecutableProps{\n\t\tglueVersion: glue.glueVersion_V1_0(),\n\t\tpythonVersion: glue.pythonVersion_THREE,\n\t\tscript: glue.code.fromBucket(bucket, jsii.String(\"script.py\")),\n\t}),\n\tdescription: jsii.String(\"an example Python Shell job\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const bucket: s3.Bucket;\nnew glue.Job(this, 'PythonShellJob', {\n  executable: glue.JobExecutable.pythonShell({\n    glueVersion: glue.GlueVersion.V1_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromBucket(bucket, 'script.py'),\n  }),\n  description: 'an example Python Shell job',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.Job"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.Code",
        "@aws-cdk/aws-glue.Code#fromBucket",
        "@aws-cdk/aws-glue.GlueVersion",
        "@aws-cdk/aws-glue.GlueVersion#V1_0",
        "@aws-cdk/aws-glue.Job",
        "@aws-cdk/aws-glue.JobExecutable",
        "@aws-cdk/aws-glue.JobExecutable#pythonShell",
        "@aws-cdk/aws-glue.JobProps",
        "@aws-cdk/aws-glue.PythonShellExecutableProps",
        "@aws-cdk/aws-glue.PythonVersion",
        "@aws-cdk/aws-glue.PythonVersion#THREE",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Job(this, 'PythonShellJob', {\n  executable: glue.JobExecutable.pythonShell({\n    glueVersion: glue.GlueVersion.V1_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromBucket(bucket, 'script.py'),\n  }),\n  description: 'an example Python Shell job',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 23,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 9,
        "196": 2,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "f4db3ad70afb1a025f6eb2c778539d099a36c20790a03b2badd556eb57fd15d4"
    },
    "bd74e8072470832511449e443409f6d1565a23d37821991b95d76b4c13ece211": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\nimport aws_cdk.aws_iam as iam\n\n# role: iam.Role\n\njob_attributes = glue.JobAttributes(\n    job_name=\"jobName\",\n\n    # the properties below are optional\n    role=role\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\nusing Amazon.CDK.AWS.IAM;\n\nRole role;\n\nJobAttributes jobAttributes = new JobAttributes {\n    JobName = \"jobName\",\n\n    // the properties below are optional\n    Role = role\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\nimport software.amazon.awscdk.services.iam.*;\n\nRole role;\n\nJobAttributes jobAttributes = JobAttributes.builder()\n        .jobName(\"jobName\")\n\n        // the properties below are optional\n        .role(role)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"import iam \"github.com/aws-samples/dummy/awscdkawsiam\"\n\nvar role role\njobAttributes := &jobAttributes{\n\tjobName: jsii.String(\"jobName\"),\n\n\t// the properties below are optional\n\trole: role,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const role: iam.Role;\nconst jobAttributes: glue.JobAttributes = {\n  jobName: 'jobName',\n\n  // the properties below are optional\n  role: role,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.JobAttributes"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.JobAttributes",
        "@aws-cdk/aws-iam.IRole"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as iam from '@aws-cdk/aws-iam';\n\ndeclare const role: iam.Role;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jobAttributes: glue.JobAttributes = {\n  jobName: 'jobName',\n\n  // the properties below are optional\n  role: role,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 11,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "be4bcd2033fd761a78e945e7016da38c4038464abd4e7e9d3681c6653f1c059a"
    },
    "0a4de63372dbc7520ae96596b16184e55925404c9babb037181b50d64a775228": {
      "translations": {
        "python": {
          "source": "glue.SecurityConfiguration(self, \"MySecurityConfiguration\",\n    security_configuration_name=\"name\",\n    cloud_watch_encryption=glue.CloudWatchEncryption(\n        mode=glue.CloudWatchEncryptionMode.KMS\n    ),\n    job_bookmarks_encryption=glue.JobBookmarksEncryption(\n        mode=glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    ),\n    s3_encryption=glue.S3Encryption(\n        mode=glue.S3EncryptionMode.KMS\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new SecurityConfiguration(this, \"MySecurityConfiguration\", new SecurityConfigurationProps {\n    SecurityConfigurationName = \"name\",\n    CloudWatchEncryption = new CloudWatchEncryption {\n        Mode = CloudWatchEncryptionMode.KMS\n    },\n    JobBookmarksEncryption = new JobBookmarksEncryption {\n        Mode = JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    },\n    S3Encryption = new S3Encryption {\n        Mode = S3EncryptionMode.KMS\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "SecurityConfiguration.Builder.create(this, \"MySecurityConfiguration\")\n        .securityConfigurationName(\"name\")\n        .cloudWatchEncryption(CloudWatchEncryption.builder()\n                .mode(CloudWatchEncryptionMode.KMS)\n                .build())\n        .jobBookmarksEncryption(JobBookmarksEncryption.builder()\n                .mode(JobBookmarksEncryptionMode.CLIENT_SIDE_KMS)\n                .build())\n        .s3Encryption(S3Encryption.builder()\n                .mode(S3EncryptionMode.KMS)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "glue.NewSecurityConfiguration(this, jsii.String(\"MySecurityConfiguration\"), &securityConfigurationProps{\n\tsecurityConfigurationName: jsii.String(\"name\"),\n\tcloudWatchEncryption: &cloudWatchEncryption{\n\t\tmode: glue.cloudWatchEncryptionMode_KMS,\n\t},\n\tjobBookmarksEncryption: &jobBookmarksEncryption{\n\t\tmode: glue.jobBookmarksEncryptionMode_CLIENT_SIDE_KMS,\n\t},\n\ts3Encryption: &s3Encryption{\n\t\tmode: glue.s3EncryptionMode_KMS,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "new glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.JobBookmarksEncryption"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CloudWatchEncryption",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode#KMS",
        "@aws-cdk/aws-glue.JobBookmarksEncryption",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode#CLIENT_SIDE_KMS",
        "@aws-cdk/aws-glue.S3Encryption",
        "@aws-cdk/aws-glue.S3EncryptionMode",
        "@aws-cdk/aws-glue.S3EncryptionMode#KMS",
        "@aws-cdk/aws-glue.SecurityConfiguration",
        "@aws-cdk/aws-glue.SecurityConfigurationProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 18,
        "104": 1,
        "193": 4,
        "194": 7,
        "197": 1,
        "226": 1,
        "281": 7
      },
      "fqnsFingerprint": "c7cd61f9ca64e3a86fc7eb84139957d1d9fe135142c6ea30a7793e9d4764635e"
    },
    "cc209dd2fa5d1b15db7567990824877cbecd4a9b314c7cc5468ce955c027680d": {
      "translations": {
        "python": {
          "source": "glue.SecurityConfiguration(self, \"MySecurityConfiguration\",\n    security_configuration_name=\"name\",\n    cloud_watch_encryption=glue.CloudWatchEncryption(\n        mode=glue.CloudWatchEncryptionMode.KMS\n    ),\n    job_bookmarks_encryption=glue.JobBookmarksEncryption(\n        mode=glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    ),\n    s3_encryption=glue.S3Encryption(\n        mode=glue.S3EncryptionMode.KMS\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new SecurityConfiguration(this, \"MySecurityConfiguration\", new SecurityConfigurationProps {\n    SecurityConfigurationName = \"name\",\n    CloudWatchEncryption = new CloudWatchEncryption {\n        Mode = CloudWatchEncryptionMode.KMS\n    },\n    JobBookmarksEncryption = new JobBookmarksEncryption {\n        Mode = JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    },\n    S3Encryption = new S3Encryption {\n        Mode = S3EncryptionMode.KMS\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "SecurityConfiguration.Builder.create(this, \"MySecurityConfiguration\")\n        .securityConfigurationName(\"name\")\n        .cloudWatchEncryption(CloudWatchEncryption.builder()\n                .mode(CloudWatchEncryptionMode.KMS)\n                .build())\n        .jobBookmarksEncryption(JobBookmarksEncryption.builder()\n                .mode(JobBookmarksEncryptionMode.CLIENT_SIDE_KMS)\n                .build())\n        .s3Encryption(S3Encryption.builder()\n                .mode(S3EncryptionMode.KMS)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "glue.NewSecurityConfiguration(this, jsii.String(\"MySecurityConfiguration\"), &securityConfigurationProps{\n\tsecurityConfigurationName: jsii.String(\"name\"),\n\tcloudWatchEncryption: &cloudWatchEncryption{\n\t\tmode: glue.cloudWatchEncryptionMode_KMS,\n\t},\n\tjobBookmarksEncryption: &jobBookmarksEncryption{\n\t\tmode: glue.jobBookmarksEncryptionMode_CLIENT_SIDE_KMS,\n\t},\n\ts3Encryption: &s3Encryption{\n\t\tmode: glue.s3EncryptionMode_KMS,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "new glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.JobBookmarksEncryptionMode"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CloudWatchEncryption",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode#KMS",
        "@aws-cdk/aws-glue.JobBookmarksEncryption",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode#CLIENT_SIDE_KMS",
        "@aws-cdk/aws-glue.S3Encryption",
        "@aws-cdk/aws-glue.S3EncryptionMode",
        "@aws-cdk/aws-glue.S3EncryptionMode#KMS",
        "@aws-cdk/aws-glue.SecurityConfiguration",
        "@aws-cdk/aws-glue.SecurityConfigurationProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 18,
        "104": 1,
        "193": 4,
        "194": 7,
        "197": 1,
        "226": 1,
        "281": 7
      },
      "fqnsFingerprint": "c7cd61f9ca64e3a86fc7eb84139957d1d9fe135142c6ea30a7793e9d4764635e"
    },
    "86343a578459ec06f97909edfe8045bd17faee28ba207e9f280d36bee877dd1d": {
      "translations": {
        "python": {
          "source": "# bucket: s3.Bucket\n\nglue.Job(self, \"PythonShellJob\",\n    executable=glue.JobExecutable.python_shell(\n        glue_version=glue.GlueVersion.V1_0,\n        python_version=glue.PythonVersion.THREE,\n        script=glue.Code.from_bucket(bucket, \"script.py\")\n    ),\n    description=\"an example Python Shell job\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket;\n\nnew Job(this, \"PythonShellJob\", new JobProps {\n    Executable = JobExecutable.PythonShell(new PythonShellExecutableProps {\n        GlueVersion = GlueVersion.V1_0,\n        PythonVersion = PythonVersion.THREE,\n        Script = Code.FromBucket(bucket, \"script.py\")\n    }),\n    Description = \"an example Python Shell job\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket;\n\nJob.Builder.create(this, \"PythonShellJob\")\n        .executable(JobExecutable.pythonShell(PythonShellExecutableProps.builder()\n                .glueVersion(GlueVersion.V1_0)\n                .pythonVersion(PythonVersion.THREE)\n                .script(Code.fromBucket(bucket, \"script.py\"))\n                .build()))\n        .description(\"an example Python Shell job\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var bucket bucket\nglue.NewJob(this, jsii.String(\"PythonShellJob\"), &jobProps{\n\texecutable: glue.jobExecutable.pythonShell(&pythonShellExecutableProps{\n\t\tglueVersion: glue.glueVersion_V1_0(),\n\t\tpythonVersion: glue.pythonVersion_THREE,\n\t\tscript: glue.code.fromBucket(bucket, jsii.String(\"script.py\")),\n\t}),\n\tdescription: jsii.String(\"an example Python Shell job\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const bucket: s3.Bucket;\nnew glue.Job(this, 'PythonShellJob', {\n  executable: glue.JobExecutable.pythonShell({\n    glueVersion: glue.GlueVersion.V1_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromBucket(bucket, 'script.py'),\n  }),\n  description: 'an example Python Shell job',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.JobExecutable"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.Code",
        "@aws-cdk/aws-glue.Code#fromBucket",
        "@aws-cdk/aws-glue.GlueVersion",
        "@aws-cdk/aws-glue.GlueVersion#V1_0",
        "@aws-cdk/aws-glue.Job",
        "@aws-cdk/aws-glue.JobExecutable",
        "@aws-cdk/aws-glue.JobExecutable#pythonShell",
        "@aws-cdk/aws-glue.JobProps",
        "@aws-cdk/aws-glue.PythonShellExecutableProps",
        "@aws-cdk/aws-glue.PythonVersion",
        "@aws-cdk/aws-glue.PythonVersion#THREE",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Job(this, 'PythonShellJob', {\n  executable: glue.JobExecutable.pythonShell({\n    glueVersion: glue.GlueVersion.V1_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromBucket(bucket, 'script.py'),\n  }),\n  description: 'an example Python Shell job',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 23,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 9,
        "196": 2,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "f4db3ad70afb1a025f6eb2c778539d099a36c20790a03b2badd556eb57fd15d4"
    },
    "464b952132a40530f3f2ce0065e0574fd895836c3b2053c92c10233e5481786b": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\n# code: glue.Code\n# glue_version: glue.GlueVersion\n# job_type: glue.JobType\n\njob_executable_config = glue.JobExecutableConfig(\n    glue_version=glue_version,\n    language=glue.JobLanguage.SCALA,\n    script=code,\n    type=job_type,\n\n    # the properties below are optional\n    class_name=\"className\",\n    extra_files=[code],\n    extra_jars=[code],\n    extra_jars_first=False,\n    extra_python_files=[code],\n    python_version=glue.PythonVersion.TWO\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nCode code;\nGlueVersion glueVersion;\nJobType jobType;\n\nJobExecutableConfig jobExecutableConfig = new JobExecutableConfig {\n    GlueVersion = glueVersion,\n    Language = JobLanguage.SCALA,\n    Script = code,\n    Type = jobType,\n\n    // the properties below are optional\n    ClassName = \"className\",\n    ExtraFiles = new [] { code },\n    ExtraJars = new [] { code },\n    ExtraJarsFirst = false,\n    ExtraPythonFiles = new [] { code },\n    PythonVersion = PythonVersion.TWO\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nCode code;\nGlueVersion glueVersion;\nJobType jobType;\n\nJobExecutableConfig jobExecutableConfig = JobExecutableConfig.builder()\n        .glueVersion(glueVersion)\n        .language(JobLanguage.SCALA)\n        .script(code)\n        .type(jobType)\n\n        // the properties below are optional\n        .className(\"className\")\n        .extraFiles(List.of(code))\n        .extraJars(List.of(code))\n        .extraJarsFirst(false)\n        .extraPythonFiles(List.of(code))\n        .pythonVersion(PythonVersion.TWO)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\n\nvar code code\nvar glueVersion glueVersion\nvar jobType jobType\njobExecutableConfig := &jobExecutableConfig{\n\tglueVersion: glueVersion,\n\tlanguage: glue.jobLanguage_SCALA,\n\tscript: code,\n\ttype: jobType,\n\n\t// the properties below are optional\n\tclassName: jsii.String(\"className\"),\n\textraFiles: []*code{\n\t\tcode,\n\t},\n\textraJars: []*code{\n\t\tcode,\n\t},\n\textraJarsFirst: jsii.Boolean(false),\n\textraPythonFiles: []*code{\n\t\tcode,\n\t},\n\tpythonVersion: glue.pythonVersion_TWO,\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const code: glue.Code;\ndeclare const glueVersion: glue.GlueVersion;\ndeclare const jobType: glue.JobType;\nconst jobExecutableConfig: glue.JobExecutableConfig = {\n  glueVersion: glueVersion,\n  language: glue.JobLanguage.SCALA,\n  script: code,\n  type: jobType,\n\n  // the properties below are optional\n  className: 'className',\n  extraFiles: [code],\n  extraJars: [code],\n  extraJarsFirst: false,\n  extraPythonFiles: [code],\n  pythonVersion: glue.PythonVersion.TWO,\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.JobExecutableConfig"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.Code",
        "@aws-cdk/aws-glue.GlueVersion",
        "@aws-cdk/aws-glue.JobExecutableConfig",
        "@aws-cdk/aws-glue.JobLanguage",
        "@aws-cdk/aws-glue.JobLanguage#SCALA",
        "@aws-cdk/aws-glue.JobType",
        "@aws-cdk/aws-glue.PythonVersion",
        "@aws-cdk/aws-glue.PythonVersion#TWO"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n\ndeclare const code: glue.Code;\ndeclare const glueVersion: glue.GlueVersion;\ndeclare const jobType: glue.JobType;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jobExecutableConfig: glue.JobExecutableConfig = {\n  glueVersion: glueVersion,\n  language: glue.JobLanguage.SCALA,\n  script: code,\n  type: jobType,\n\n  // the properties below are optional\n  className: 'className',\n  extraFiles: [code],\n  extraJars: [code],\n  extraJarsFirst: false,\n  extraPythonFiles: [code],\n  pythonVersion: glue.PythonVersion.TWO,\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 35,
        "91": 1,
        "130": 3,
        "153": 4,
        "169": 4,
        "192": 3,
        "193": 1,
        "194": 4,
        "225": 4,
        "242": 4,
        "243": 4,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 10,
        "290": 1
      },
      "fqnsFingerprint": "8284b64a8ef8f19f972a5785631bca82481db5b20c1a4b2f284a7c2181125f68"
    },
    "294320aabe39f5cdab4a5d4b3b6bb0e2bdbd21b5a3582fec040a970a7448c87d": {
      "translations": {
        "python": {
          "source": "# bucket: s3.Bucket\n\nglue.Job(self, \"PythonShellJob\",\n    executable=glue.JobExecutable.python_shell(\n        glue_version=glue.GlueVersion.V1_0,\n        python_version=glue.PythonVersion.THREE,\n        script=glue.Code.from_bucket(bucket, \"script.py\")\n    ),\n    description=\"an example Python Shell job\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket;\n\nnew Job(this, \"PythonShellJob\", new JobProps {\n    Executable = JobExecutable.PythonShell(new PythonShellExecutableProps {\n        GlueVersion = GlueVersion.V1_0,\n        PythonVersion = PythonVersion.THREE,\n        Script = Code.FromBucket(bucket, \"script.py\")\n    }),\n    Description = \"an example Python Shell job\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket;\n\nJob.Builder.create(this, \"PythonShellJob\")\n        .executable(JobExecutable.pythonShell(PythonShellExecutableProps.builder()\n                .glueVersion(GlueVersion.V1_0)\n                .pythonVersion(PythonVersion.THREE)\n                .script(Code.fromBucket(bucket, \"script.py\"))\n                .build()))\n        .description(\"an example Python Shell job\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var bucket bucket\nglue.NewJob(this, jsii.String(\"PythonShellJob\"), &jobProps{\n\texecutable: glue.jobExecutable.pythonShell(&pythonShellExecutableProps{\n\t\tglueVersion: glue.glueVersion_V1_0(),\n\t\tpythonVersion: glue.pythonVersion_THREE,\n\t\tscript: glue.code.fromBucket(bucket, jsii.String(\"script.py\")),\n\t}),\n\tdescription: jsii.String(\"an example Python Shell job\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const bucket: s3.Bucket;\nnew glue.Job(this, 'PythonShellJob', {\n  executable: glue.JobExecutable.pythonShell({\n    glueVersion: glue.GlueVersion.V1_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromBucket(bucket, 'script.py'),\n  }),\n  description: 'an example Python Shell job',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.JobProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.Code",
        "@aws-cdk/aws-glue.Code#fromBucket",
        "@aws-cdk/aws-glue.GlueVersion",
        "@aws-cdk/aws-glue.GlueVersion#V1_0",
        "@aws-cdk/aws-glue.Job",
        "@aws-cdk/aws-glue.JobExecutable",
        "@aws-cdk/aws-glue.JobExecutable#pythonShell",
        "@aws-cdk/aws-glue.JobProps",
        "@aws-cdk/aws-glue.PythonShellExecutableProps",
        "@aws-cdk/aws-glue.PythonVersion",
        "@aws-cdk/aws-glue.PythonVersion#THREE",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Job(this, 'PythonShellJob', {\n  executable: glue.JobExecutable.pythonShell({\n    glueVersion: glue.GlueVersion.V1_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromBucket(bucket, 'script.py'),\n  }),\n  description: 'an example Python Shell job',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 23,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 9,
        "196": 2,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "f4db3ad70afb1a025f6eb2c778539d099a36c20790a03b2badd556eb57fd15d4"
    },
    "4ccb5b66dea12ee6ffa04bbe8b4c6fd1a034d7f8a1a8b4e5899282bd5d44190e": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\njob_type = glue.JobType.ETL",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nJobType jobType = JobType.ETL;",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nJobType jobType = JobType.ETL;",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\njobType := glue.jobType_ETL()",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst jobType = glue.JobType.ETL;",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.JobType"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.JobType",
        "@aws-cdk/aws-glue.JobType#ETL"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst jobType = glue.JobType.ETL;\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 5,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "b7913567e5e049ca4e6e0ba17753bc2d4acc156a545221cbf368995ec73e13df"
    },
    "94b1ce5a6d9a89ef77098019338779b920e6b01de3a9ef7d44e43efe30390d25": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\noutput_format = glue.OutputFormat(\"className\")",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nOutputFormat outputFormat = new OutputFormat(\"className\");",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nOutputFormat outputFormat = new OutputFormat(\"className\");",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\noutputFormat := glue.NewOutputFormat(jsii.String(\"className\"))",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst outputFormat = new glue.OutputFormat('className');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.OutputFormat"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.OutputFormat"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst outputFormat = new glue.OutputFormat('className');\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 2,
        "75": 4,
        "194": 1,
        "197": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "1d3d4f70a6e4f740b4fb1634c30baad7dfe1fb15aebd556d6754df5bc315431a"
    },
    "71108590e29d00cfab24f6070ab816b090c7c857eb11c357cb76dfa93066eae8": {
      "translations": {
        "python": {
          "source": "# my_table: glue.Table\n\nmy_table.add_partition_index(\n    index_name=\"my-index\",\n    key_names=[\"year\"]\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Table myTable;\n\nmyTable.AddPartitionIndex(new PartitionIndex {\n    IndexName = \"my-index\",\n    KeyNames = new [] { \"year\" }\n});",
          "version": "1"
        },
        "java": {
          "source": "Table myTable;\n\nmyTable.addPartitionIndex(PartitionIndex.builder()\n        .indexName(\"my-index\")\n        .keyNames(List.of(\"year\"))\n        .build());",
          "version": "1"
        },
        "go": {
          "source": "var myTable table\nmyTable.addPartitionIndex(&partitionIndex{\n\tindexName: jsii.String(\"my-index\"),\n\tkeyNames: []*string{\n\t\tjsii.String(\"year\"),\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myTable: glue.Table;\nmyTable.addPartitionIndex({\n  indexName: 'my-index',\n  keyNames: ['year'],\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.PartitionIndex"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.PartitionIndex",
        "@aws-cdk/aws-glue.Table#addPartitionIndex"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myTable: glue.Table;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nmyTable.addPartitionIndex({\n  indexName: 'my-index',\n  keyNames: ['year'],\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 7,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 1,
        "194": 1,
        "196": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "fc877896dba4be418d6d6c2a3be154f04a8dea5ad0159f51440fed2798594dae"
    },
    "b6ea72371f02fb3a29f5db7f4abaa8ea0fd42ba0bcc9ad6681c686e75ee8d659": {
      "translations": {
        "python": {
          "source": "# bucket: s3.Bucket\n\nglue.Job(self, \"PythonShellJob\",\n    executable=glue.JobExecutable.python_shell(\n        glue_version=glue.GlueVersion.V1_0,\n        python_version=glue.PythonVersion.THREE,\n        script=glue.Code.from_bucket(bucket, \"script.py\")\n    ),\n    description=\"an example Python Shell job\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket;\n\nnew Job(this, \"PythonShellJob\", new JobProps {\n    Executable = JobExecutable.PythonShell(new PythonShellExecutableProps {\n        GlueVersion = GlueVersion.V1_0,\n        PythonVersion = PythonVersion.THREE,\n        Script = Code.FromBucket(bucket, \"script.py\")\n    }),\n    Description = \"an example Python Shell job\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket;\n\nJob.Builder.create(this, \"PythonShellJob\")\n        .executable(JobExecutable.pythonShell(PythonShellExecutableProps.builder()\n                .glueVersion(GlueVersion.V1_0)\n                .pythonVersion(PythonVersion.THREE)\n                .script(Code.fromBucket(bucket, \"script.py\"))\n                .build()))\n        .description(\"an example Python Shell job\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var bucket bucket\nglue.NewJob(this, jsii.String(\"PythonShellJob\"), &jobProps{\n\texecutable: glue.jobExecutable.pythonShell(&pythonShellExecutableProps{\n\t\tglueVersion: glue.glueVersion_V1_0(),\n\t\tpythonVersion: glue.pythonVersion_THREE,\n\t\tscript: glue.code.fromBucket(bucket, jsii.String(\"script.py\")),\n\t}),\n\tdescription: jsii.String(\"an example Python Shell job\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const bucket: s3.Bucket;\nnew glue.Job(this, 'PythonShellJob', {\n  executable: glue.JobExecutable.pythonShell({\n    glueVersion: glue.GlueVersion.V1_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromBucket(bucket, 'script.py'),\n  }),\n  description: 'an example Python Shell job',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.PythonShellExecutableProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.Code",
        "@aws-cdk/aws-glue.Code#fromBucket",
        "@aws-cdk/aws-glue.GlueVersion",
        "@aws-cdk/aws-glue.GlueVersion#V1_0",
        "@aws-cdk/aws-glue.Job",
        "@aws-cdk/aws-glue.JobExecutable",
        "@aws-cdk/aws-glue.JobExecutable#pythonShell",
        "@aws-cdk/aws-glue.JobProps",
        "@aws-cdk/aws-glue.PythonShellExecutableProps",
        "@aws-cdk/aws-glue.PythonVersion",
        "@aws-cdk/aws-glue.PythonVersion#THREE",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Job(this, 'PythonShellJob', {\n  executable: glue.JobExecutable.pythonShell({\n    glueVersion: glue.GlueVersion.V1_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromBucket(bucket, 'script.py'),\n  }),\n  description: 'an example Python Shell job',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 23,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "193": 2,
        "194": 9,
        "196": 2,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 5,
        "290": 1
      },
      "fqnsFingerprint": "f4db3ad70afb1a025f6eb2c778539d099a36c20790a03b2badd556eb57fd15d4"
    },
    "2df1f802e1668126077b820e526383c2cc9399e0ccb4966659e71dfb59e2e48d": {
      "translations": {
        "python": {
          "source": "glue.Job(self, \"PythonSparkStreamingJob\",\n    executable=glue.JobExecutable.python_streaming(\n        glue_version=glue.GlueVersion.V2_0,\n        python_version=glue.PythonVersion.THREE,\n        script=glue.Code.from_asset(path.join(__dirname, \"job-script/hello_world.py\"))\n    ),\n    description=\"an example Python Streaming job\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Job(this, \"PythonSparkStreamingJob\", new JobProps {\n    Executable = JobExecutable.PythonStreaming(new PythonSparkJobExecutableProps {\n        GlueVersion = GlueVersion.V2_0,\n        PythonVersion = PythonVersion.THREE,\n        Script = Code.FromAsset(Join(__dirname, \"job-script/hello_world.py\"))\n    }),\n    Description = \"an example Python Streaming job\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Job.Builder.create(this, \"PythonSparkStreamingJob\")\n        .executable(JobExecutable.pythonStreaming(PythonSparkJobExecutableProps.builder()\n                .glueVersion(GlueVersion.V2_0)\n                .pythonVersion(PythonVersion.THREE)\n                .script(Code.fromAsset(join(__dirname, \"job-script/hello_world.py\")))\n                .build()))\n        .description(\"an example Python Streaming job\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "glue.NewJob(this, jsii.String(\"PythonSparkStreamingJob\"), &jobProps{\n\texecutable: glue.jobExecutable.pythonStreaming(&pythonSparkJobExecutableProps{\n\t\tglueVersion: glue.glueVersion_V2_0(),\n\t\tpythonVersion: glue.pythonVersion_THREE,\n\t\tscript: glue.code.fromAsset(path.join(__dirname, jsii.String(\"job-script/hello_world.py\"))),\n\t}),\n\tdescription: jsii.String(\"an example Python Streaming job\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "new glue.Job(this, 'PythonSparkStreamingJob', {\n  executable: glue.JobExecutable.pythonStreaming({\n    glueVersion: glue.GlueVersion.V2_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromAsset(path.join(__dirname, 'job-script/hello_world.py')),\n  }),\n  description: 'an example Python Streaming job',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.PythonSparkJobExecutableProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.Code",
        "@aws-cdk/aws-glue.Code#fromAsset",
        "@aws-cdk/aws-glue.GlueVersion",
        "@aws-cdk/aws-glue.GlueVersion#V2_0",
        "@aws-cdk/aws-glue.Job",
        "@aws-cdk/aws-glue.JobExecutable",
        "@aws-cdk/aws-glue.JobExecutable#pythonStreaming",
        "@aws-cdk/aws-glue.JobProps",
        "@aws-cdk/aws-glue.PythonSparkJobExecutableProps",
        "@aws-cdk/aws-glue.PythonVersion",
        "@aws-cdk/aws-glue.PythonVersion#THREE",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew glue.Job(this, 'PythonSparkStreamingJob', {\n  executable: glue.JobExecutable.pythonStreaming({\n    glueVersion: glue.GlueVersion.V2_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromAsset(path.join(__dirname, 'job-script/hello_world.py')),\n  }),\n  description: 'an example Python Streaming job',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 22,
        "104": 1,
        "193": 2,
        "194": 10,
        "196": 3,
        "197": 1,
        "226": 1,
        "281": 5
      },
      "fqnsFingerprint": "32a34c352e022f107a767dbbd6c1ecc8541050cf498e5386a51366b5ca072838"
    },
    "6f68b17978d8b9f10eef6e4cee3cbead0a2315e500138214be5410d9390cf7ee": {
      "translations": {
        "python": {
          "source": "glue.Job(self, \"PythonSparkStreamingJob\",\n    executable=glue.JobExecutable.python_streaming(\n        glue_version=glue.GlueVersion.V2_0,\n        python_version=glue.PythonVersion.THREE,\n        script=glue.Code.from_asset(path.join(__dirname, \"job-script/hello_world.py\"))\n    ),\n    description=\"an example Python Streaming job\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new Job(this, \"PythonSparkStreamingJob\", new JobProps {\n    Executable = JobExecutable.PythonStreaming(new PythonSparkJobExecutableProps {\n        GlueVersion = GlueVersion.V2_0,\n        PythonVersion = PythonVersion.THREE,\n        Script = Code.FromAsset(Join(__dirname, \"job-script/hello_world.py\"))\n    }),\n    Description = \"an example Python Streaming job\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Job.Builder.create(this, \"PythonSparkStreamingJob\")\n        .executable(JobExecutable.pythonStreaming(PythonSparkJobExecutableProps.builder()\n                .glueVersion(GlueVersion.V2_0)\n                .pythonVersion(PythonVersion.THREE)\n                .script(Code.fromAsset(join(__dirname, \"job-script/hello_world.py\")))\n                .build()))\n        .description(\"an example Python Streaming job\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "glue.NewJob(this, jsii.String(\"PythonSparkStreamingJob\"), &jobProps{\n\texecutable: glue.jobExecutable.pythonStreaming(&pythonSparkJobExecutableProps{\n\t\tglueVersion: glue.glueVersion_V2_0(),\n\t\tpythonVersion: glue.pythonVersion_THREE,\n\t\tscript: glue.code.fromAsset(path.join(__dirname, jsii.String(\"job-script/hello_world.py\"))),\n\t}),\n\tdescription: jsii.String(\"an example Python Streaming job\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "new glue.Job(this, 'PythonSparkStreamingJob', {\n  executable: glue.JobExecutable.pythonStreaming({\n    glueVersion: glue.GlueVersion.V2_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromAsset(path.join(__dirname, 'job-script/hello_world.py')),\n  }),\n  description: 'an example Python Streaming job',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.PythonVersion"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.Code",
        "@aws-cdk/aws-glue.Code#fromAsset",
        "@aws-cdk/aws-glue.GlueVersion",
        "@aws-cdk/aws-glue.GlueVersion#V2_0",
        "@aws-cdk/aws-glue.Job",
        "@aws-cdk/aws-glue.JobExecutable",
        "@aws-cdk/aws-glue.JobExecutable#pythonStreaming",
        "@aws-cdk/aws-glue.JobProps",
        "@aws-cdk/aws-glue.PythonSparkJobExecutableProps",
        "@aws-cdk/aws-glue.PythonVersion",
        "@aws-cdk/aws-glue.PythonVersion#THREE",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew glue.Job(this, 'PythonSparkStreamingJob', {\n  executable: glue.JobExecutable.pythonStreaming({\n    glueVersion: glue.GlueVersion.V2_0,\n    pythonVersion: glue.PythonVersion.THREE,\n    script: glue.Code.fromAsset(path.join(__dirname, 'job-script/hello_world.py')),\n  }),\n  description: 'an example Python Streaming job',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 22,
        "104": 1,
        "193": 2,
        "194": 10,
        "196": 3,
        "197": 1,
        "226": 1,
        "281": 5
      },
      "fqnsFingerprint": "32a34c352e022f107a767dbbd6c1ecc8541050cf498e5386a51366b5ca072838"
    },
    "4b2529094a133c412e4d811ab88a70e22b4209a0c2e086f340a529958f9de459": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\nimport aws_cdk.aws_s3 as s3\n\n# bucket: s3.Bucket\n\ns3_code = glue.S3Code(bucket, \"key\")",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\nusing Amazon.CDK.AWS.S3;\n\nBucket bucket;\n\nS3Code s3Code = new S3Code(bucket, \"key\");",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\nimport software.amazon.awscdk.services.s3.*;\n\nBucket bucket;\n\nS3Code s3Code = new S3Code(bucket, \"key\");",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar bucket bucket\ns3Code := glue.NewS3Code(bucket, jsii.String(\"key\"))",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\nconst s3Code = new glue.S3Code(bucket, 'key');",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.S3Code"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.S3Code",
        "@aws-cdk/aws-s3.IBucket"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst s3Code = new glue.S3Code(bucket, 'key');\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 9,
        "130": 1,
        "153": 1,
        "169": 1,
        "194": 1,
        "197": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "290": 1
      },
      "fqnsFingerprint": "07bb0faba59e1095b51659a82bb39884f0cfe09306c3fee6dafcaeff5965fdcd"
    },
    "c27016734da2f00e0226fe312ad1b92f013465a187426170c60a8229d3bdf5e1": {
      "translations": {
        "python": {
          "source": "glue.SecurityConfiguration(self, \"MySecurityConfiguration\",\n    security_configuration_name=\"name\",\n    cloud_watch_encryption=glue.CloudWatchEncryption(\n        mode=glue.CloudWatchEncryptionMode.KMS\n    ),\n    job_bookmarks_encryption=glue.JobBookmarksEncryption(\n        mode=glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    ),\n    s3_encryption=glue.S3Encryption(\n        mode=glue.S3EncryptionMode.KMS\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new SecurityConfiguration(this, \"MySecurityConfiguration\", new SecurityConfigurationProps {\n    SecurityConfigurationName = \"name\",\n    CloudWatchEncryption = new CloudWatchEncryption {\n        Mode = CloudWatchEncryptionMode.KMS\n    },\n    JobBookmarksEncryption = new JobBookmarksEncryption {\n        Mode = JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    },\n    S3Encryption = new S3Encryption {\n        Mode = S3EncryptionMode.KMS\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "SecurityConfiguration.Builder.create(this, \"MySecurityConfiguration\")\n        .securityConfigurationName(\"name\")\n        .cloudWatchEncryption(CloudWatchEncryption.builder()\n                .mode(CloudWatchEncryptionMode.KMS)\n                .build())\n        .jobBookmarksEncryption(JobBookmarksEncryption.builder()\n                .mode(JobBookmarksEncryptionMode.CLIENT_SIDE_KMS)\n                .build())\n        .s3Encryption(S3Encryption.builder()\n                .mode(S3EncryptionMode.KMS)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "glue.NewSecurityConfiguration(this, jsii.String(\"MySecurityConfiguration\"), &securityConfigurationProps{\n\tsecurityConfigurationName: jsii.String(\"name\"),\n\tcloudWatchEncryption: &cloudWatchEncryption{\n\t\tmode: glue.cloudWatchEncryptionMode_KMS,\n\t},\n\tjobBookmarksEncryption: &jobBookmarksEncryption{\n\t\tmode: glue.jobBookmarksEncryptionMode_CLIENT_SIDE_KMS,\n\t},\n\ts3Encryption: &s3Encryption{\n\t\tmode: glue.s3EncryptionMode_KMS,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "new glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.S3Encryption"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CloudWatchEncryption",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode#KMS",
        "@aws-cdk/aws-glue.JobBookmarksEncryption",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode#CLIENT_SIDE_KMS",
        "@aws-cdk/aws-glue.S3Encryption",
        "@aws-cdk/aws-glue.S3EncryptionMode",
        "@aws-cdk/aws-glue.S3EncryptionMode#KMS",
        "@aws-cdk/aws-glue.SecurityConfiguration",
        "@aws-cdk/aws-glue.SecurityConfigurationProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 18,
        "104": 1,
        "193": 4,
        "194": 7,
        "197": 1,
        "226": 1,
        "281": 7
      },
      "fqnsFingerprint": "c7cd61f9ca64e3a86fc7eb84139957d1d9fe135142c6ea30a7793e9d4764635e"
    },
    "8d20b6543c269385f44dd713c9c452c99f70d2cf7e631192895d81ce09341b92": {
      "translations": {
        "python": {
          "source": "glue.SecurityConfiguration(self, \"MySecurityConfiguration\",\n    security_configuration_name=\"name\",\n    cloud_watch_encryption=glue.CloudWatchEncryption(\n        mode=glue.CloudWatchEncryptionMode.KMS\n    ),\n    job_bookmarks_encryption=glue.JobBookmarksEncryption(\n        mode=glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    ),\n    s3_encryption=glue.S3Encryption(\n        mode=glue.S3EncryptionMode.KMS\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new SecurityConfiguration(this, \"MySecurityConfiguration\", new SecurityConfigurationProps {\n    SecurityConfigurationName = \"name\",\n    CloudWatchEncryption = new CloudWatchEncryption {\n        Mode = CloudWatchEncryptionMode.KMS\n    },\n    JobBookmarksEncryption = new JobBookmarksEncryption {\n        Mode = JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    },\n    S3Encryption = new S3Encryption {\n        Mode = S3EncryptionMode.KMS\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "SecurityConfiguration.Builder.create(this, \"MySecurityConfiguration\")\n        .securityConfigurationName(\"name\")\n        .cloudWatchEncryption(CloudWatchEncryption.builder()\n                .mode(CloudWatchEncryptionMode.KMS)\n                .build())\n        .jobBookmarksEncryption(JobBookmarksEncryption.builder()\n                .mode(JobBookmarksEncryptionMode.CLIENT_SIDE_KMS)\n                .build())\n        .s3Encryption(S3Encryption.builder()\n                .mode(S3EncryptionMode.KMS)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "glue.NewSecurityConfiguration(this, jsii.String(\"MySecurityConfiguration\"), &securityConfigurationProps{\n\tsecurityConfigurationName: jsii.String(\"name\"),\n\tcloudWatchEncryption: &cloudWatchEncryption{\n\t\tmode: glue.cloudWatchEncryptionMode_KMS,\n\t},\n\tjobBookmarksEncryption: &jobBookmarksEncryption{\n\t\tmode: glue.jobBookmarksEncryptionMode_CLIENT_SIDE_KMS,\n\t},\n\ts3Encryption: &s3Encryption{\n\t\tmode: glue.s3EncryptionMode_KMS,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "new glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.S3EncryptionMode"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CloudWatchEncryption",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode#KMS",
        "@aws-cdk/aws-glue.JobBookmarksEncryption",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode#CLIENT_SIDE_KMS",
        "@aws-cdk/aws-glue.S3Encryption",
        "@aws-cdk/aws-glue.S3EncryptionMode",
        "@aws-cdk/aws-glue.S3EncryptionMode#KMS",
        "@aws-cdk/aws-glue.SecurityConfiguration",
        "@aws-cdk/aws-glue.SecurityConfigurationProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 18,
        "104": 1,
        "193": 4,
        "194": 7,
        "197": 1,
        "226": 1,
        "281": 7
      },
      "fqnsFingerprint": "c7cd61f9ca64e3a86fc7eb84139957d1d9fe135142c6ea30a7793e9d4764635e"
    },
    "5be8f9556190567660d2e566c65983643b713780de6a4db45a29a4708d9ebbc4": {
      "translations": {
        "python": {
          "source": "# bucket: s3.Bucket\n\nglue.Job(self, \"ScalaSparkEtlJob\",\n    executable=glue.JobExecutable.scala_etl(\n        glue_version=glue.GlueVersion.V2_0,\n        script=glue.Code.from_bucket(bucket, \"src/com/example/HelloWorld.scala\"),\n        class_name=\"com.example.HelloWorld\",\n        extra_jars=[glue.Code.from_bucket(bucket, \"jars/HelloWorld.jar\")]\n    ),\n    description=\"an example Scala ETL job\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Bucket bucket;\n\nnew Job(this, \"ScalaSparkEtlJob\", new JobProps {\n    Executable = JobExecutable.ScalaEtl(new ScalaJobExecutableProps {\n        GlueVersion = GlueVersion.V2_0,\n        Script = Code.FromBucket(bucket, \"src/com/example/HelloWorld.scala\"),\n        ClassName = \"com.example.HelloWorld\",\n        ExtraJars = new [] { Code.FromBucket(bucket, \"jars/HelloWorld.jar\") }\n    }),\n    Description = \"an example Scala ETL job\"\n});",
          "version": "1"
        },
        "java": {
          "source": "Bucket bucket;\n\nJob.Builder.create(this, \"ScalaSparkEtlJob\")\n        .executable(JobExecutable.scalaEtl(ScalaJobExecutableProps.builder()\n                .glueVersion(GlueVersion.V2_0)\n                .script(Code.fromBucket(bucket, \"src/com/example/HelloWorld.scala\"))\n                .className(\"com.example.HelloWorld\")\n                .extraJars(List.of(Code.fromBucket(bucket, \"jars/HelloWorld.jar\")))\n                .build()))\n        .description(\"an example Scala ETL job\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var bucket bucket\nglue.NewJob(this, jsii.String(\"ScalaSparkEtlJob\"), &jobProps{\n\texecutable: glue.jobExecutable.scalaEtl(&scalaJobExecutableProps{\n\t\tglueVersion: glue.glueVersion_V2_0(),\n\t\tscript: glue.code.fromBucket(bucket, jsii.String(\"src/com/example/HelloWorld.scala\")),\n\t\tclassName: jsii.String(\"com.example.HelloWorld\"),\n\t\textraJars: []*code{\n\t\t\tglue.*code.fromBucket(bucket, jsii.String(\"jars/HelloWorld.jar\")),\n\t\t},\n\t}),\n\tdescription: jsii.String(\"an example Scala ETL job\"),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const bucket: s3.Bucket;\nnew glue.Job(this, 'ScalaSparkEtlJob', {\n  executable: glue.JobExecutable.scalaEtl({\n    glueVersion: glue.GlueVersion.V2_0,\n    script: glue.Code.fromBucket(bucket, 'src/com/example/HelloWorld.scala'),\n    className: 'com.example.HelloWorld',\n    extraJars: [glue.Code.fromBucket(bucket, 'jars/HelloWorld.jar')],\n  }),\n  description: 'an example Scala ETL job',\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.ScalaJobExecutableProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.Code",
        "@aws-cdk/aws-glue.Code#fromBucket",
        "@aws-cdk/aws-glue.GlueVersion",
        "@aws-cdk/aws-glue.GlueVersion#V2_0",
        "@aws-cdk/aws-glue.Job",
        "@aws-cdk/aws-glue.JobExecutable",
        "@aws-cdk/aws-glue.JobExecutable#scalaEtl",
        "@aws-cdk/aws-glue.JobProps",
        "@aws-cdk/aws-glue.ScalaJobExecutableProps",
        "@aws-cdk/aws-s3.IBucket",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Job(this, 'ScalaSparkEtlJob', {\n  executable: glue.JobExecutable.scalaEtl({\n    glueVersion: glue.GlueVersion.V2_0,\n    script: glue.Code.fromBucket(bucket, 'src/com/example/HelloWorld.scala'),\n    className: 'com.example.HelloWorld',\n    extraJars: [glue.Code.fromBucket(bucket, 'jars/HelloWorld.jar')],\n  }),\n  description: 'an example Scala ETL job',\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 25,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "194": 9,
        "196": 3,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 6,
        "290": 1
      },
      "fqnsFingerprint": "10674e350ddfee05411c24d2bb6d70bde0157ed986671f2dbe72c6677586c640"
    },
    "13469725db3ff68ebe46db0bf260ebdda633d2021790d1fdaf23180e6e2f29bc": {
      "translations": {
        "python": {
          "source": "# my_database: glue.Database\n\nglue.Table(self, \"MyTable\",\n    database=my_database,\n    table_name=\"my_table\",\n    columns=[glue.Column(\n        name=\"col1\",\n        type=glue.Schema.STRING\n    )],\n    partition_keys=[glue.Column(\n        name=\"year\",\n        type=glue.Schema.SMALL_INT\n    ), glue.Column(\n        name=\"month\",\n        type=glue.Schema.SMALL_INT\n    )],\n    data_format=glue.DataFormat.JSON\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Database myDatabase;\n\nnew Table(this, \"MyTable\", new TableProps {\n    Database = myDatabase,\n    TableName = \"my_table\",\n    Columns = new [] { new Column {\n        Name = \"col1\",\n        Type = Schema.STRING\n    } },\n    PartitionKeys = new [] { new Column {\n        Name = \"year\",\n        Type = Schema.SMALL_INT\n    }, new Column {\n        Name = \"month\",\n        Type = Schema.SMALL_INT\n    } },\n    DataFormat = DataFormat.JSON\n});",
          "version": "1"
        },
        "java": {
          "source": "Database myDatabase;\n\nTable.Builder.create(this, \"MyTable\")\n        .database(myDatabase)\n        .tableName(\"my_table\")\n        .columns(List.of(Column.builder()\n                .name(\"col1\")\n                .type(Schema.STRING)\n                .build()))\n        .partitionKeys(List.of(Column.builder()\n                .name(\"year\")\n                .type(Schema.SMALL_INT)\n                .build(), Column.builder()\n                .name(\"month\")\n                .type(Schema.SMALL_INT)\n                .build()))\n        .dataFormat(DataFormat.JSON)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var myDatabase database\nglue.NewTable(this, jsii.String(\"MyTable\"), &tableProps{\n\tdatabase: myDatabase,\n\ttableName: jsii.String(\"my_table\"),\n\tcolumns: []column{\n\t\t&column{\n\t\t\tname: jsii.String(\"col1\"),\n\t\t\ttype: glue.schema_STRING(),\n\t\t},\n\t},\n\tpartitionKeys: []*column{\n\t\t&column{\n\t\t\tname: jsii.String(\"year\"),\n\t\t\ttype: glue.*schema_SMALL_INT(),\n\t\t},\n\t\t&column{\n\t\t\tname: jsii.String(\"month\"),\n\t\t\ttype: glue.*schema_SMALL_INT(),\n\t\t},\n\t},\n\tdataFormat: glue.dataFormat_JSON(),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myDatabase: glue.Database;\nnew glue.Table(this, 'MyTable', {\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.Schema"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.DataFormat",
        "@aws-cdk/aws-glue.DataFormat#JSON",
        "@aws-cdk/aws-glue.IDatabase",
        "@aws-cdk/aws-glue.Schema",
        "@aws-cdk/aws-glue.Schema#SMALL_INT",
        "@aws-cdk/aws-glue.Schema#STRING",
        "@aws-cdk/aws-glue.Table",
        "@aws-cdk/aws-glue.TableProps",
        "@aws-cdk/aws-glue.Type",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myDatabase: glue.Database;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Table(this, 'MyTable', {\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 29,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 4,
        "194": 9,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "b95524d87731a58f5408c90f84d888c5d6b1c00b593b93f691483749430f37a4"
    },
    "1cf405a34754aac9a7fdb2e8fac14c7c508e15a21b6893a8028569dc28a00f6c": {
      "translations": {
        "python": {
          "source": "glue.SecurityConfiguration(self, \"MySecurityConfiguration\",\n    security_configuration_name=\"name\",\n    cloud_watch_encryption=glue.CloudWatchEncryption(\n        mode=glue.CloudWatchEncryptionMode.KMS\n    ),\n    job_bookmarks_encryption=glue.JobBookmarksEncryption(\n        mode=glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    ),\n    s3_encryption=glue.S3Encryption(\n        mode=glue.S3EncryptionMode.KMS\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new SecurityConfiguration(this, \"MySecurityConfiguration\", new SecurityConfigurationProps {\n    SecurityConfigurationName = \"name\",\n    CloudWatchEncryption = new CloudWatchEncryption {\n        Mode = CloudWatchEncryptionMode.KMS\n    },\n    JobBookmarksEncryption = new JobBookmarksEncryption {\n        Mode = JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    },\n    S3Encryption = new S3Encryption {\n        Mode = S3EncryptionMode.KMS\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "SecurityConfiguration.Builder.create(this, \"MySecurityConfiguration\")\n        .securityConfigurationName(\"name\")\n        .cloudWatchEncryption(CloudWatchEncryption.builder()\n                .mode(CloudWatchEncryptionMode.KMS)\n                .build())\n        .jobBookmarksEncryption(JobBookmarksEncryption.builder()\n                .mode(JobBookmarksEncryptionMode.CLIENT_SIDE_KMS)\n                .build())\n        .s3Encryption(S3Encryption.builder()\n                .mode(S3EncryptionMode.KMS)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "glue.NewSecurityConfiguration(this, jsii.String(\"MySecurityConfiguration\"), &securityConfigurationProps{\n\tsecurityConfigurationName: jsii.String(\"name\"),\n\tcloudWatchEncryption: &cloudWatchEncryption{\n\t\tmode: glue.cloudWatchEncryptionMode_KMS,\n\t},\n\tjobBookmarksEncryption: &jobBookmarksEncryption{\n\t\tmode: glue.jobBookmarksEncryptionMode_CLIENT_SIDE_KMS,\n\t},\n\ts3Encryption: &s3Encryption{\n\t\tmode: glue.s3EncryptionMode_KMS,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "new glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.SecurityConfiguration"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CloudWatchEncryption",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode#KMS",
        "@aws-cdk/aws-glue.JobBookmarksEncryption",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode#CLIENT_SIDE_KMS",
        "@aws-cdk/aws-glue.S3Encryption",
        "@aws-cdk/aws-glue.S3EncryptionMode",
        "@aws-cdk/aws-glue.S3EncryptionMode#KMS",
        "@aws-cdk/aws-glue.SecurityConfiguration",
        "@aws-cdk/aws-glue.SecurityConfigurationProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 18,
        "104": 1,
        "193": 4,
        "194": 7,
        "197": 1,
        "226": 1,
        "281": 7
      },
      "fqnsFingerprint": "c7cd61f9ca64e3a86fc7eb84139957d1d9fe135142c6ea30a7793e9d4764635e"
    },
    "27e4a2d9dff762cf1ad9b7bd894be68fbb1bfe7dc7c756ea976d48b164fd3382": {
      "translations": {
        "python": {
          "source": "glue.SecurityConfiguration(self, \"MySecurityConfiguration\",\n    security_configuration_name=\"name\",\n    cloud_watch_encryption=glue.CloudWatchEncryption(\n        mode=glue.CloudWatchEncryptionMode.KMS\n    ),\n    job_bookmarks_encryption=glue.JobBookmarksEncryption(\n        mode=glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    ),\n    s3_encryption=glue.S3Encryption(\n        mode=glue.S3EncryptionMode.KMS\n    )\n)",
          "version": "2"
        },
        "csharp": {
          "source": "new SecurityConfiguration(this, \"MySecurityConfiguration\", new SecurityConfigurationProps {\n    SecurityConfigurationName = \"name\",\n    CloudWatchEncryption = new CloudWatchEncryption {\n        Mode = CloudWatchEncryptionMode.KMS\n    },\n    JobBookmarksEncryption = new JobBookmarksEncryption {\n        Mode = JobBookmarksEncryptionMode.CLIENT_SIDE_KMS\n    },\n    S3Encryption = new S3Encryption {\n        Mode = S3EncryptionMode.KMS\n    }\n});",
          "version": "1"
        },
        "java": {
          "source": "SecurityConfiguration.Builder.create(this, \"MySecurityConfiguration\")\n        .securityConfigurationName(\"name\")\n        .cloudWatchEncryption(CloudWatchEncryption.builder()\n                .mode(CloudWatchEncryptionMode.KMS)\n                .build())\n        .jobBookmarksEncryption(JobBookmarksEncryption.builder()\n                .mode(JobBookmarksEncryptionMode.CLIENT_SIDE_KMS)\n                .build())\n        .s3Encryption(S3Encryption.builder()\n                .mode(S3EncryptionMode.KMS)\n                .build())\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "glue.NewSecurityConfiguration(this, jsii.String(\"MySecurityConfiguration\"), &securityConfigurationProps{\n\tsecurityConfigurationName: jsii.String(\"name\"),\n\tcloudWatchEncryption: &cloudWatchEncryption{\n\t\tmode: glue.cloudWatchEncryptionMode_KMS,\n\t},\n\tjobBookmarksEncryption: &jobBookmarksEncryption{\n\t\tmode: glue.jobBookmarksEncryptionMode_CLIENT_SIDE_KMS,\n\t},\n\ts3Encryption: &s3Encryption{\n\t\tmode: glue.s3EncryptionMode_KMS,\n\t},\n})",
          "version": "1"
        },
        "$": {
          "source": "new glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.SecurityConfigurationProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.CloudWatchEncryption",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode",
        "@aws-cdk/aws-glue.CloudWatchEncryptionMode#KMS",
        "@aws-cdk/aws-glue.JobBookmarksEncryption",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode",
        "@aws-cdk/aws-glue.JobBookmarksEncryptionMode#CLIENT_SIDE_KMS",
        "@aws-cdk/aws-glue.S3Encryption",
        "@aws-cdk/aws-glue.S3EncryptionMode",
        "@aws-cdk/aws-glue.S3EncryptionMode#KMS",
        "@aws-cdk/aws-glue.SecurityConfiguration",
        "@aws-cdk/aws-glue.SecurityConfigurationProps",
        "constructs.Construct"
      ],
      "fullSource": "// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\nnew glue.SecurityConfiguration(this, 'MySecurityConfiguration', {\n  securityConfigurationName: 'name',\n  cloudWatchEncryption: {\n    mode: glue.CloudWatchEncryptionMode.KMS,\n  },\n  jobBookmarksEncryption: {\n    mode: glue.JobBookmarksEncryptionMode.CLIENT_SIDE_KMS,\n  },\n  s3Encryption: {\n    mode: glue.S3EncryptionMode.KMS,\n  },\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 2,
        "75": 18,
        "104": 1,
        "193": 4,
        "194": 7,
        "197": 1,
        "226": 1,
        "281": 7
      },
      "fqnsFingerprint": "c7cd61f9ca64e3a86fc7eb84139957d1d9fe135142c6ea30a7793e9d4764635e"
    },
    "0455060b1bc4b3570a53b04d87143be04934455b08fa85e47c28609820248942": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nserialization_library = glue.SerializationLibrary.AVRO",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nSerializationLibrary serializationLibrary = SerializationLibrary.AVRO;",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nSerializationLibrary serializationLibrary = SerializationLibrary.AVRO;",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nserializationLibrary := glue.serializationLibrary_AVRO()",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst serializationLibrary = glue.SerializationLibrary.AVRO;",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.SerializationLibrary"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.SerializationLibrary",
        "@aws-cdk/aws-glue.SerializationLibrary#AVRO"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst serializationLibrary = glue.SerializationLibrary.AVRO;\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 5,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "e660601f03f653b9e641cbcef0c19c82285da25594190f2f02f853bfd62de27e"
    },
    "4c5ae7dc197bf46d63735998ce2df0f595c57958fa83ebda5cb7c5a0d16667b2": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\nimport aws_cdk.aws_s3 as s3\n\n# bucket: s3.Bucket\n\nspark_uILogging_location = glue.SparkUILoggingLocation(\n    bucket=bucket,\n\n    # the properties below are optional\n    prefix=\"prefix\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\nusing Amazon.CDK.AWS.S3;\n\nBucket bucket;\n\nSparkUILoggingLocation sparkUILoggingLocation = new SparkUILoggingLocation {\n    Bucket = bucket,\n\n    // the properties below are optional\n    Prefix = \"prefix\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\nimport software.amazon.awscdk.services.s3.*;\n\nBucket bucket;\n\nSparkUILoggingLocation sparkUILoggingLocation = SparkUILoggingLocation.builder()\n        .bucket(bucket)\n\n        // the properties below are optional\n        .prefix(\"prefix\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar bucket bucket\nsparkUILoggingLocation := &sparkUILoggingLocation{\n\tbucket: bucket,\n\n\t// the properties below are optional\n\tprefix: jsii.String(\"prefix\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\nconst sparkUILoggingLocation: glue.SparkUILoggingLocation = {\n  bucket: bucket,\n\n  // the properties below are optional\n  prefix: 'prefix',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.SparkUILoggingLocation"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.SparkUILoggingLocation",
        "@aws-cdk/aws-s3.IBucket"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sparkUILoggingLocation: glue.SparkUILoggingLocation = {\n  bucket: bucket,\n\n  // the properties below are optional\n  prefix: 'prefix',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 11,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "a2740f9178170dc2ec949c3262b1315b4a3f11550e54471df7fdafd0f45318f0"
    },
    "9604f9006be44db4ab3ce5c10ca487d9991a2c5b549059eb546758bcb2652946": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\nimport aws_cdk.aws_s3 as s3\n\n# bucket: s3.Bucket\n\nspark_uIProps = glue.SparkUIProps(\n    enabled=False,\n\n    # the properties below are optional\n    bucket=bucket,\n    prefix=\"prefix\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\nusing Amazon.CDK.AWS.S3;\n\nBucket bucket;\n\nSparkUIProps sparkUIProps = new SparkUIProps {\n    Enabled = false,\n\n    // the properties below are optional\n    Bucket = bucket,\n    Prefix = \"prefix\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\nimport software.amazon.awscdk.services.s3.*;\n\nBucket bucket;\n\nSparkUIProps sparkUIProps = SparkUIProps.builder()\n        .enabled(false)\n\n        // the properties below are optional\n        .bucket(bucket)\n        .prefix(\"prefix\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"import s3 \"github.com/aws-samples/dummy/awscdkawss3\"\n\nvar bucket bucket\nsparkUIProps := &sparkUIProps{\n\tenabled: jsii.Boolean(false),\n\n\t// the properties below are optional\n\tbucket: bucket,\n\tprefix: jsii.String(\"prefix\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\nconst sparkUIProps: glue.SparkUIProps = {\n  enabled: false,\n\n  // the properties below are optional\n  bucket: bucket,\n  prefix: 'prefix',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.SparkUIProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.SparkUIProps",
        "@aws-cdk/aws-s3.IBucket"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\n\ndeclare const bucket: s3.Bucket;\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst sparkUIProps: glue.SparkUIProps = {\n  enabled: false,\n\n  // the properties below are optional\n  bucket: bucket,\n  prefix: 'prefix',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 12,
        "91": 1,
        "130": 1,
        "153": 2,
        "169": 2,
        "193": 1,
        "225": 2,
        "242": 2,
        "243": 2,
        "254": 2,
        "255": 2,
        "256": 2,
        "281": 3,
        "290": 1
      },
      "fqnsFingerprint": "10a4017fd94906b36c7ade87973f44bab853ac08958e22ebd35abb6a72e34b5d"
    },
    "44210c51cf4e87f8374503618d2d9e843222a321b49742eb76c81f7ba073a1fc": {
      "translations": {
        "python": {
          "source": "# my_database: glue.Database\n\nglue.Table(self, \"MyTable\",\n    database=my_database,\n    table_name=\"my_table\",\n    columns=[glue.Column(\n        name=\"col1\",\n        type=glue.Schema.STRING\n    )],\n    partition_keys=[glue.Column(\n        name=\"year\",\n        type=glue.Schema.SMALL_INT\n    ), glue.Column(\n        name=\"month\",\n        type=glue.Schema.SMALL_INT\n    )],\n    data_format=glue.DataFormat.JSON\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Database myDatabase;\n\nnew Table(this, \"MyTable\", new TableProps {\n    Database = myDatabase,\n    TableName = \"my_table\",\n    Columns = new [] { new Column {\n        Name = \"col1\",\n        Type = Schema.STRING\n    } },\n    PartitionKeys = new [] { new Column {\n        Name = \"year\",\n        Type = Schema.SMALL_INT\n    }, new Column {\n        Name = \"month\",\n        Type = Schema.SMALL_INT\n    } },\n    DataFormat = DataFormat.JSON\n});",
          "version": "1"
        },
        "java": {
          "source": "Database myDatabase;\n\nTable.Builder.create(this, \"MyTable\")\n        .database(myDatabase)\n        .tableName(\"my_table\")\n        .columns(List.of(Column.builder()\n                .name(\"col1\")\n                .type(Schema.STRING)\n                .build()))\n        .partitionKeys(List.of(Column.builder()\n                .name(\"year\")\n                .type(Schema.SMALL_INT)\n                .build(), Column.builder()\n                .name(\"month\")\n                .type(Schema.SMALL_INT)\n                .build()))\n        .dataFormat(DataFormat.JSON)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var myDatabase database\nglue.NewTable(this, jsii.String(\"MyTable\"), &tableProps{\n\tdatabase: myDatabase,\n\ttableName: jsii.String(\"my_table\"),\n\tcolumns: []column{\n\t\t&column{\n\t\t\tname: jsii.String(\"col1\"),\n\t\t\ttype: glue.schema_STRING(),\n\t\t},\n\t},\n\tpartitionKeys: []*column{\n\t\t&column{\n\t\t\tname: jsii.String(\"year\"),\n\t\t\ttype: glue.*schema_SMALL_INT(),\n\t\t},\n\t\t&column{\n\t\t\tname: jsii.String(\"month\"),\n\t\t\ttype: glue.*schema_SMALL_INT(),\n\t\t},\n\t},\n\tdataFormat: glue.dataFormat_JSON(),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myDatabase: glue.Database;\nnew glue.Table(this, 'MyTable', {\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.Table"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.DataFormat",
        "@aws-cdk/aws-glue.DataFormat#JSON",
        "@aws-cdk/aws-glue.IDatabase",
        "@aws-cdk/aws-glue.Schema",
        "@aws-cdk/aws-glue.Schema#SMALL_INT",
        "@aws-cdk/aws-glue.Schema#STRING",
        "@aws-cdk/aws-glue.Table",
        "@aws-cdk/aws-glue.TableProps",
        "@aws-cdk/aws-glue.Type",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myDatabase: glue.Database;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Table(this, 'MyTable', {\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 29,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 4,
        "194": 9,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "b95524d87731a58f5408c90f84d888c5d6b1c00b593b93f691483749430f37a4"
    },
    "526c59713d3bd5c22aa2201413bd5ef5c1fe17ab9feb78e4dbc7e35d5dae8c9c": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\ntable_attributes = glue.TableAttributes(\n    table_arn=\"tableArn\",\n    table_name=\"tableName\"\n)",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nTableAttributes tableAttributes = new TableAttributes {\n    TableArn = \"tableArn\",\n    TableName = \"tableName\"\n};",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nTableAttributes tableAttributes = TableAttributes.builder()\n        .tableArn(\"tableArn\")\n        .tableName(\"tableName\")\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\ntableAttributes := &tableAttributes{\n\ttableArn: jsii.String(\"tableArn\"),\n\ttableName: jsii.String(\"tableName\"),\n}",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst tableAttributes: glue.TableAttributes = {\n  tableArn: 'tableArn',\n  tableName: 'tableName',\n};",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.TableAttributes"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.TableAttributes"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst tableAttributes: glue.TableAttributes = {\n  tableArn: 'tableArn',\n  tableName: 'tableName',\n};\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 3,
        "75": 6,
        "153": 1,
        "169": 1,
        "193": 1,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "281": 2,
        "290": 1
      },
      "fqnsFingerprint": "4e46e164fcba07c10a45e55ba8dff548da4099ca7d67db30293c77a8e5b1bada"
    },
    "068242dabb98429f7979114c31779ba19fa0337e82493ffe03c6992d0dff970c": {
      "translations": {
        "python": {
          "source": "# my_database: glue.Database\n\nglue.Table(self, \"MyTable\",\n    encryption=glue.TableEncryption.S3_MANAGED,\n    # ...\n    database=my_database,\n    table_name=\"my_table\",\n    columns=[glue.Column(\n        name=\"col1\",\n        type=glue.Schema.STRING\n    )],\n    data_format=glue.DataFormat.JSON\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Database myDatabase;\n\nnew Table(this, \"MyTable\", new TableProps {\n    Encryption = TableEncryption.S3_MANAGED,\n    // ...\n    Database = myDatabase,\n    TableName = \"my_table\",\n    Columns = new [] { new Column {\n        Name = \"col1\",\n        Type = Schema.STRING\n    } },\n    DataFormat = DataFormat.JSON\n});",
          "version": "1"
        },
        "java": {
          "source": "Database myDatabase;\n\nTable.Builder.create(this, \"MyTable\")\n        .encryption(TableEncryption.S3_MANAGED)\n        // ...\n        .database(myDatabase)\n        .tableName(\"my_table\")\n        .columns(List.of(Column.builder()\n                .name(\"col1\")\n                .type(Schema.STRING)\n                .build()))\n        .dataFormat(DataFormat.JSON)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var myDatabase database\nglue.NewTable(this, jsii.String(\"MyTable\"), &tableProps{\n\tencryption: glue.tableEncryption_S3_MANAGED,\n\t// ...\n\tdatabase: myDatabase,\n\ttableName: jsii.String(\"my_table\"),\n\tcolumns: []column{\n\t\t&column{\n\t\t\tname: jsii.String(\"col1\"),\n\t\t\ttype: glue.schema_STRING(),\n\t\t},\n\t},\n\tdataFormat: glue.dataFormat_JSON(),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myDatabase: glue.Database;\nnew glue.Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.S3_MANAGED,\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.TableEncryption"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.DataFormat",
        "@aws-cdk/aws-glue.DataFormat#JSON",
        "@aws-cdk/aws-glue.IDatabase",
        "@aws-cdk/aws-glue.Schema",
        "@aws-cdk/aws-glue.Schema#STRING",
        "@aws-cdk/aws-glue.Table",
        "@aws-cdk/aws-glue.TableEncryption",
        "@aws-cdk/aws-glue.TableEncryption#S3_MANAGED",
        "@aws-cdk/aws-glue.TableProps",
        "@aws-cdk/aws-glue.Type",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myDatabase: glue.Database;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Table(this, 'MyTable', {\n  encryption: glue.TableEncryption.S3_MANAGED,\n  // ...\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 3,
        "75": 22,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 1,
        "193": 2,
        "194": 7,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 7,
        "290": 1
      },
      "fqnsFingerprint": "ccae663b7d439e8d2c92953bfbf24b3dbb5600e9920780413528646950dafd27"
    },
    "9255c987fd2604a7cf6513914072463ced890046146dd5948e36ae9975367f76": {
      "translations": {
        "python": {
          "source": "# my_database: glue.Database\n\nglue.Table(self, \"MyTable\",\n    database=my_database,\n    table_name=\"my_table\",\n    columns=[glue.Column(\n        name=\"col1\",\n        type=glue.Schema.STRING\n    )],\n    partition_keys=[glue.Column(\n        name=\"year\",\n        type=glue.Schema.SMALL_INT\n    ), glue.Column(\n        name=\"month\",\n        type=glue.Schema.SMALL_INT\n    )],\n    data_format=glue.DataFormat.JSON\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Database myDatabase;\n\nnew Table(this, \"MyTable\", new TableProps {\n    Database = myDatabase,\n    TableName = \"my_table\",\n    Columns = new [] { new Column {\n        Name = \"col1\",\n        Type = Schema.STRING\n    } },\n    PartitionKeys = new [] { new Column {\n        Name = \"year\",\n        Type = Schema.SMALL_INT\n    }, new Column {\n        Name = \"month\",\n        Type = Schema.SMALL_INT\n    } },\n    DataFormat = DataFormat.JSON\n});",
          "version": "1"
        },
        "java": {
          "source": "Database myDatabase;\n\nTable.Builder.create(this, \"MyTable\")\n        .database(myDatabase)\n        .tableName(\"my_table\")\n        .columns(List.of(Column.builder()\n                .name(\"col1\")\n                .type(Schema.STRING)\n                .build()))\n        .partitionKeys(List.of(Column.builder()\n                .name(\"year\")\n                .type(Schema.SMALL_INT)\n                .build(), Column.builder()\n                .name(\"month\")\n                .type(Schema.SMALL_INT)\n                .build()))\n        .dataFormat(DataFormat.JSON)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var myDatabase database\nglue.NewTable(this, jsii.String(\"MyTable\"), &tableProps{\n\tdatabase: myDatabase,\n\ttableName: jsii.String(\"my_table\"),\n\tcolumns: []column{\n\t\t&column{\n\t\t\tname: jsii.String(\"col1\"),\n\t\t\ttype: glue.schema_STRING(),\n\t\t},\n\t},\n\tpartitionKeys: []*column{\n\t\t&column{\n\t\t\tname: jsii.String(\"year\"),\n\t\t\ttype: glue.*schema_SMALL_INT(),\n\t\t},\n\t\t&column{\n\t\t\tname: jsii.String(\"month\"),\n\t\t\ttype: glue.*schema_SMALL_INT(),\n\t\t},\n\t},\n\tdataFormat: glue.dataFormat_JSON(),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myDatabase: glue.Database;\nnew glue.Table(this, 'MyTable', {\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.TableProps"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.DataFormat",
        "@aws-cdk/aws-glue.DataFormat#JSON",
        "@aws-cdk/aws-glue.IDatabase",
        "@aws-cdk/aws-glue.Schema",
        "@aws-cdk/aws-glue.Schema#SMALL_INT",
        "@aws-cdk/aws-glue.Schema#STRING",
        "@aws-cdk/aws-glue.Table",
        "@aws-cdk/aws-glue.TableProps",
        "@aws-cdk/aws-glue.Type",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myDatabase: glue.Database;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Table(this, 'MyTable', {\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 29,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 4,
        "194": 9,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "b95524d87731a58f5408c90f84d888c5d6b1c00b593b93f691483749430f37a4"
    },
    "947f74ec5ad1ac1999e20fc01b5b8dcc1090973f07003dfdf44bc61cfb0d08fd": {
      "translations": {
        "python": {
          "source": "# my_database: glue.Database\n\nglue.Table(self, \"MyTable\",\n    database=my_database,\n    table_name=\"my_table\",\n    columns=[glue.Column(\n        name=\"col1\",\n        type=glue.Schema.STRING\n    )],\n    partition_keys=[glue.Column(\n        name=\"year\",\n        type=glue.Schema.SMALL_INT\n    ), glue.Column(\n        name=\"month\",\n        type=glue.Schema.SMALL_INT\n    )],\n    data_format=glue.DataFormat.JSON\n)",
          "version": "2"
        },
        "csharp": {
          "source": "Database myDatabase;\n\nnew Table(this, \"MyTable\", new TableProps {\n    Database = myDatabase,\n    TableName = \"my_table\",\n    Columns = new [] { new Column {\n        Name = \"col1\",\n        Type = Schema.STRING\n    } },\n    PartitionKeys = new [] { new Column {\n        Name = \"year\",\n        Type = Schema.SMALL_INT\n    }, new Column {\n        Name = \"month\",\n        Type = Schema.SMALL_INT\n    } },\n    DataFormat = DataFormat.JSON\n});",
          "version": "1"
        },
        "java": {
          "source": "Database myDatabase;\n\nTable.Builder.create(this, \"MyTable\")\n        .database(myDatabase)\n        .tableName(\"my_table\")\n        .columns(List.of(Column.builder()\n                .name(\"col1\")\n                .type(Schema.STRING)\n                .build()))\n        .partitionKeys(List.of(Column.builder()\n                .name(\"year\")\n                .type(Schema.SMALL_INT)\n                .build(), Column.builder()\n                .name(\"month\")\n                .type(Schema.SMALL_INT)\n                .build()))\n        .dataFormat(DataFormat.JSON)\n        .build();",
          "version": "1"
        },
        "go": {
          "source": "var myDatabase database\nglue.NewTable(this, jsii.String(\"MyTable\"), &tableProps{\n\tdatabase: myDatabase,\n\ttableName: jsii.String(\"my_table\"),\n\tcolumns: []column{\n\t\t&column{\n\t\t\tname: jsii.String(\"col1\"),\n\t\t\ttype: glue.schema_STRING(),\n\t\t},\n\t},\n\tpartitionKeys: []*column{\n\t\t&column{\n\t\t\tname: jsii.String(\"year\"),\n\t\t\ttype: glue.*schema_SMALL_INT(),\n\t\t},\n\t\t&column{\n\t\t\tname: jsii.String(\"month\"),\n\t\t\ttype: glue.*schema_SMALL_INT(),\n\t\t},\n\t},\n\tdataFormat: glue.dataFormat_JSON(),\n})",
          "version": "1"
        },
        "$": {
          "source": "declare const myDatabase: glue.Database;\nnew glue.Table(this, 'MyTable', {\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.Type"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.DataFormat",
        "@aws-cdk/aws-glue.DataFormat#JSON",
        "@aws-cdk/aws-glue.IDatabase",
        "@aws-cdk/aws-glue.Schema",
        "@aws-cdk/aws-glue.Schema#SMALL_INT",
        "@aws-cdk/aws-glue.Schema#STRING",
        "@aws-cdk/aws-glue.Table",
        "@aws-cdk/aws-glue.TableProps",
        "@aws-cdk/aws-glue.Type",
        "constructs.Construct"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\ndeclare const myDatabase: glue.Database;\n/// !hide\n// Hoisted imports ended before !hide marker above\n// Fixture with packages imported, but nothing else\nimport * as path from 'path';\nimport { Construct } from 'constructs';\nimport { Stack } from '@aws-cdk/core';\nimport * as glue from '@aws-cdk/aws-glue';\nimport * as s3 from '@aws-cdk/aws-s3';\nimport * as ec2 from '@aws-cdk/aws-ec2';\nimport * as kms from '@aws-cdk/aws-kms';\n\nclass Fixture extends Stack {\n  constructor(scope: Construct, id: string) {\n    super(scope, id);\n\n    // Code snippet begins after !show marker below\n/// !show\n\nnew glue.Table(this, 'MyTable', {\n  database: myDatabase,\n  tableName: 'my_table',\n  columns: [{\n    name: 'col1',\n    type: glue.Schema.STRING,\n  }],\n  partitionKeys: [{\n    name: 'year',\n    type: glue.Schema.SMALL_INT,\n  }, {\n    name: 'month',\n    type: glue.Schema.SMALL_INT,\n  }],\n  dataFormat: glue.DataFormat.JSON,\n});\n/// !hide\n// Code snippet ended before !hide marker above\n  }\n}\n",
      "syntaxKindCounter": {
        "10": 5,
        "75": 29,
        "104": 1,
        "130": 1,
        "153": 1,
        "169": 1,
        "192": 2,
        "193": 4,
        "194": 9,
        "197": 1,
        "225": 1,
        "226": 1,
        "242": 1,
        "243": 1,
        "281": 11,
        "290": 1
      },
      "fqnsFingerprint": "b95524d87731a58f5408c90f84d888c5d6b1c00b593b93f691483749430f37a4"
    },
    "be2ac4fb8d6761474e7de0fe89bb4dfed682c2b304417bbb624b8e8d7bfc6579": {
      "translations": {
        "python": {
          "source": "# The code below shows an example of how to instantiate this type.\n# The values are placeholders you should change.\nimport aws_cdk.aws_glue as glue\n\nworker_type = glue.WorkerType.G_1X",
          "version": "2"
        },
        "csharp": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nusing Amazon.CDK.AWS.Glue;\n\nWorkerType workerType = WorkerType.G_1X;",
          "version": "1"
        },
        "java": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport software.amazon.awscdk.services.glue.*;\n\nWorkerType workerType = WorkerType.G_1X;",
          "version": "1"
        },
        "go": {
          "source": "import glue \"github.com/aws-samples/dummy/awscdkawsglue\"\nworkerType := glue.workerType_G_1X()",
          "version": "1"
        },
        "$": {
          "source": "// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\nconst workerType = glue.WorkerType.G_1X;",
          "version": "0"
        }
      },
      "location": {
        "api": {
          "api": "type",
          "fqn": "@aws-cdk/aws-glue.WorkerType"
        },
        "field": {
          "field": "example"
        }
      },
      "didCompile": true,
      "fqnsReferenced": [
        "@aws-cdk/aws-glue.WorkerType",
        "@aws-cdk/aws-glue.WorkerType#G_1X"
      ],
      "fullSource": "// Hoisted imports begin after !show marker below\n/// !show\n// The code below shows an example of how to instantiate this type.\n// The values are placeholders you should change.\nimport * as glue from '@aws-cdk/aws-glue';\n/// !hide\n// Hoisted imports ended before !hide marker above\nimport { Construct } from \"@aws-cdk/core\";\nclass MyConstruct extends Construct {\nconstructor(scope: Construct, id: string) {\nsuper(scope, id);\n// Code snippet begins after !show marker below\n/// !show\n\nconst workerType = glue.WorkerType.G_1X;\n/// !hide\n// Code snippet ended before !hide marker above\n} }",
      "syntaxKindCounter": {
        "10": 1,
        "75": 5,
        "194": 2,
        "225": 1,
        "242": 1,
        "243": 1,
        "254": 1,
        "255": 1,
        "256": 1,
        "290": 1
      },
      "fqnsFingerprint": "994a86e1668e74f1b5c2823102fcb6e09b83272080a282df7d8d46e866324915"
    }
  }
}
